Classifier,Count,Cycle,Split,Train Acc,Test Acc,F1 Score,Train Time (ms),clfs per ms,Confusion Matrix,Params
KNN,Full,0,0,1.0,0.9784172661870504,5.865297033516944,109.33666229248047,33.70192270100588,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   1 144   0   1   0]
 [  0   0   0  99   2   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,1,1.0,0.9622302158273381,5.768193732961197,103.54030132293701,79.16957443863075,"[[ 58   0   1   0   0   0]
 [  2  74   4   1   0   0]
 [  0   0 144   2   0   0]
 [  0   2   0  96   2   1]
 [  0   0   0   0  73   1]
 [  0   0   0   1   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,2,1.0,0.9747747747747748,5.851427737623165,99.54273700714111,80.46510276554548,"[[ 59   0   0   0   0   0]
 [  2  74   3   0   0   1]
 [  0   0 145   1   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   1   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,3,1.0,0.9585585585585585,5.774410761068528,91.04740619659424,58.69254596056205,"[[ 59   0   0   0   0   0]
 [  0  74   5   0   1   0]
 [  0   1 137   6   2   0]
 [  0   0   2  96   3   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,4,1.0,0.963963963963964,5.771236269831512,98.34296703338623,74.45987233385918,"[[ 55   3   1   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   3  69   2]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,5,1.0,0.9620938628158845,5.769106487630669,100.24240016937256,74.47904903678773,"[[ 59   0   0   0   0   0]
 [  3  74   2   1   0   0]
 [  0   1 141   3   1   0]
 [  0   0   2  97   2   0]
 [  0   0   0   0  69   5]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,6,1.0,0.9855595667870036,5.926422046687443,95.64733505249023,74.47480612293538,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   0  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,7,1.0,0.9638336347197106,5.79264723402886,98.54369163513184,71.30068076593078,"[[ 57   2   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 141   4   1   0]
 [  0   0   3  96   1   1]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,8,1.0,0.9728260869565217,5.83461438909117,93.84615421295166,79.23820122411847,"[[ 57   0   1   1   0   0]
 [  0  77   2   1   0   0]
 [  0   2 141   1   1   0]
 [  0   0   0 100   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,0,9,1.0,0.9637023593466425,5.803548511362485,98.74327182769775,81.84919951842407,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   1 138   6   0   0]
 [  0   0   3  94   3   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,0,1.0,0.9640287769784173,5.789415580877778,111.83569431304932,58.6802804261238,"[[ 57   0   2   0   0   0]
 [  1  78   2   0   0   0]
 [  0   2 141   3   0   0]
 [  0   1   1  94   4   1]
 [  0   0   0   0  74   0]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,1,1.0,0.9640287769784173,5.793784303116022,105.43951988220215,77.9348875615418,"[[ 59   0   0   0   0   0]
 [  1  72   8   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   0  99   2   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,2,1.0,0.963963963963964,5.7817785734171405,105.83977699279785,81.78262945679897,"[[ 58   0   1   0   0   0]
 [  3  75   1   1   0   0]
 [  0   1 140   4   1   0]
 [  0   0   1  99   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,3,1.0,0.9693693693693693,5.818884471775407,97.6435899734497,80.46541236816945,"[[ 57   2   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,4,1.0,0.9747747747747748,5.858332209641697,110.23693084716797,66.51844277896313,"[[ 58   0   1   0   0   0]
 [  0  75   3   1   0   1]
 [  0   0 143   2   1   0]
 [  0   0   2  99   0   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,5,1.0,0.9729241877256317,5.846549670775001,93.0473804473877,72.30133820837234,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   2  96   2   1]
 [  0   0   0   0  70   4]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,6,1.0,0.9783393501805054,5.869683674029513,89.04869556427002,69.30172798048315,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 144   1   1   0]
 [  0   0   1 100   0   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,7,1.0,0.9656419529837251,5.795518453672329,92.24717617034912,72.32733642296171,"[[ 58   0   1   0   0   0]
 [  0  76   2   2   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  95   3   1]
 [  0   0   0   1  69   3]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,8,1.0,0.9728260869565217,5.840778001053603,100.4427433013916,75.63792293452696,"[[ 59   0   0   0   0   0]
 [  1  77   1   0   1   0]
 [  0   1 141   3   0   0]
 [  0   0   2  97   2   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,1,9,1.0,0.9673321234119783,5.806676387016459,99.84266757965088,69.3431876634523,"[[ 58   0   0   1   0   0]
 [  1  76   3   0   0   0]
 [  0   0 140   4   1   0]
 [  0   0   1  97   2   0]
 [  0   0   0   0  69   4]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,0,1.0,0.9730215827338129,5.837715217107219,90.94774723052979,69.27462358512447,"[[ 58   0   0   1   0   0]
 [  0  76   3   2   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,1,1.0,0.9694244604316546,5.824320390709205,88.749098777771,56.68024473554846,"[[ 59   0   0   0   0   0]
 [  0  78   3   0   0   0]
 [  0   2 141   3   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  70   4]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,2,1.0,0.9621621621621622,5.7674220396362195,95.14503479003906,72.2998355881112,"[[ 57   2   0   0   0   0]
 [  3  75   1   1   0   0]
 [  0   0 143   2   1   0]
 [  0   0   4  93   4   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,3,1.0,0.9765765765765766,5.862930393383582,109.93680953979492,74.45589583867452,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  98   2   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,4,1.0,0.9747747747747748,5.8540072227586535,97.44396209716797,65.64193912446656,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 142   3   1   0]
 [  0   0   2  98   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,5,1.0,0.9693140794223827,5.829786910556542,107.33788013458252,71.27982732161647,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   2 141   2   1   0]
 [  0   0   2  96   3   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,6,1.0,0.9638989169675091,5.7988076790515475,89.94808197021484,79.20283704918627,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   1 140   4   1   0]
 [  0   0   2  96   3   0]
 [  0   0   0   3  71   0]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,7,1.0,0.9783001808318263,5.878987209574926,100.34267902374268,79.22261863469056,"[[ 58   0   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 141   4   1   0]
 [  0   0   0 100   1   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,8,1.0,0.9619565217391305,5.764917765447949,93.94619464874268,70.3074071092512,"[[ 58   0   1   0   0   0]
 [  3  73   2   0   1   1]
 [  0   1 141   2   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,2,9,1.0,0.9600725952813067,5.760540659814411,95.04451751708984,75.64870877616025,"[[ 58   0   1   0   0   0]
 [  1  74   4   1   0   0]
 [  0   0 142   3   0   0]
 [  0   2   1  94   3   0]
 [  0   0   0   1  69   3]
 [  0   0   0   1   1  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,0,1.0,0.9550359712230215,5.736485466982722,120.73097229003906,72.28658456710484,"[[ 59   0   0   0   0   0]
 [  1  73   7   0   0   0]
 [  0   1 142   2   1   0]
 [  0   1   2  96   1   1]
 [  0   0   0   2  69   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,1,1.0,0.9748201438848921,5.8549083379083395,98.64327907562256,69.27577121139444,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   2 142   2   0   0]
 [  0   0   1  99   1   0]
 [  0   0   1   2  70   1]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,2,1.0,0.9693693693693693,5.8147798657973535,102.44121551513672,76.7523873868341,"[[ 58   0   1   0   0   0]
 [  3  72   3   1   0   1]
 [  0   0 142   4   0   0]
 [  0   0   0  99   1   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,3,1.0,0.9657657657657658,5.794220000946791,95.44515609741211,70.26583791530683,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  98   2   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   7  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,4,1.0,0.9765765765765766,5.870240454349804,94.84593868255615,73.36434410214305,"[[ 58   0   0   1   0   0]
 [  1  76   2   1   0   0]
 [  0   0 141   3   2   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   0  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,5,1.0,0.9675090252707581,5.807617533536397,90.14794826507568,73.37931559286247,"[[ 58   0   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   1  96   4   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,6,1.0,0.9657039711191335,5.7980992218680045,97.44429588317871,76.76496360362016,"[[ 59   0   0   0   0   0]
 [  1  74   3   1   1   0]
 [  0   0 143   2   1   0]
 [  0   0   2  97   2   0]
 [  0   0   0   1  72   1]
 [  0   0   0   1   3  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,7,1.0,0.9801084990958409,5.8889355192766475,98.04308414459229,52.53583597239677,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   1  70   2]
 [  0   0   0   1   1  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,8,1.0,0.9692028985507246,5.827035708333318,86.7499828338623,76.79744070346963,"[[ 59   0   0   0   0   0]
 [  0  74   5   1   0   0]
 [  0   1 141   2   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,3,9,1.0,0.9727767695099818,5.841790842425478,89.94848728179932,83.21403081188389,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 141   3   1   0]
 [  0   0   1  97   2   0]
 [  0   0   0   1  69   3]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,0,1.0,0.9658273381294964,5.803432457896588,88.34912776947021,74.44811940867565,"[[ 58   0   0   1   0   0]
 [  1  78   1   1   0   0]
 [  0   1 141   3   1   0]
 [  0   0   4  95   2   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,1,1.0,0.9784172661870504,5.869778962831528,96.84431552886963,75.5737279369744,"[[ 58   0   1   0   0   0]
 [  0  77   2   2   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0  98   2   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,2,1.0,0.9873873873873874,5.922168778829672,90.14828205108643,84.55628949736113,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   0   1   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  71   2]
 [  0   0   0   1   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,3,1.0,0.972972972972973,5.847399298770263,115.23382663726807,74.45775148357129,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   0 140   4   2   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,4,1.0,0.9621621621621622,5.78648184910809,101.14178657531738,61.5910201174569,"[[ 58   0   1   0   0   0]
 [  1  74   3   1   1   0]
 [  0   0 139   6   1   0]
 [  0   0   2  97   2   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,5,1.0,0.9602888086642599,5.776949736188337,95.74460983276367,71.2834710623207,"[[ 57   0   2   0   0   0]
 [  1  70   9   0   0   0]
 [  0   0 143   3   0   0]
 [  0   1   2  96   1   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,6,1.0,0.9602888086642599,5.769692592309773,91.24720096588135,76.76637225912748,"[[ 59   0   0   0   0   0]
 [  0  76   2   1   0   1]
 [  0   2 141   2   1   0]
 [  0   1   3  95   2   0]
 [  0   0   0   1  70   3]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,7,1.0,0.9801084990958409,5.891867058111263,99.74174499511719,77.97946390923636,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 143   1   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   0  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,8,1.0,0.9782608695652174,5.868343787237403,98.74351024627686,51.99782981249293,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,Full,4,9,1.0,0.9528130671506352,5.71729777004607,93.84572505950928,80.53058515584014,"[[ 57   2   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 140   4   1   0]
 [  0   0   1  95   3   1]
 [  0   0   0   1  69   3]
 [  0   0   0   1   5  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
SVM,Full,0,0,0.9997993981945837,0.9838129496402878,5.899115421858189,1812.6136958599093,191.8467091112192,"[[ 59   0   0   0   0   0]
 [  2  78   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,1,0.9997993981945837,0.9892086330935251,5.940178754650825,1764.2910778522491,226.7572466195507,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0  99   0   2]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,2,0.9995988768551946,0.9873873873873874,5.926659829697657,1871.9547033309937,191.87287021363966,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,3,1.0,0.990990990990991,5.943654472995938,1733.38366150856,191.8675891151533,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   4  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,4,0.9997994384275972,0.9891891891891892,5.94095785897895,1687.1602058410647,178.16322834599362,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,5,0.9995989572889513,0.9873646209386282,5.931754230789032,1674.0425825119019,191.92896183069828,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,6,0.9997994786444756,0.9927797833935018,5.960160452306779,1965.3262376785276,178.20958863837964,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,7,1.0,0.9891500904159132,5.930022722092695,1828.7294805049896,207.94962926165968,"[[ 58   0   0   0   1   0]
 [  1  78   1   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   0]
 [  0   0   1   0   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,8,0.9995991180597315,0.9855072463768116,5.920454989179958,1673.3428359031677,237.70740264685884,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   1 141   3   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,0,9,1.0,0.985480943738657,5.9025414410744865,1671.8941450119019,199.73448003246827,"[[ 56   3   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,0,0.9997993981945837,0.9892086330935251,5.93579583618658,1786.8031144142149,207.83075662129036,"[[ 58   1   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,1,0.9993981945837512,0.9784172661870504,5.877350536546738,1829.2287766933441,207.82249363001281,"[[ 59   0   0   0   0   0]
 [  1  75   5   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,2,0.9997994384275972,0.9945945945945946,5.965134357068829,1783.6552321910858,226.75355094548155,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,3,0.9995988768551946,0.9837837837837838,5.91264880031416,1668.645691871643,216.90850552404987,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,4,1.0,0.9891891891891892,5.93757574324543,1780.8566391468048,226.76830378166432,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,5,0.9995989572889513,0.9891696750902527,5.934146705205574,1844.1455602645874,199.59344688985328,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,6,0.9997994786444756,0.9891696750902527,5.942731334952701,1869.1309630870821,191.8919860481739,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   1 142   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,7,0.9995990376904571,0.9927667269439421,5.955294518801163,1753.6975383758547,226.86664589395187,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,8,1.0,0.9873188405797102,5.926212607429393,1714.4195795059204,237.70470237760554,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 142   2   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,1,9,0.9995991983967936,0.9836660617059891,5.903947950394563,1790.676009654999,237.7523481387556,"[[ 58   0   1   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 143   2   0   0]
 [  0   0   2  97   1   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,0,0.9997993981945837,0.9838129496402878,5.911738078434058,1982.5914919376373,142.50879537208985,"[[ 59   0   0   0   0   0]
 [  0  76   5   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,1,0.9997993981945837,0.9928057553956835,5.960439629688547,2019.3452537059784,155.86919413268205,"[[ 59   0   0   0   0   0]
 [  1  80   0   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,2,0.9995988768551946,0.9963963963963964,5.973484806766742,2014.3982470035553,151.18160142389448,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,3,0.9997994384275972,0.9945945945945946,5.967850090090786,2143.2744324207306,146.73280623748138,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,4,0.9995988768551946,0.9891891891891892,5.939591017098968,1910.1327955722807,121.67730299753681,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   2 143   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,5,0.9997994786444756,0.9873646209386282,5.9306899817500875,1724.139177799225,216.9452585368618,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,6,1.0,0.98014440433213,5.885434371609277,1957.6305627822878,208.06925411699405,"[[ 59   0   0   0   0   0]
 [  1  75   3   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,7,0.9995990376904571,0.9855334538878843,5.9112449644025435,1741.628897190094,226.86664589395187,"[[ 58   0   0   0   1   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   1   0  99   0   1]
 [  0   0   0   0  73   0]
 [  0   0   0   1   2  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,8,0.9997995590298657,0.9945652173913043,5.9610147674399165,1754.546582698822,127.9965174296148,"[[ 58   1   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,2,9,1.0,0.9800362976406534,5.88554172625612,1695.4556465148924,249.64010733611963,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 143   2   0   0]
 [  0   0   2  98   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   4  90]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,0,0.9995987963891675,0.987410071942446,5.924196148403632,1749.0496098995209,237.53570588373157,"[[ 59   0   0   0   0   0]
 [  1  79   1   0   0   0]
 [  0   0 144   2   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,1,0.9995987963891675,0.9856115107913669,5.912758968749916,1777.45863199234,216.86275270282752,"[[ 59   0   0   0   0   0]
 [  1  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,2,1.0,0.9873873873873874,5.917698511122055,1826.1308550834656,237.5725600441177,"[[ 58   0   0   0   1   0]
 [  0  78   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,3,1.0,0.9873873873873874,5.930137279197958,1735.7072770595553,226.78059927831194,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   1   0   1]
 [  0   0   0 100   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,4,1.0,0.9927927927927928,5.961164554141373,1830.2783846855164,191.89047597510762,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,5,0.9997994786444756,0.9873646209386282,5.9241076579521454,1916.4540767669678,207.91413907128887,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,6,1.0,0.9855595667870036,5.9191156851014775,1727.9869377613068,237.6148092901586,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0  99   0   2]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,7,0.9997995188452286,0.9855334538878843,5.912472595987703,1873.8535344600677,155.96648514858342,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,8,0.9997995590298657,0.9909420289855072,5.954658223726371,1770.1876163482666,208.01199494147474,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,3,9,0.9997995991983968,0.985480943738657,5.913076626816377,1739.955186843872,217.0825195677916,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 144   1   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   0  73   0]
 [  0   0   1   0   3  90]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,0,1.0,0.987410071942446,5.936998045286211,1848.7428426742554,237.54110313452108,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,1,1.0,0.9856115107913669,5.925792788999929,1711.945962905884,216.84475990013158,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,2,0.9997994384275972,0.9873873873873874,5.914322695893494,1963.2274329662325,207.87864676422794,"[[ 59   0   0   0   0   0]
 [  1  78   0   0   0   1]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,3,0.9995988768551946,0.9891891891891892,5.941757370973782,1744.1524922847748,207.87038162246537,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,4,0.9997994384275972,0.9927927927927928,5.953104193171492,1765.8649921417239,191.87815160285535,"[[ 59   0   0   0   0   0]
 [  2  77   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,5,0.9995989572889513,0.9927797833935018,5.959097883446645,1732.8341603279114,216.94750865622626,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,6,0.9997994786444756,0.9945848375451264,5.970749694832497,1787.328153848648,226.81378478924185,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,7,1.0,0.9873417721518988,5.923546218235364,1790.8009946346283,226.8641858082224,"[[ 58   0   0   0   1   0]
 [  0  78   2   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,8,1.0,0.9782608695652174,5.871917787525201,1765.7401084899905,217.03901605685616,"[[ 59   0   0   0   0   0]
 [  1  75   4   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  70   3]
 [  0   0   0   2   0  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,Full,4,9,0.9995991983967936,0.9891107078039928,5.930994706972763,1709.4727456569672,142.65076070176107,"[[ 58   1   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
RF,Full,0,0,1.0,0.9658273381294964,5.802493754949245,1496.3441610336304,554.2520792512803,"[[ 58   1   0   0   0   0]
 [  1  79   1   0   0   0]
 [  0   2 139   4   1   0]
 [  0   0   3  95   3   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   0  95]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,1,1.0,0.9694244604316546,5.829751971384603,1480.2539587020874,498.7620867323785,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   2 142   1   1   0]
 [  0   1   3  97   0   0]
 [  0   0   0   1  70   3]
 [  0   0   0   1   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,2,1.0,0.972972972972973,5.85052157164846,1468.2610511779785,498.7669570442419,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   0 144   1   1   0]
 [  0   0   2  99   0   0]
 [  0   0   0   1  71   2]
 [  0   0   1   1   1  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,3,0.9997994384275972,0.9765765765765766,5.876195745769932,1458.766222000122,554.2751057957912,"[[ 58   0   1   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   5  94   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   2   0  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,4,0.9997994384275972,0.9621621621621622,5.7750316146074985,1486.5502834320068,554.3338742955774,"[[ 57   1   0   1   0   0]
 [  1  76   3   0   0   0]
 [  0   3 141   2   0   0]
 [  0   2   2  95   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,5,1.0,0.9711191335740073,5.822199716909877,1572.101378440857,554.3128142487093,"[[ 57   0   2   0   0   0]
 [  2  77   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   2   3  96   0   0]
 [  0   0   0   1  69   4]
 [  0   0   0   0   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,6,1.0,0.98014440433213,5.8854577067469345,1487.249255180359,554.3862720825533,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   3  70   1]
 [  0   0   0   1   0  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,7,0.9997995188452286,0.9656419529837251,5.798151971047359,1451.370358467102,332.721391094077,"[[ 58   0   1   0   0   0]
 [  0  75   5   0   0   0]
 [  0   3 141   2   0   0]
 [  0   1   0  99   1   0]
 [  0   0   0   1  69   3]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,8,1.0,0.9710144927536232,5.834372240343444,1671.8437910079956,554.6821114293836,"[[ 59   0   0   0   0   0]
 [  1  77   1   0   1   0]
 [  0   0 139   5   1   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  71   2]
 [  0   0   0   1   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,0,9,1.0,0.969147005444646,5.829388258644763,1430.8815479278564,356.64877919882946,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   0 140   5   0   0]
 [  0   0   3  97   0   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,0,0.9997993981945837,0.9766187050359713,5.86625780923385,1601.5837907791138,415.6863046632435,"[[ 59   0   0   0   0   0]
 [  0  77   3   1   0   0]
 [  0   2 142   1   1   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,1,1.0,0.9658273381294964,5.798881211405607,1582.6950788497925,554.1051952529791,"[[ 58   1   0   0   0   0]
 [  2  77   2   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,2,0.9993983152827918,0.9675675675675676,5.8263138707633715,1513.3347511291504,554.2604156178014,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   2 139   5   0   0]
 [  0   1   4  96   0   0]
 [  0   0   0   3  70   1]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,3,0.9997994384275972,0.9675675675675676,5.812543130920553,1472.8577136993408,453.5316896640227,"[[ 58   0   0   1   0   0]
 [  0  74   6   0   0   0]
 [  0   0 142   3   1   0]
 [  0   0   0  99   2   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,4,0.9997994384275972,0.9585585585585585,5.774395482044055,1460.2648973464966,415.7531608170057,"[[ 58   0   1   0   0   0]
 [  0  77   1   2   0   0]
 [  0   2 138   6   0   0]
 [  0   1   4  96   0   0]
 [  0   0   0   1  69   4]
 [  0   0   0   1   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,5,0.9997994786444756,0.9747292418772563,5.844593176953709,1660.450553894043,415.7373650200996,"[[ 59   0   0   0   0   0]
 [  2  78   0   0   0   0]
 [  0   0 142   3   1   0]
 [  0   0   1  98   2   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,6,1.0,0.9819494584837545,5.895804301862614,1480.9529304504395,453.7112065875016,"[[ 58   1   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,7,1.0,0.9602169981916817,5.766459863256959,1501.6412496566772,499.05033991476625,"[[ 55   3   1   0   0   0]
 [  0  76   3   1   0   0]
 [  0   1 141   4   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   1  71   1]
 [  0   0   0   1   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,8,0.9997995590298657,0.9782608695652174,5.866843924503835,1544.7168827056885,416.0446686467111,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   2 142   1   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   1  70   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,1,9,1.0,0.9582577132486388,5.761842902620678,1560.607624053955,499.29808096535595,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   2 142   1   0   0]
 [  0   1   5  91   1   2]
 [  0   0   0   0  70   3]
 [  0   0   0   2   3  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,0,1.0,0.9676258992805755,5.823050287632277,1497.0438241958618,498.72639628633215,"[[ 58   1   0   0   0   0]
 [  0  76   4   1   0   0]
 [  0   2 141   3   0   0]
 [  0   0   4  95   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,1,1.0,0.9694244604316546,5.828965996542582,1558.0090761184692,383.60190508184525,"[[ 59   0   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   1 143   2   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,2,1.0,0.9675675675675676,5.814928464752246,1700.427508354187,498.8859405498108,"[[ 58   1   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   4  95   1   1]
 [  0   0   0   2  70   2]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,3,1.0,0.9711711711711711,5.8368339171693036,1635.2649450302124,332.535097435247,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 142   4   0   0]
 [  0   1   3  96   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,4,1.0,0.9693693693693693,5.80920715681785,1402.5980234146118,498.8978420226984,"[[ 55   1   3   0   0   0]
 [  2  76   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,5,1.0,0.9638989169675091,5.802368949690338,1513.4348630905151,415.7043155644496,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   1 137   6   2   0]
 [  0   0   3  95   2   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,6,1.0,0.9675090252707581,5.827807266060642,1507.6380491256714,498.98599789849715,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   2 138   5   1   0]
 [  0   1   2  97   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   1   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,7,0.9995990376904571,0.9710669077757685,5.825460574977323,1738.7053728103638,499.0860552471834,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   1   1  98   1   0]
 [  0   0   0   2  65   6]
 [  0   0   0   1   0  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,8,1.0,0.9746376811594203,5.848473159451554,1486.1501932144165,415.8958272897326,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 143   1   0   0]
 [  0   2   2  97   0   0]
 [  0   0   0   2  69   2]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,2,9,0.9995991983967936,0.9655172413793104,5.781460225943205,1654.6536922454834,453.86600507647023,"[[ 57   0   1   1   0   0]
 [  2  75   3   0   0   0]
 [  0   1 142   2   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   3  67   3]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,0,1.0,0.9694244604316546,5.842442390326983,1495.3449010849,356.2671319265558,"[[ 59   0   0   0   0   0]
 [  1  79   1   0   0   0]
 [  0   2 139   5   0   0]
 [  0   0   6  94   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,1,1.0,0.9784172661870504,5.875020689617878,1465.1618242263794,453.43089517041494,"[[ 59   0   0   0   0   0]
 [  0  77   3   1   0   0]
 [  0   1 143   2   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,2,0.9997994384275972,0.9621621621621622,5.782378953105002,1559.9088907241821,453.5021846315191,"[[ 58   0   1   0   0   0]
 [  0  76   3   0   1   0]
 [  0   1 141   3   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   2   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,3,1.0,0.9693693693693693,5.836387678430673,1495.4447507858276,356.3143144296584,"[[ 59   0   0   0   0   0]
 [  0  73   7   0   0   0]
 [  0   4 141   1   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,4,0.9997994384275972,0.9783783783783784,5.87152685174407,1509.4367504119873,453.61038852346746,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   1 142   2   1   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,5,1.0,0.9693140794223827,5.814087852821681,1526.6268014907837,453.6324885295452,"[[ 57   1   0   1   0   0]
 [  2  77   1   0   0   0]
 [  0   0 141   5   0   0]
 [  0   1   1  98   0   1]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,6,0.9997994786444756,0.9783393501805054,5.8701112920445935,1704.7252178192139,453.62265069283615,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   1   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,7,0.9997995188452286,0.976491862567812,5.860574023811913,1456.4668655395508,237.66515598449539,"[[ 57   0   2   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 143   1   2   0]
 [  0   1   1  98   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,8,1.0,0.967391304347826,5.8046258716134655,1489.6483898162842,383.9449304487921,"[[ 57   2   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 141   4   0   0]
 [  0   2   1  97   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   1   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,3,9,0.9997995991983968,0.9655172413793104,5.805095771162054,1553.1115770339966,416.01226313367357,"[[ 59   0   0   0   0   0]
 [  0  74   6   0   0   0]
 [  0   2 142   1   0   0]
 [  0   0   3  96   1   0]
 [  0   0   0   2  67   4]
 [  0   0   0   0   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,0,1.0,0.9640287769784173,5.794857926501507,1513.9338970184326,293.41293065912623,"[[ 57   1   1   0   0   0]
 [  0  79   2   0   0   0]
 [  0   0 138   6   2   0]
 [  0   2   1  97   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,1,1.0,0.9748201438848921,5.846131378721001,1457.4660539627075,415.5954171786298,"[[ 58   0   1   0   0   0]
 [  1  77   2   0   1   0]
 [  0   0 145   1   0   0]
 [  0   2   2  97   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,2,1.0,0.9603603603603603,5.759598051216687,1505.4389238357544,415.73663086210115,"[[ 58   1   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 143   2   0   0]
 [  0   1   1  97   2   0]
 [  0   0   0   2  68   4]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,3,1.0,0.963963963963964,5.790252442316954,1665.946888923645,311.77303312152196,"[[ 57   1   0   1   0   0]
 [  0  78   2   0   0   0]
 [  0   2 141   3   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   1  71   2]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,4,1.0,0.9837837837837838,5.911975923495332,1562.7066373825073,249.43106966620323,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,5,1.0,0.983754512635379,5.905709964822956,1441.5760517120361,415.77041973118395,"[[ 58   0   1   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 144   1   1   0]
 [  0   0   2  99   0   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,6,1.0,0.9693140794223827,5.829796573478719,1513.8344287872314,277.2298747095721,"[[ 58   0   1   0   0   0]
 [  1  76   3   0   0   0]
 [  0   2 140   4   0   0]
 [  0   0   2  97   2   0]
 [  0   0   0   1  73   0]
 [  0   0   0   1   0  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,7,1.0,0.9620253164556962,5.7945430713390635,1508.33740234375,383.8750156034846,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   2   3  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,8,0.9997995590298657,0.9746376811594203,5.853524138265277,1475.3566026687622,383.9449304487921,"[[ 58   1   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 142   3   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,Full,4,9,1.0,0.9764065335753176,5.864636863837999,1477.9546976089478,416.0701540316656,"[[ 59   0   0   0   0   0]
 [  2  74   3   1   0   0]
 [  0   0 142   2   1   0]
 [  0   0   2  97   0   1]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
NN,Full,0,0,0.9933801404212638,0.9802158273381295,5.878224928488624,7003.695368766785,1247.0837071913008,"[[ 58   0   0   0   1   0]
 [  1  80   0   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   0  99   1   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,1,0.9833500501504514,0.9910071942446043,5.9472934630079415,8199.112629890442,831.1577928332753,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   2 144   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,2,0.9939831528279182,0.9747747747747748,5.857873686175096,6493.887138366699,831.4567326857751,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 140   5   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,3,0.992579221821099,0.9693693693693693,5.82341300315789,8393.601322174072,997.8909070866317,"[[ 59   0   0   0   0   0]
 [  0  78   0   0   0   2]
 [  0   0 143   3   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   1  69   4]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,4,0.9887685519454472,0.9747747747747748,5.850842155492993,7773.255729675293,712.5800647748133,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   2 143   1   0   0]
 [  0   1   1  98   1   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,5,0.9929817525566473,0.98014440433213,5.865878485507629,7025.783014297485,831.6565561811371,"[[ 58   1   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0  99   2   0]
 [  0   0   0   0  68   6]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,6,0.9895728895127331,0.98014440433213,5.893949321635394,8069.686985015869,831.5904283589257,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   2  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,7,0.9835605453087409,0.9801084990958409,5.882262042904732,7802.738857269287,831.6910494339747,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   5  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,8,0.9901783924634195,0.9746376811594203,5.851753298383959,8432.678890228271,831.5933176692781,"[[ 58   0   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 144   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   7  87]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,0,9,0.9793587174348697,0.9709618874773139,5.839306898114585,7453.139114379883,713.2732493953691,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   0 145   0   0   0]
 [  0   1   5  94   0   0]
 [  0   0   0   0  69   4]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,0,0.9951855566700101,0.9730215827338129,5.847350879007978,7583.064889907837,1246.8606019899987,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,1,0.9925777331995987,0.9784172661870504,5.8742268040544,7413.461446762085,1246.7862513280024,"[[ 58   1   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,2,0.9915764139590855,0.9657657657657658,5.800418173759716,7499.313139915466,712.84724890105,"[[ 58   0   1   0   0   0]
 [  1  74   4   0   0   1]
 [  0   1 141   4   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,3,0.9921780986762936,0.9873873873873874,5.926712520116686,7684.307098388672,1246.9620021924668,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   2 144   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,4,0.9877657440834336,0.9747747747747748,5.840000606102322,8098.8698720932,831.3575726699676,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   9  86]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,5,0.9937838379787447,0.9711191335740073,5.831869837937901,7772.856307029724,1247.212094852353,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   1  69   4]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,6,0.9941848806897935,0.9783393501805054,5.869121880832874,7551.982545852661,1247.4352363291912,"[[ 58   0   0   0   1   0]
 [  0  79   0   1   0   0]
 [  0   0 146   0   0   0]
 [  0   1   3  96   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   1   3  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,7,0.9905773857257418,0.9819168173598554,5.899028332881862,7818.42999458313,997.8626513314251,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   4  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,8,0.9895770695530166,0.967391304347826,5.816133989705932,8196.313619613647,1248.0099392118725,"[[ 59   0   0   0   0   0]
 [  0  76   2   1   0   1]
 [  0   1 142   2   0   0]
 [  0   0   4  96   0   1]
 [  0   0   0   0  68   5]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,1,9,0.9917835671342685,0.9891107078039928,5.931170734462879,7564.5750522613525,1248.2600915348253,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 144   1   0   0]
 [  0   0   0  99   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,0,0.9961885656970912,0.9766187050359713,5.860769527650718,7925.768971443176,1000.4596122208607,"[[ 58   1   0   0   0   0]
 [  0  79   0   2   0   0]
 [  0   0 143   3   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   1  72   1]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,1,0.9905717151454363,0.9712230215827338,5.8220133204122115,7922.172260284424,997.2149299288109,"[[ 58   0   0   0   1   0]
 [  0  78   3   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   7  88]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,2,0.9935820296831127,0.9765765765765766,5.872320652930978,7925.968503952026,1246.887654350714,"[[ 59   0   0   0   0   0]
 [  0  75   4   1   0   0]
 [  0   1 141   4   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,3,0.98676293622142,0.9891891891891892,5.941503581983204,8215.10305404663,1247.036358900987,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,4,0.9921780986762936,0.9765765765765766,5.856735297141471,7522.498941421509,1247.3338744344687,"[[ 59   0   0   0   0   0]
 [  1  77   1   0   0   1]
 [  0   1 144   1   0   0]
 [  0   0   1  97   3   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,5,0.9941848806897935,0.98014440433213,5.890734711952151,7736.876273155212,1246.914697035473,"[[ 58   0   1   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   4  96   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,6,0.995588530178464,0.9873646209386282,5.932781501428329,7383.678436279297,831.5904283589257,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   1   0  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,7,0.9961908580593424,0.9801084990958409,5.890899924267632,6916.845345497131,998.1482990369018,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   2 140   4   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,8,0.9923832431348968,0.9891304347826086,5.942622616203094,9022.941613197327,998.3007801065227,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 144   0   1   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,2,9,0.9917835671342685,0.9836660617059891,5.905981144975188,8159.534668922424,1248.2600915348253,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   2 143   0   0   0]
 [  0   1   1  98   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,0,0.9899699097291875,0.987410071942446,5.924814344668248,7118.02990436554,1246.488937329906,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,1,0.9917753259779338,0.9784172661870504,5.884013742957197,8115.060472488403,1246.9349615201559,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   1]
 [  0   2 139   4   1   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,2,0.9931809065383073,0.9783783783783784,5.881657059275479,7748.370337486267,1246.9620021924668,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   4 139   3   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,3,0.9869634977938228,0.9621621621621622,5.760007328294196,7497.313499450684,831.390623380492,"[[ 57   2   0   0   0   0]
 [  0  76   2   2   0   0]
 [  0   2 144   0   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  66   8]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,4,0.9957882069795427,0.9675675675675676,5.805253685031809,7336.0055685043335,997.9861484043971,"[[ 57   1   0   0   1   0]
 [  0  77   2   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   5  94   1   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,5,0.9815520352917586,0.9711191335740073,5.820324250486811,7533.19308757782,831.7557676360491,"[[ 59   0   0   0   0   0]
 [  1  76   1   1   0   1]
 [  0   1 144   1   0   0]
 [  0   2   1  97   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,6,0.9923801884900741,0.9855595667870036,5.915763975996523,7425.255179405212,1247.2864664739714,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   1   3  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,7,0.9965918203688853,0.9855334538878843,5.922808477468977,8133.150672912598,713.0845751051197,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  71   2]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,8,0.9959911805973141,0.9945652173913043,5.9711801408915015,7948.955774307251,1247.5635038912144,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,3,9,0.9947895791583167,0.9836660617059891,5.910182452314741,7436.248993873596,832.0576034233162,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 144   1   0   0]
 [  0   0   2  98   0   0]
 [  0   0   0   2  71   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,0,0.9813440320962888,0.9748201438848921,5.848337517224157,7288.433909416199,1246.7862513280024,"[[ 58   0   1   0   0   0]
 [  1  76   3   0   0   1]
 [  0   1 145   0   0   0]
 [  0   0   2  97   2   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,1,0.9893681043129389,0.9820143884892086,5.896740055085136,7426.354002952576,831.2238783697859,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   1]
 [  0   0 145   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,2,0.9947853991175291,0.9873873873873874,5.9249035304192965,7416.659832000732,1246.6646640102003,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 144   1   0   0]
 [  0   1   0  99   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,3,0.9863618130766145,0.9603603603603603,5.77633311931832,7936.862468719482,1246.9620021924668,"[[ 58   0   0   0   1   0]
 [  0  74   4   2   0   0]
 [  0   0 142   4   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   2  72   0]
 [  0   0   0   1   5  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,4,0.9937825912555155,0.9801801801801802,5.888620124799003,8423.08497428894,831.4897912811609,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,5,0.994986966111891,0.9891696750902527,5.938982956845534,7466.93115234375,1247.1377320992801,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,6,0.9893723681572087,0.9783393501805054,5.876470425628455,6938.233041763306,1247.2864664739714,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  1   1 140   4   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,7,0.9883720930232558,0.976491862567812,5.854130249810644,7784.050035476685,1663.5804981729036,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   2 144   0   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   1  69   3]
 [  0   0   0   1   4  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,8,0.9909801563439568,0.9710144927536232,5.841764670431163,7748.969292640686,1247.6378875964124,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 139   5   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  68   5]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,Full,4,9,0.9929859719438878,0.985480943738657,5.908192421416969,8903.50980758667,1248.1856485427438,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 144   1   0   0]
 [  0   0   0  98   2   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
KNN,10,0,0,1.0,0.9388489208633094,5.65897816593947,48.97005558013916,415.62846257418056,"[[ 56   1   2   0   0   0]
 [  1  77   3   0   0   0]
 [  0   1 137   6   2   0]
 [  0   0   8  90   2   1]
 [  0   0   1   0  70   3]
 [  0   0   0   2   1  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,1,1.0,0.935251798561151,5.629256470038566,48.770856857299805,415.7193645144914,"[[ 58   1   0   0   0   0]
 [  3  77   1   0   0   0]
 [  0   4 138   3   1   0]
 [  0   2  10  86   1   2]
 [  0   0   2   2  69   1]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,2,1.0,0.9405405405405406,5.662932326743848,45.571303367614746,453.51201921579235,"[[ 59   0   0   0   0   0]
 [  1  75   3   1   0   0]
 [  0   1 138   4   2   1]
 [  0   2   7  88   3   1]
 [  0   0   0   2  69   3]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,3,1.0,0.9405405405405406,5.647710185991976,49.77059364318848,452.9717497422478,"[[ 56   1   2   0   0   0]
 [  2  76   1   0   0   1]
 [  0   1 142   3   0   0]
 [  0   3   8  86   2   2]
 [  0   0   0   3  69   2]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,4,1.0,0.9207207207207208,5.542284291314131,54.26681041717529,453.5316896640227,"[[ 56   1   2   0   0   0]
 [  2  73   2   2   1   0]
 [  0   2 137   6   1   0]
 [  0   0  11  90   0   0]
 [  0   0   1   3  66   4]
 [  0   0   0   1   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,5,1.0,0.9332129963898917,5.604474440970426,46.87168598175049,415.76215556064733,"[[ 57   1   1   0   0   0]
 [  3  71   6   0   0   0]
 [  0   1 140   5   0   0]
 [  0   0   4  94   2   1]
 [  0   0   2   2  67   3]
 [  0   0   1   0   5  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,6,1.0,0.927797833935018,5.596428020168955,38.57684135437012,623.6432333149746,"[[ 59   0   0   0   0   0]
 [  2  75   2   0   1   0]
 [  2   2 134   7   0   1]
 [  0   1  11  87   1   1]
 [  0   0   0   2  69   3]
 [  0   0   0   1   3  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,7,1.0,0.9294755877034359,5.606455784528504,34.97898578643799,713.0602709273759,"[[ 57   1   1   0   0   0]
 [  1  72   4   3   0   0]
 [  0   1 134  10   1   0]
 [  0   0   6  92   3   0]
 [  0   0   0   5  66   2]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,8,1.0,0.9221014492753623,5.52432485374611,34.977173805236816,713.0817056741904,"[[ 57   1   0   1   0   0]
 [  3  77   0   0   0   0]
 [  1   3 136   4   1   0]
 [  1   0   5  87   7   1]
 [  0   0   1   5  65   2]
 [  0   0   0   1   6  87]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,0,9,1.0,0.941923774954628,5.678056667106712,45.77310085296631,453.13884468042346,"[[ 58   0   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   3 135   6   1   0]
 [  0   0   6  92   2   0]
 [  0   0   1   1  67   4]
 [  0   0   1   1   3  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,0,1.0,0.9406474820143885,5.6219754259742345,49.06961917877197,262.486258899506,"[[ 55   3   1   0   0   0]
 [  2  74   4   1   0   0]
 [  1   0 141   2   2   0]
 [  0   1   1  96   3   0]
 [  0   0   1   5  65   3]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,1,1.0,0.9424460431654677,5.6648828526555395,44.67179775238037,453.4505625265255,"[[ 58   1   0   0   0   0]
 [  1  78   2   0   0   0]
 [  1   0 140   5   0   0]
 [  0   0   7  92   2   0]
 [  0   0   3   2  65   4]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,2,1.0,0.9279279279279279,5.5932810801745,37.3776912689209,554.2604156178014,"[[ 59   0   0   0   0   0]
 [  3  73   3   0   0   1]
 [  0   1 131  12   2   0]
 [  0   0   4  94   2   1]
 [  0   0   1   3  66   4]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,3,1.0,0.9135135135135135,5.511835542361568,32.98048973083496,623.5925495403287,"[[ 55   0   4   0   0   0]
 [  2  74   4   0   0   0]
 [  0   2 138   6   0   0]
 [  1   2  12  81   4   1]
 [  0   0   1   2  70   1]
 [  0   0   1   2   3  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,4,1.0,0.9261261261261261,5.5749004836031295,40.37742614746094,415.73663086210115,"[[ 58   0   1   0   0   0]
 [  0  77   3   0   0   0]
 [  1   1 141   3   0   0]
 [  0   0  11  87   3   0]
 [  0   0   1   5  63   5]
 [  0   0   1   0   6  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,5,1.0,0.9223826714801444,5.550298191490621,47.67279624938965,415.82001165449225,"[[ 58   0   1   0   0   0]
 [  3  76   1   0   0   0]
 [  0   1 138   6   1   0]
 [  0   0  11  86   4   0]
 [  0   0   1   6  65   2]
 [  0   0   0   0   6  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,6,1.0,0.924187725631769,5.569217562859075,46.97399139404297,415.82827812524135,"[[ 59   0   0   0   0   0]
 [  2  71   1   5   1   0]
 [  2   4 131   7   1   1]
 [  0   2   7  88   3   1]
 [  0   0   0   0  72   2]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,7,1.0,0.9312839059674503,5.620138544100758,48.072004318237305,453.6840948539947,"[[ 58   0   1   0   0   0]
 [  2  75   3   0   0   0]
 [  0   1 139   3   3   0]
 [  0   1  13  82   4   1]
 [  0   0   1   2  69   1]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,8,1.0,0.9456521739130435,5.689618513612047,47.87251949310303,415.97850378210995,"[[ 56   0   2   1   0   0]
 [  0  80   0   0   0   0]
 [  0   2 137   5   0   1]
 [  0   0   6  92   3   0]
 [  0   0   1   1  67   4]
 [  0   0   0   1   3  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,1,9,1.0,0.9364791288566243,5.623032093711032,45.77295780181885,453.85616302930475,"[[ 57   2   0   0   0   0]
 [  3  75   2   0   0   0]
 [  1   2 137   5   0   0]
 [  0   0   8  89   2   1]
 [  0   0   0   3  67   3]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,0,1.0,0.9226618705035972,5.558003132364073,39.47477340698242,623.4303010729662,"[[ 56   2   1   0   0   0]
 [  2  74   3   1   0   1]
 [  0   2 137   5   1   1]
 [  0   0  12  87   2   0]
 [  0   0   2   3  66   3]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,1,1.0,0.935251798561151,5.612733409066006,33.88032913208008,498.78588320112453,"[[ 58   1   0   0   0   0]
 [  3  77   1   0   0   0]
 [  0   1 140   4   1   0]
 [  0   0   7  93   1   0]
 [  0   0   2   1  65   6]
 [  0   0   1   1   6  87]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,2,1.0,0.9333333333333333,5.626173831602058,34.3799352645874,623.4995897971096,"[[ 57   1   1   0   0   0]
 [  2  74   4   0   0   0]
 [  0   3 139   3   1   0]
 [  0   1  12  87   1   0]
 [  0   0   0   3  68   3]
 [  0   0   1   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,3,1.0,0.9387387387387387,5.661296508857412,47.07226753234863,453.5316896640227,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  1   1 136   7   1   0]
 [  0   0   8  90   2   1]
 [  0   0   1   1  70   2]
 [  0   0   0   0   5  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,4,1.0,0.9261261261261261,5.573963665757509,45.171236991882324,453.5316896640227,"[[ 57   0   2   0   0   0]
 [  3  75   0   2   0   0]
 [  0   4 133   6   3   0]
 [  0   1   8  90   0   2]
 [  0   0   1   3  67   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,5,1.0,0.9368231046931408,5.631793936876073,45.77314853668213,453.6128132828203,"[[ 58   0   1   0   0   0]
 [  3  73   4   0   0   0]
 [  1   1 139   4   0   1]
 [  1   0   7  92   1   0]
 [  0   0   1   2  68   3]
 [  0   0   0   1   4  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,6,1.0,0.9422382671480144,5.672108482244369,48.970675468444824,453.6324885295452,"[[ 55   2   2   0   0   0]
 [  1  76   3   0   0   0]
 [  0   2 139   5   0   0]
 [  0   1   8  90   2   0]
 [  0   0   1   1  70   2]
 [  0   0   0   1   1  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,7,1.0,0.9294755877034359,5.588185006235221,36.8788480758667,623.9357117110442,"[[ 57   1   1   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 139   5   1   0]
 [  0   0   7  87   6   1]
 [  0   0   0   3  66   4]
 [  0   0   0   1   6  87]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,8,1.0,0.9221014492753623,5.544615249094086,31.78122043609619,554.7115195947664,"[[ 56   2   0   1   0   0]
 [  2  75   1   2   0   0]
 [  1   1 133   9   1   0]
 [  0   2   6  89   3   1]
 [  0   0   1   6  66   0]
 [  0   0   0   0   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,2,9,1.0,0.9183303085299456,5.525533489188755,35.277581214904785,624.1114345424866,"[[ 58   0   1   0   0   0]
 [  1  74   3   1   1   0]
 [  0   2 133   9   1   0]
 [  0   2   4  89   5   0]
 [  0   0   1   7  62   3]
 [  0   0   0   1   3  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,0,1.0,0.9370503597122302,5.633180561132896,48.57137203216553,249.37806899745993,"[[ 59   0   0   0   0   0]
 [  1  77   3   0   0   0]
 [  0   1 142   2   1   0]
 [  0   1   9  89   1   1]
 [  0   0   0   3  65   6]
 [  0   0   0   1   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,1,1.0,0.9190647482014388,5.540384819749229,54.56855297088623,277.11869368903484,"[[ 54   0   4   1   0   0]
 [  3  74   4   0   0   0]
 [  0   0 138   6   2   0]
 [  0   2  10  86   2   1]
 [  0   0   2   0  69   3]
 [  0   0   2   1   2  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,2,1.0,0.9333333333333333,5.6253885536255455,45.87357044219971,356.3203854510144,"[[ 57   2   0   0   0   0]
 [  2  76   1   1   0   0]
 [  1   6 127  10   2   0]
 [  0   0   3  97   1   0]
 [  0   0   0   1  72   1]
 [  0   0   0   1   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,3,1.0,0.9405405405405406,5.661355427170273,49.872565269470215,453.5021846315191,"[[ 57   0   2   0   0   0]
 [  1  76   3   0   0   0]
 [  0   1 137   7   1   0]
 [  0   0   4  93   3   1]
 [  0   0   1   4  67   2]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,4,1.0,0.918918918918919,5.529870390195232,46.47114276885986,415.63747872914024,"[[ 56   1   2   0   0   0]
 [  2  76   1   1   0   0]
 [  0   2 135   8   0   1]
 [  0   0   9  87   4   1]
 [  0   0   1   2  66   5]
 [  0   0   0   0   5  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,5,1.0,0.9314079422382672,5.606783735797586,46.07100486755371,415.82827812524135,"[[ 59   0   0   0   0   0]
 [  4  70   2   3   0   1]
 [  2   2 136   4   2   0]
 [  0   1  10  88   0   2]
 [  0   0   0   1  70   3]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,6,1.0,0.9314079422382672,5.59617653744036,50.5702018737793,415.217445733255,"[[ 58   0   1   0   0   0]
 [  1  77   1   1   0   0]
 [  1   2 139   4   0   0]
 [  0   2   5  87   6   1]
 [  0   0   2   2  68   2]
 [  0   0   0   1   6  87]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,7,1.0,0.9439421338155516,5.693537419941607,36.977577209472656,623.9915398885346,"[[ 58   0   1   0   0   0]
 [  0  74   5   0   1   0]
 [  0   2 139   4   0   1]
 [  0   0   8  90   3   0]
 [  0   0   1   1  69   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,8,1.0,0.9347826086956522,5.61480985611626,35.97450256347656,623.930546048752,"[[ 59   0   0   0   0   0]
 [  2  76   2   0   0   0]
 [  0   1 139   5   0   0]
 [  0   1   7  92   1   0]
 [  0   0   1   7  62   3]
 [  0   0   0   0   6  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,3,9,1.0,0.9183303085299456,5.512345090130628,48.47142696380615,416.0784254752264,"[[ 56   2   1   0   0   0]
 [  3  75   2   0   0   0]
 [  0   2 134   6   3   0]
 [  1   0   7  86   4   2]
 [  0   0   0   6  65   2]
 [  0   0   0   1   3  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,0,1.0,0.9316546762589928,5.5758972692181015,48.169898986816406,415.60367803488106,"[[ 55   2   2   0   0   0]
 [  2  75   4   0   0   0]
 [  1   1 141   3   0   0]
 [  0   1   4  95   1   0]
 [  0   0   0   6  65   3]
 [  0   0   0   1   7  87]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,1,1.0,0.9424460431654677,5.6654593309442145,48.470139503479004,452.6945988720043,"[[ 55   2   2   0   0   0]
 [  0  78   3   0   0   0]
 [  1   0 137   8   0   0]
 [  1   0   4  94   2   0]
 [  0   0   1   4  68   1]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,2,1.0,0.9225225225225225,5.543757403332204,47.472190856933594,453.5808732507167,"[[ 58   0   0   1   0   0]
 [  3  73   2   1   0   1]
 [  0   1 140   4   1   0]
 [  0   1   9  82   8   1]
 [  0   0   0   1  69   4]
 [  0   0   0   1   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,3,1.0,0.9261261261261261,5.579020071142726,32.779884338378906,623.6669372952449,"[[ 58   0   1   0   0   0]
 [  3  75   2   0   0   0]
 [  1   1 135   8   1   0]
 [  1   4   7  86   2   1]
 [  0   0   2   2  68   2]
 [  0   0   1   2   0  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,4,1.0,0.9351351351351351,5.638731409207882,34.67905521392822,712.7014872716053,"[[ 59   0   0   0   0   0]
 [  3  74   1   2   0   0]
 [  0   3 135   5   3   0]
 [  0   0  11  86   2   2]
 [  0   0   0   2  71   1]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,5,1.0,0.9296028880866426,5.60409865225897,31.981396675109867,712.8444278025462,"[[ 57   1   1   0   0   0]
 [  2  73   5   0   0   0]
 [  0   4 137   3   2   0]
 [  0   0   9  89   3   0]
 [  0   0   2   0  70   2]
 [  0   0   1   0   4  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,6,1.0,0.924187725631769,5.556639679931556,33.178162574768066,415.77868423026354,"[[ 57   1   1   0   0   0]
 [  2  75   0   2   1   0]
 [  0   1 139   5   0   1]
 [  0   0  11  87   2   1]
 [  0   0   1   7  63   3]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,7,1.0,0.9349005424954792,5.637490947264856,47.17235565185547,415.85379057933534,"[[ 58   0   1   0   0   0]
 [  1  74   4   1   0   0]
 [  1   2 135   7   1   0]
 [  0   0   8  92   1   0]
 [  0   0   1   1  66   5]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,8,1.0,0.927536231884058,5.562512890618791,45.87287902832031,453.80457275046314,"[[ 56   2   1   0   0   0]
 [  4  75   1   0   0   0]
 [  0   4 134   7   0   0]
 [  0   0   5  91   4   1]
 [  0   0   1   4  64   4]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,10,4,9,1.0,0.9401088929219601,5.66738671031661,45.873475074768066,453.90537753407466,"[[ 57   2   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   3 133   6   2   1]
 [  0   1   7  90   2   0]
 [  0   0   0   1  70   2]
 [  0   0   0   2   3  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
SVM,10,0,0,0.9685055165496489,0.9550359712230215,5.734117913238835,9594.664520025253,262.7600497517739,"[[ 59   0   0   0   0   0]
 [  2  76   3   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   6  92   3   0]
 [  0   0   2   4  67   1]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,1,0.9697091273821464,0.9550359712230215,5.730617281496906,9040.481352806091,277.1003305127262,"[[ 57   1   0   1   0   0]
 [  0  79   1   1   0   0]
 [  0   1 142   2   0   1]
 [  0   0   4  93   4   0]
 [  0   0   1   5  65   3]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,2,0.9713196951464099,0.9441441441441442,5.664078022697608,8433.504045009613,277.17061063256233,"[[ 58   0   1   0   0   0]
 [  1  73   4   1   0   1]
 [  1   0 142   3   0   0]
 [  1   2   3  94   1   0]
 [  0   0   0   8  62   4]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,3,0.9721219414360208,0.9351351351351351,5.631457676610391,9111.86544895172,277.15959051657313,"[[ 57   1   1   0   0   0]
 [  1  79   0   0   0   0]
 [  0   3 136   7   0   0]
 [  0   0   8  89   4   0]
 [  0   0   1   5  66   2]
 [  0   0   1   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,4,0.9703168872843964,0.9621621621621622,5.779432869127333,8413.639891147614,277.15959051657313,"[[ 57   0   2   0   0   0]
 [  1  75   2   0   2   0]
 [  0   0 145   1   0   0]
 [  0   1   6  92   1   1]
 [  0   0   0   3  71   0]
 [  0   0   0   1   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,5,0.9697212753158211,0.9584837545126353,5.752503784190176,9293.43683719635,249.4424190203776,"[[ 59   0   0   0   0   0]
 [  3  75   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   1   5  92   3   0]
 [  0   0   2   2  70   0]
 [  0   0   0   0   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,6,0.9699217966713455,0.9620938628158845,5.773999642627554,9018.89414191246,415.05266382766774,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  1   0 141   4   0   0]
 [  0   0   2  98   1   0]
 [  0   2   0   6  65   1]
 [  0   0   0   1   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,7,0.9697273456295108,0.9547920433996383,5.7207605709421765,8823.430508375168,277.2597419833427,"[[ 59   0   0   0   0   0]
 [  2  78   0   0   0   0]
 [  0   2 143   1   0   0]
 [  0   0   4  94   3   0]
 [  0   0   0   9  62   2]
 [  0   0   0   1   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,8,0.9711365003006615,0.9420289855072463,5.658665739965951,8608.603858947754,453.80457275046314,"[[ 58   1   0   0   0   0]
 [  0  78   1   1   0   0]
 [  2   5 134   3   1   0]
 [  1   0   4  93   3   0]
 [  0   0   0   9  64   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,0,9,0.9723446893787575,0.9346642468239564,5.616744139391823,8413.764744997025,277.37826464563767,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  3   0 135   6   1   0]
 [  0   0   3  89   7   1]
 [  0   0   0   6  67   0]
 [  0   2   1   1   3  87]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,0,0.9697091273821464,0.9568345323741008,5.7375116984935595,8840.09558558464,262.51591948094625,"[[ 56   2   1   0   0   0]
 [  0  77   3   0   1   0]
 [  2   1 143   0   0   0]
 [  0   1   4  95   1   0]
 [  0   0   1   4  68   1]
 [  0   0   1   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,1,0.9703109327983952,0.9640287769784173,5.776327352829549,8772.159552574158,277.10400295329265,"[[ 59   0   0   0   0   0]
 [  2  77   2   0   0   0]
 [  0   0 145   1   0   0]
 [  1   0   3  92   5   0]
 [  0   0   0   6  68   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,2,0.9687123947051745,0.9621621621621622,5.7730322338129305,9079.684138298035,249.657375820176,"[[ 59   0   0   0   0   0]
 [  2  76   1   1   0   0]
 [  1   1 142   2   0   0]
 [  0   1   4  94   2   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,3,0.9707180104292018,0.9369369369369369,5.62383840693522,8328.663223981857,277.37648044083295,"[[ 58   0   1   0   0   0]
 [  2  74   2   0   1   1]
 [  1   0 144   1   0   0]
 [  0   1   8  89   2   1]
 [  0   0   1  10  62   1]
 [  0   0   0   2   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,4,0.9719213798636182,0.9351351351351351,5.617840418209486,8079.355841875076,453.51201921579235,"[[ 59   0   0   0   0   0]
 [  3  75   1   1   0   0]
 [  2   2 136   6   0   0]
 [  0   0   5  92   4   0]
 [  0   0   0   8  64   2]
 [  0   0   0   1   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,5,0.9699217966713455,0.9548736462093863,5.740337047409598,8939.639121294022,262.6212418157431,"[[ 58   0   1   0   0   0]
 [  0  79   0   0   1   0]
 [  0   2 139   5   0   0]
 [  0   0   3  96   2   0]
 [  0   1   2   4  65   2]
 [  0   0   1   0   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,6,0.9705233607379186,0.9350180505415162,5.625662713560837,8634.463149309158,262.36101205252464,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   3 137   4   2   0]
 [  0   1   5  93   2   0]
 [  0   0   0   7  65   2]
 [  0   0   0   2   6  86]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,7,0.9709302325581395,0.945750452079566,5.674630134402442,8938.764345645905,453.6939333831473,"[[ 59   0   0   0   0   0]
 [  1  78   0   1   0   0]
 [  0   2 140   3   1   0]
 [  0   0   4  89   8   0]
 [  0   0   0   7  65   1]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,8,0.9703347364201242,0.9547101449275363,5.745410174660953,8576.121693849564,453.7947313952257,"[[ 59   0   0   0   0   0]
 [  2  74   4   0   0   0]
 [  0   1 142   2   0   0]
 [  0   0   8  91   2   0]
 [  0   0   0   3  69   1]
 [  0   0   0   1   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,1,9,0.9715430861723446,0.9528130671506352,5.712862426391836,8876.025491952896,277.39296972653153,"[[ 57   1   0   1   0   0]
 [  1  78   1   0   0   0]
 [  0   0 143   2   0   0]
 [  0   0   6  90   4   0]
 [  0   0   1   6  63   3]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,0,0.9713139418254765,0.947841726618705,5.698306343305477,9026.414251327515,262.5192155148898,"[[ 59   0   0   0   0   0]
 [  1  74   3   1   0   2]
 [  2   1 138   4   1   0]
 [  0   0   3  95   3   0]
 [  0   0   2   2  70   0]
 [  0   0   0   1   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,1,0.9703109327983952,0.947841726618705,5.684511299990144,8189.717501401901,277.1003305127262,"[[ 58   1   0   0   0   0]
 [  1  78   1   1   0   0]
 [  0   0 141   5   0   0]
 [  0   1   2  94   4   0]
 [  0   0   1   6  64   3]
 [  0   0   1   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,2,0.9697152025671881,0.9333333333333333,5.602295804446469,8835.622829198837,277.1742841993035,"[[ 58   1   0   0   0   0]
 [  1  77   1   0   0   1]
 [  1   2 139   3   1   0]
 [  1   1   6  85   7   1]
 [  0   0   1   5  68   0]
 [  0   1   0   0   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,3,0.9693140794223827,0.954954954954955,5.734549115062797,9102.370864152908,453.51201921579235,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  1   1 141   2   1   0]
 [  0   1   5  92   3   0]
 [  0   1   0   3  67   3]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,4,0.970517448856799,0.954954954954955,5.728457109636781,8188.168770074844,277.17061063256233,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   1   3  93   4   0]
 [  0   0   0   6  66   2]
 [  0   0   0   2   3  90]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,5,0.9685181471826749,0.9494584837545126,5.696487478574768,9265.477740764618,277.20783034930696,"[[ 57   0   1   1   0   0]
 [  2  73   3   1   1   0]
 [  0   1 143   2   0   0]
 [  0   0   5  93   3   0]
 [  0   0   1   6  66   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,6,0.9719270102265891,0.9602888086642599,5.762918156899376,8650.40437579155,277.20048300826073,"[[ 59   0   0   0   0   0]
 [  2  76   1   0   1   0]
 [  0   2 141   3   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   8  66   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,7,0.9713311948676825,0.9584086799276673,5.762195984001892,9009.099036455154,277.00277186751975,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   6  92   3   0]
 [  0   0   2   2  66   3]
 [  0   0   0   1   2  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,8,0.97153738224093,0.947463768115942,5.681168933388545,9379.312407970428,277.3226778190554,"[[ 57   1   1   0   0   0]
 [  2  78   0   0   0   0]
 [  0   1 143   1   0   0]
 [  1   1   9  88   2   0]
 [  0   0   0   6  65   2]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,2,9,0.9711422845691383,0.9582577132486388,5.747873176061662,9079.908645153046,237.73074386354781,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  1   2 141   1   0   0]
 [  0   0   3  96   1   0]
 [  0   0   2   7  64   0]
 [  0   0   1   0   4  89]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,0,0.9707121364092277,0.9316546762589928,5.598011263416722,8652.053380012512,453.4505625265255,"[[ 57   1   1   0   0   0]
 [  1  78   1   1   0   0]
 [  3   1 137   4   1   0]
 [  0   1   6  89   5   0]
 [  0   0   1   6  67   0]
 [  0   0   2   0   3  90]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,1,0.9699097291875627,0.9622302158273381,5.783827810298321,9171.256470680237,415.6367247441943,"[[ 59   0   0   0   0   0]
 [  1  77   3   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   4  94   3   0]
 [  0   0   1   3  69   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,2,0.9707180104292018,0.9477477477477477,5.689401870084948,9094.450813531877,237.60495078115562,"[[ 59   0   0   0   0   0]
 [  1  75   4   0   0   0]
 [  0   0 143   2   1   0]
 [  1   1   4  90   5   0]
 [  0   0   1   3  68   2]
 [  0   0   0   1   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,3,0.9707180104292018,0.9423423423423424,5.645898547356142,8642.209082841873,415.7448956752463,"[[ 58   0   1   0   0   0]
 [  2  76   0   1   1   0]
 [  1   1 141   3   0   0]
 [  1   2   4  91   3   0]
 [  0   0   2   9  62   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,4,0.9709185720016045,0.9441441441441442,5.675537755824108,9329.541248083115,262.56528403599236,"[[ 58   1   0   0   0   0]
 [  1  77   1   1   0   0]
 [  0   1 140   5   0   0]
 [  0   0   6  94   1   0]
 [  0   0   0   6  65   3]
 [  0   0   0   2   3  90]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,5,0.9699217966713455,0.9638989169675091,5.772088306992347,8943.337035179138,277.2151780798536,"[[ 58   1   0   0   0   0]
 [  2  78   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   3  97   1   0]
 [  0   0   1   6  64   3]
 [  0   0   0   1   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,6,0.9693202326047724,0.9530685920577617,5.727361547075198,8611.651402711868,453.62265069283615,"[[ 58   0   1   0   0   0]
 [  0  77   2   0   1   0]
 [  0   2 140   3   1   0]
 [  0   0   4  93   4   0]
 [  0   0   0   5  68   1]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,7,0.9715316760224539,0.945750452079566,5.669251472998421,8418.1118786335,262.67720100065605,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  1   3 140   2   0   0]
 [  0   0   4  92   5   0]
 [  0   3   2   7  60   1]
 [  0   0   0   1   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,8,0.9719382641811987,0.9547101449275363,5.73070083283337,8164.057666063309,277.0546374170897,"[[ 59   0   0   0   0   0]
 [  1  77   1   0   0   1]
 [  0   1 142   2   0   0]
 [  0   1   5  91   4   0]
 [  0   0   0   6  66   1]
 [  0   0   0   1   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,3,9,0.9723446893787575,0.956442831215971,5.753102451410648,7976.614463329316,277.3745886190178,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 140   4   0   0]
 [  0   0   6  91   3   0]
 [  0   0   0   5  68   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,0,0.9707121364092277,0.9442446043165468,5.681263539128114,8827.702921628952,277.09665816949973,"[[ 59   0   0   0   0   0]
 [  2  75   4   0   0   0]
 [  1   0 137   7   1   0]
 [  0   0   3  97   1   0]
 [  0   0   1   8  65   0]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,1,0.9691073219658977,0.9568345323741008,5.745299883643639,8706.6721200943,453.43089517041494,"[[ 58   0   1   0   0   0]
 [  2  77   2   0   0   0]
 [  0   1 140   5   0   0]
 [  0   1   1  97   2   0]
 [  0   0   1   5  67   1]
 [  0   0   1   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,2,0.9717208182912154,0.9441441441441442,5.654905859360951,8181.947106122971,277.15224425940335,"[[ 59   0   0   0   0   0]
 [  4  74   0   2   0   0]
 [  1   1 141   3   0   0]
 [  0   1   4  87   9   0]
 [  0   0   0   6  68   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,3,0.9693140794223827,0.9657657657657658,5.806183303736852,9352.77773141861,262.57187734347855,"[[ 58   0   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 143   3   0   0]
 [  0   1   3  97   0   0]
 [  0   0   0   4  70   0]
 [  0   0   0   1   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,4,0.9695146409947853,0.9531531531531532,5.709685335133092,8115.360093116759,262.56528403599236,"[[ 58   1   0   0   0   0]
 [  0  77   1   0   2   0]
 [  1   1 142   2   0   0]
 [  1   1   2  94   3   0]
 [  0   0   0   8  65   1]
 [  0   0   0   2   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,5,0.9709244034489674,0.9584837545126353,5.754178081485045,8593.762004375458,166.40673715812534,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 144   1   0   1]
 [  0   0   6  94   1   0]
 [  0   0   0   8  64   2]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,6,0.970723882093443,0.9350180505415162,5.6105287290693395,9423.987472057343,277.20783034930696,"[[ 59   0   0   0   0   0]
 [  1  75   4   0   0   0]
 [  2   1 141   2   0   0]
 [  0   0   5  87   9   0]
 [  0   0   1   3  65   5]
 [  0   0   0   0   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,7,0.9713311948676825,0.9475587703435805,5.68848586731714,8681.611627340317,277.2891403575523,"[[ 58   0   1   0   0   0]
 [  1  76   2   1   0   0]
 [  2   1 140   0   3   0]
 [  0   0   5  94   2   0]
 [  0   0   1   5  65   2]
 [  0   0   1   1   1  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,8,0.9717378232110644,0.947463768115942,5.71205781755403,8707.272231578827,262.7364604351615,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   3 137   5   0   0]
 [  0   1   9  88   3   0]
 [  0   0   1   5  66   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,10,4,9,0.9695390781563126,0.9637023593466425,5.767641060202681,9919.778555631638,262.7990226001399,"[[ 58   1   0   0   0   0]
 [  1  78   0   0   0   1]
 [  0   1 143   0   1   0]
 [  0   2   2  94   2   0]
 [  0   0   0   6  65   2]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
RF,10,0,0,1.0,0.908273381294964,5.450697317271249,745.073652267456,453.4505625265255,"[[ 55   3   1   0   0   0]
 [  0  76   4   0   0   1]
 [  1   3 138   4   0   0]
 [  0   2   9  89   1   0]
 [  0   0   1   4  62   7]
 [  0   0   0   1   9  85]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,1,1.0,0.9496402877697842,5.699288634783755,722.3876237869263,415.62846257418056,"[[ 54   3   2   0   0   0]
 [  0  80   0   1   0   0]
 [  1   2 139   2   2   0]
 [  0   2   5  91   3   0]
 [  0   0   1   0  71   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,2,0.9997994384275972,0.9315315315315316,5.6018033003910155,768.2604551315308,383.7492612740465,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  2   3 135   5   1   0]
 [  0   0   4  91   5   1]
 [  0   0   1   3  67   3]
 [  0   0   0   2   4  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,3,1.0,0.9243243243243243,5.561405451256507,737.9768133163452,415.71183839415534,"[[ 54   1   3   1   0   0]
 [  1  74   3   2   0   0]
 [  0   1 142   1   1   1]
 [  0   0  11  87   2   1]
 [  0   0   2   5  66   1]
 [  0   0   1   0   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,4,0.9993983152827918,0.9261261261261261,5.571142356496757,731.9819927215576,415.7448956752463,"[[ 57   0   2   0   0   0]
 [  1  77   1   1   0   0]
 [  0   0 138   6   1   1]
 [  0   3   7  91   0   0]
 [  0   0   2   3  66   3]
 [  0   0   0   1   9  85]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,5,0.9995989572889513,0.9259927797833934,5.5715338180071425,715.0912523269653,415.77041973118395,"[[ 59   0   0   0   0   0]
 [  4  71   5   0   0   0]
 [  0   1 137   6   2   0]
 [  1   0   6  92   2   0]
 [  0   0   1   3  69   1]
 [  0   0   0   1   8  85]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,6,0.9993984359334269,0.927797833935018,5.5726754485129995,811.834979057312,415.77868423026354,"[[ 55   3   1   0   0   0]
 [  0  77   2   0   1   0]
 [  0   0 141   5   0   0]
 [  0   0   9  87   4   1]
 [  0   0   0   4  66   4]
 [  0   0   0   1   5  88]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,7,0.9991980753809142,0.9294755877034359,5.580576115326311,733.2803964614868,415.9033924468834,"[[ 57   0   2   0   0   0]
 [  2  76   1   0   1   0]
 [  0   2 142   2   0   0]
 [  0   1  11  86   3   0]
 [  0   0   0   5  63   5]
 [  0   0   0   1   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,8,1.0,0.9239130434782609,5.560391000998349,482.9226493835449,554.6380050273982,"[[ 57   2   0   0   0   0]
 [  0  76   3   1   0   0]
 [  1   3 137   3   1   0]
 [  0   0  11  85   5   0]
 [  0   0   1   2  65   5]
 [  0   0   0   0   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,0,9,0.9993987975951903,0.9292196007259528,5.60149837227156,716.3897514343262,416.6914262612939,"[[ 54   0   3   2   0   0]
 [  0  76   4   0   0   0]
 [  1   4 133   6   1   0]
 [  0   1   6  92   1   0]
 [  0   0   0   5  67   1]
 [  0   0   1   1   2  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,0,0.9997993981945837,0.9244604316546763,5.557376985838904,735.8790397644043,383.67229591879703,"[[ 56   2   1   0   0   0]
 [  1  73   6   0   0   1]
 [  2   0 139   3   2   0]
 [  0   1   8  91   1   0]
 [  0   0   1   3  69   1]
 [  0   0   0   0   9  86]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,1,1.0,0.9316546762589928,5.608195951707223,746.1748838424683,277.0929859236093,"[[ 57   1   1   0   0   0]
 [  1  78   2   0   0   0]
 [  0   0 141   5   0   0]
 [  1   2  11  85   2   0]
 [  0   0   1   2  68   3]
 [  0   1   0   2   3  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,2,0.9997994384275972,0.9333333333333333,5.602673819282102,747.3743438720703,415.72010222157525,"[[ 54   2   2   1   0   0]
 [  2  76   1   0   1   0]
 [  0   0 138   7   0   1]
 [  0   0   6  92   3   0]
 [  0   0   2   5  66   1]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,3,1.0,0.9459459459459459,5.68288018614368,930.8677673339844,415.6870488830325,"[[ 54   3   2   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 139   5   1   0]
 [  0   0   5  91   5   0]
 [  0   0   1   3  69   1]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,4,1.0,0.9315315315315316,5.623084961406215,722.3870038986206,415.73663086210115,"[[ 58   1   0   0   0   0]
 [  0  80   0   0   0   0]
 [  1   3 134   8   0   0]
 [  0   1  11  85   4   0]
 [  0   0   0   0  71   3]
 [  0   0   0   1   5  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,5,0.9989973932223782,0.9404332129963899,5.651044491549912,739.6768093109131,383.826226629296,"[[ 57   2   0   0   0   0]
 [  0  77   2   1   0   0]
 [  1   5 136   3   1   0]
 [  0   0   5  91   5   0]
 [  0   0   0   6  67   1]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,6,0.9995989572889513,0.9314079422382672,5.591608031354922,493.31774711608887,415.7869490579057,"[[ 56   2   1   0   0   0]
 [  1  76   3   0   0   0]
 [  2   1 139   2   2   0]
 [  0   0   8  92   1   0]
 [  0   0   0   4  67   3]
 [  0   0   1   0   7  86]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,7,0.9993985565356857,0.9258589511754068,5.563755247971536,768.5602188110352,356.4572403480016,"[[ 58   0   1   0   0   0]
 [  1  76   2   0   1   0]
 [  0   1 142   3   0   0]
 [  0   3   9  85   3   1]
 [  0   0   4   3  61   5]
 [  0   0   0   0   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,8,0.9997995590298657,0.9347826086956522,5.604215025450564,736.2782955169678,415.9950430252314,"[[ 57   2   0   0   0   0]
 [  3  73   4   0   0   0]
 [  0   3 140   1   1   0]
 [  0   0   5  92   4   0]
 [  0   0   1   3  67   2]
 [  0   0   0   4   3  87]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,1,9,0.9995991983967936,0.9274047186932849,5.593510497268911,762.4653100967407,453.8955337792766,"[[ 59   0   0   0   0   0]
 [  0  75   4   1   0   0]
 [  0   4 134   4   1   2]
 [  0   1   8  88   3   0]
 [  0   0   1   2  66   4]
 [  0   0   0   1   4  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,0,0.9993981945837512,0.9334532374100719,5.623473431348324,717.3898935317993,415.6367247441943,"[[ 56   2   1   0   0   0]
 [  0  76   3   1   0   1]
 [  0   4 138   2   2   0]
 [  0   1   9  88   2   1]
 [  0   0   1   0  71   2]
 [  0   0   0   1   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,1,1.0,0.9316546762589928,5.58272756241428,749.571681022644,415.6367247441943,"[[ 55   2   1   1   0   0]
 [  3  73   3   0   2   0]
 [  0   0 139   6   1   0]
 [  0   0   4  93   3   1]
 [  0   0   2   3  66   3]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,2,1.0,0.9135135135135135,5.469573334580119,717.6895380020142,623.5553623169127,"[[ 54   3   2   0   0   0]
 [  3  74   3   0   0   0]
 [  0   2 138   6   0   0]
 [  0   1   7  89   4   0]
 [  0   0   1   7  59   7]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,3,0.9997994384275972,0.9405405405405406,5.660044542400983,511.7068767547608,415.72010222157525,"[[ 58   1   0   0   0   0]
 [  2  76   2   0   0   0]
 [  0   1 140   4   1   0]
 [  0   2   9  87   3   0]
 [  0   0   2   1  69   2]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,4,0.9993983152827918,0.9261261261261261,5.571671096950339,722.888445854187,415.71183839415534,"[[ 56   0   3   0   0   0]
 [  0  75   4   1   0   0]
 [  0   1 142   3   0   0]
 [  0   1   8  89   3   0]
 [  0   0   0   6  66   2]
 [  0   0   1   0   8  86]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,5,0.9995989572889513,0.9314079422382672,5.613911524844601,854.0111064910889,415.82001165449225,"[[ 56   1   2   0   0   0]
 [  1  75   3   1   0   0]
 [  0   1 143   2   0   0]
 [  0   0  13  83   5   0]
 [  0   0   1   0  68   5]
 [  0   0   1   0   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,6,0.9993984359334269,0.9223826714801444,5.539106366309473,738.3769035339355,415.8365449246706,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  1   1 138   5   0   1]
 [  0   2   7  88   3   1]
 [  0   0   1   6  62   5]
 [  0   0   0   2   7  85]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,7,1.0,0.9403254972875226,5.636409658720171,877.2989511489868,356.4876097006966,"[[ 55   3   1   0   0   0]
 [  2  75   3   0   0   0]
 [  0   1 138   6   1   0]
 [  0   2   2  94   2   1]
 [  0   0   1   4  66   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,8,1.0,0.9384057971014492,5.636504156395082,715.8910036087036,415.9702346537182,"[[ 57   2   0   0   0   0]
 [  0  77   2   0   0   1]
 [  1   1 138   2   2   1]
 [  0   0   8  91   2   0]
 [  0   0   0   3  65   5]
 [  0   0   0   0   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,2,9,0.9991983967935871,0.9328493647912885,5.616593899194347,856.1110258102417,453.85616302930475,"[[ 57   1   1   0   0   0]
 [  0  78   2   0   0   0]
 [  2   3 138   1   1   0]
 [  0   0   9  87   4   0]
 [  0   0   3   0  68   2]
 [  0   0   0   2   6  86]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,0,0.9997993981945837,0.9316546762589928,5.609048548431749,755.868124961853,415.66151322525127,"[[ 57   1   1   0   0   0]
 [  0  76   5   0   0   0]
 [  0   3 137   5   0   1]
 [  0   0   6  91   4   0]
 [  0   0   0   4  68   2]
 [  0   0   0   0   6  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,1,0.9993981945837512,0.9442446043165468,5.672006724625877,475.22754669189453,356.33392024993486,"[[ 56   1   2   0   0   0]
 [  1  78   1   0   0   1]
 [  0   1 141   2   2   0]
 [  0   1   8  90   2   0]
 [  0   0   0   3  68   3]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,2,0.9995988768551946,0.9333333333333333,5.61250124154653,714.891529083252,383.7210961906524,"[[ 57   1   1   0   0   0]
 [  1  78   1   0   0   0]
 [  0   3 139   4   0   0]
 [  0   2   8  89   2   0]
 [  0   0   1   4  68   1]
 [  0   0   0   0   8  87]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,3,0.9997994384275972,0.9171171171171171,5.524246043160798,719.1884517669678,415.7035748952713,"[[ 55   2   2   0   0   0]
 [  0  77   1   0   2   0]
 [  0   3 133   9   1   0]
 [  0   0   7  88   5   1]
 [  0   0   2   2  67   3]
 [  0   0   0   0   6  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,4,0.9995988768551946,0.9333333333333333,5.595263699510265,720.1902151107788,383.77743049237176,"[[ 53   3   3   0   0   0]
 [  2  76   2   0   0   0]
 [  2   2 138   3   1   0]
 [  0   0   7  91   3   0]
 [  0   0   2   2  67   3]
 [  0   1   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,5,0.9997994786444756,0.9350180505415162,5.644621661059884,730.182671546936,415.80347969895627,"[[ 59   0   0   0   0   0]
 [  1  74   4   1   0   0]
 [  0   2 140   3   1   0]
 [  0   1  13  85   1   1]
 [  0   0   0   3  69   2]
 [  0   0   0   1   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,6,0.9993984359334269,0.9115523465703971,5.487046746309119,724.285364151001,383.84735739250965,"[[ 57   1   1   0   0   0]
 [  2  74   3   1   0   0]
 [  0   1 138   5   1   1]
 [  0   1   9  86   5   0]
 [  0   0   2   3  65   4]
 [  0   0   2   2   5  85]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,7,1.0,0.9349005424954792,5.608181253649461,851.5136241912842,332.62617216409154,"[[ 55   3   1   0   0   0]
 [  2  71   5   2   0   0]
 [  1   1 141   2   1   0]
 [  0   1   7  91   2   0]
 [  0   0   2   3  65   3]
 [  0   0   0   0   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,8,0.9995991180597315,0.9384057971014492,5.628505852402753,772.1579313278198,384.4175084393511,"[[ 59   0   0   0   0   0]
 [  1  75   3   0   0   1]
 [  0   1 141   2   1   0]
 [  0   2   4  94   1   0]
 [  0   0   1   4  61   7]
 [  0   0   0   3   3  88]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,3,9,1.0,0.9237749546279492,5.556726966590309,714.2919063568115,416.01226313367357,"[[ 54   3   1   1   0   0]
 [  0  77   2   1   0   0]
 [  1   0 137   7   0   0]
 [  0   0  10  88   2   0]
 [  0   0   1   3  66   3]
 [  0   0   0   1   6  87]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,0,0.9995987963891675,0.9334532374100719,5.61401681391685,722.7863550186157,623.4674808380543,"[[ 57   1   1   0   0   0]
 [  1  78   2   0   0   0]
 [  1   1 139   5   0   0]
 [  0   1   7  91   2   0]
 [  0   0   3   4  64   3]
 [  0   0   1   1   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,1,0.9989969909729187,0.9388489208633094,5.638447463224189,654.6257734298706,383.67933642335504,"[[ 55   2   1   1   0   0]
 [  0  80   0   1   0   0]
 [  0   2 139   4   1   0]
 [  0   0   6  92   3   0]
 [  0   0   2   4  66   2]
 [  0   0   0   1   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,2,0.9995988768551946,0.9153153153153153,5.48722862687507,720.9892272949219,415.73663086210115,"[[ 55   3   1   0   0   0]
 [  4  74   2   0   0   0]
 [  2   1 140   3   0   0]
 [  0   1  10  87   3   0]
 [  0   0   1   3  68   2]
 [  0   0   1   1   9  84]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,3,0.9997994384275972,0.9225225225225225,5.526969132605885,716.8903350830078,383.7633453662858,"[[ 58   1   0   0   0   0]
 [  3  73   4   0   0   0]
 [  0   4 138   3   0   1]
 [  1   1   5  92   2   0]
 [  0   0   2   5  61   6]
 [  0   0   0   0   5  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,4,0.9997994384275972,0.9405405405405406,5.6407689964066385,754.1690826416016,415.72010222157525,"[[ 58   1   0   0   0   0]
 [  1  73   5   0   0   1]
 [  0   0 143   3   0   0]
 [  0   1   4  95   1   0]
 [  0   0   1   8  62   3]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,5,1.0,0.9350180505415162,5.601874516719974,713.3916616439819,383.84735739250965,"[[ 54   4   1   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 142   2   1   0]
 [  0   0   7  90   3   1]
 [  0   0   1   1  66   6]
 [  0   0   0   0   5  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,6,0.9997994786444756,0.944043321299639,5.682856006985299,755.1682710647583,383.8191835585472,"[[ 58   1   0   0   0   0]
 [  0  77   2   0   1   0]
 [  0   1 139   4   2   0]
 [  0   0   9  90   2   0]
 [  0   0   0   3  67   4]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,7,0.9995990376904571,0.9113924050632911,5.501211559961241,711.1940145492554,383.9243269849284,"[[ 53   5   0   1   0   0]
 [  0  76   2   2   0   0]
 [  0   0 133  11   2   0]
 [  0   2  12  84   3   0]
 [  0   0   2   0  68   3]
 [  0   0   0   2   2  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,8,0.9997995590298657,0.9420289855072463,5.6702788902112164,813.934063911438,383.9872034937048,"[[ 56   1   2   0   0   0]
 [  0  74   4   0   1   1]
 [  0   3 138   3   1   0]
 [  0   2   7  90   2   0]
 [  0   0   0   2  70   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,10,4,9,1.0,0.9310344827586207,5.607735659898535,725.6853103637695,416.01226313367357,"[[ 54   0   5   0   0   0]
 [  0  76   4   0   0   0]
 [  0   4 138   2   0   1]
 [  0   0   7  91   2   0]
 [  0   0   0   5  67   1]
 [  0   0   1   2   4  87]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
NN,10,0,0,0.9356068204613841,0.9244604316546763,5.5402134705671315,8769.486594200134,1246.7862513280024,"[[ 57   1   0   1   0   0]
 [  1  77   3   0   0   0]
 [  1   1 139   3   2   0]
 [  0   2   3  91   5   0]
 [  0   0   2   8  62   2]
 [  0   0   1   1   5  88]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,1,0.9311935807422267,0.9244604316546763,5.547350551434367,9263.503909111023,1246.6375766021479,"[[ 59   0   0   0   0   0]
 [  3  73   4   1   0   0]
 [  1   0 143   1   1   0]
 [  3   0  10  82   6   0]
 [  0   0   0   3  66   5]
 [  0   0   0   0   4  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,2,0.9113517849979944,0.9099099099099099,5.470785109817686,9290.188694000244,997.5577055817563,"[[ 55   2   2   0   0   0]
 [  1  73   3   1   1   1]
 [  2   3 138   1   2   0]
 [  0   1  13  83   3   1]
 [  0   0   0   5  66   3]
 [  0   0   1   1   3  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,3,0.9049338146811071,0.8954954954954955,5.375907855060111,9238.51842880249,1246.0704128447596,"[[ 54   4   0   1   0   0]
 [  1  76   2   1   0   0]
 [  0   6 140   0   0   0]
 [  1   0  15  76   9   0]
 [  0   0   1   5  63   5]
 [  0   0   1   1   5  88]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,4,0.9129562775772162,0.8990990990990991,5.413472504266526,8449.170327186584,997.7004789759716,"[[ 55   2   1   1   0   0]
 [  0  79   0   1   0   0]
 [  0   3 135   8   0   0]
 [  1   0  10  82   8   0]
 [  0   0   1   7  64   2]
 [  0   0   0   3   8  84]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,5,0.9031481852817325,0.8880866425992779,5.3481278119221844,9466.288328170776,1247.3608469657217,"[[ 51   5   2   1   0   0]
 [  0  74   5   0   1   0]
 [  0   5 136   4   1   0]
 [  0   0  13  82   6   0]
 [  0   0   1   4  66   3]
 [  0   0   0   2   9  83]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,6,0.9159815520352917,0.9097472924187726,5.455327916487871,8686.834502220154,1247.212094852353,"[[ 55   3   1   0   0   0]
 [  1  75   4   0   0   0]
 [  0   3 137   5   1   0]
 [  0   0   6  92   3   0]
 [  0   0   1  12  57   4]
 [  0   0   1   0   5  88]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,7,0.9364474739374499,0.9132007233273056,5.499514743099617,7995.4288721084595,1247.6853737337087,"[[ 58   1   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   2 132  10   2   0]
 [  0   1   1  97   2   0]
 [  0   0   1  10  59   3]
 [  0   0   2   4   7  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,8,0.9204249348566848,0.8894927536231884,5.327981789872169,9589.517617225647,1247.7122801721255,"[[ 57   2   0   0   0   0]
 [  3  72   5   0   0   0]
 [  2   1 139   3   0   0]
 [  0   1   9  82   7   2]
 [  0   0   1   9  60   3]
 [  0   0   0   3  10  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,0,9,0.9240480961923848,0.9183303085299456,5.496161813150424,8694.529628753662,1248.4834737988238,"[[ 57   2   0   0   0   0]
 [  4  70   6   0   0   0]
 [  0   0 139   5   1   0]
 [  0   0   2  96   2   0]
 [  0   0   0   9  61   3]
 [  0   0   0   3   8  83]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,0,0.9342026078234704,0.9154676258992805,5.501405495472724,8336.034297943115,831.422198048066,"[[ 56   2   1   0   0   0]
 [  1  78   1   1   0   0]
 [  0   3 134   9   0   0]
 [  0   0   5  90   6   0]
 [  0   0   0   7  62   5]
 [  0   0   1   1   4  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,1,0.9197592778335005,0.9046762589928058,5.425842836641355,9145.571541786194,997.5479692660296,"[[ 57   1   0   1   0   0]
 [  2  75   4   0   0   0]
 [  0   3 139   4   0   0]
 [  0   0   4  88   8   1]
 [  0   0   1   8  63   2]
 [  0   0   0   2  12  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,2,0.8941034897713598,0.8648648648648649,5.215486413898664,9115.788531303406,1247.036358900987,"[[ 54   4   1   0   0   0]
 [  1  78   0   1   0   0]
 [  2   3 138   3   0   0]
 [  2   0  21  68   9   1]
 [  0   0   4   6  63   1]
 [  0   0   2   2  12  79]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,3,0.8965102286401926,0.9207207207207208,5.5385712874448885,10617.729496955872,1246.9620021924668,"[[ 57   1   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   5 139   2   0   0]
 [  0   0   9  91   1   0]
 [  0   0   1   9  63   1]
 [  0   0   0   2   9  84]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,4,0.933012434817489,0.9135135135135135,5.48137013372415,9728.138399124146,1246.9620021924668,"[[ 57   2   0   0   0   0]
 [  3  73   3   0   1   0]
 [  0   3 137   4   2   0]
 [  1   0   5  92   3   0]
 [  0   0   0   8  66   0]
 [  0   0   0   3  10  82]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,5,0.9119711249248045,0.8953068592057761,5.4020075031213475,10393.558263778687,997.662598674783,"[[ 54   3   2   0   0   0]
 [  2  72   6   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0  19  77   4   1]
 [  0   0   1   4  68   1]
 [  0   0   0   2  11  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,6,0.8897132544616002,0.8880866425992779,5.342274518931317,8859.733867645264,831.6234909554674,"[[ 59   0   0   0   0   0]
 [  2  73   4   0   0   1]
 [  0   0 138   3   3   2]
 [  0   2  14  75  10   0]
 [  0   0   0   6  58  10]
 [  0   0   0   0   5  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,7,0.9170008019246191,0.9059674502712477,5.442368898089597,9680.368328094482,998.1959228881751,"[[ 54   3   1   1   0   0]
 [  0  79   1   0   0   0]
 [  0   4 136   5   1   0]
 [  0   2   7  89   2   1]
 [  0   0   0   7  62   4]
 [  0   0   2   2   9  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,8,0.9142112647825216,0.8677536231884058,5.2512198325310635,9440.902471542358,1247.9355111382263,"[[ 55   2   0   2   0   0]
 [  0  72   8   0   0   0]
 [  1   1 136   4   3   0]
 [  0   0  14  75  12   0]
 [  0   0   1   8  63   1]
 [  0   0   0   0  16  78]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,1,9,0.917434869739479,0.9038112522686026,5.41587735325403,9354.951977729797,1247.2186970245389,"[[ 56   3   0   0   0   0]
 [  0  75   4   0   1   0]
 [  0   6 134   5   0   0]
 [  1   0   3  90   6   0]
 [  0   0   0   5  61   7]
 [  0   0   0   3   9  82]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,0,0.8732196589769308,0.8633093525179856,5.208132809386348,9819.586753845215,1246.7119095325806,"[[ 56   2   0   1   0   0]
 [  3  76   2   0   0   0]
 [  0   4 122  14   3   3]
 [  1   1   9  76  13   1]
 [  0   0   1   4  61   8]
 [  0   0   1   2   3  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,1,0.9111334002006019,0.8848920863309353,5.344080053214884,8641.85893535614,1245.7462723292995,"[[ 57   0   1   1   0   0]
 [  3  72   6   0   0   0]
 [  0   4 137   5   0   0]
 [  0   3  12  79   7   0]
 [  0   0   0   4  69   1]
 [  0   0   2   2  13  78]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,2,0.9165663858804654,0.9279279279279279,5.5833082202154865,9762.817907333374,1247.259482243014,"[[ 56   2   1   0   0   0]
 [  1  77   2   0   0   0]
 [  1   4 135   4   2   0]
 [  0   1   9  88   3   0]
 [  0   0   0   2  69   3]
 [  0   0   0   1   4  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,3,0.9318090653830726,0.9135135135135135,5.464028542749929,10362.175869941711,997.4149730441426,"[[ 56   1   2   0   0   0]
 [  2  74   3   0   1   0]
 [  2   1 140   2   1   0]
 [  0   0   7  84   9   1]
 [  0   0   0   9  60   5]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,4,0.9334135579622944,0.918918918918919,5.5015148871595585,9311.376881599426,1247.036358900987,"[[ 55   4   0   0   0   0]
 [  3  71   5   1   0   0]
 [  0   1 139   4   2   0]
 [  1   0   4  89   7   0]
 [  0   0   0   2  69   3]
 [  0   0   0   2   6  87]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,5,0.9201925005013034,0.9097472924187726,5.469247853333927,9194.943261146545,1662.8503093270926,"[[ 57   1   1   0   0   0]
 [  0  73   6   0   0   1]
 [  0   0 140   4   2   0]
 [  1   1   8  89   1   1]
 [  0   0   0   8  64   2]
 [  0   0   0   0  13  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,6,0.9227992781231201,0.9169675090252708,5.485832564943102,10251.13959312439,1247.212094852353,"[[ 53   4   1   1   0   0]
 [  1  76   3   0   0   0]
 [  0   1 140   4   1   0]
 [  1   1   5  91   3   0]
 [  0   0   0   6  62   6]
 [  0   0   1   3   4  86]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,7,0.9065757818765036,0.8969258589511754,5.389464826032162,9073.412370681763,1663.7127908566108,"[[ 57   1   1   0   0   0]
 [  1  76   2   0   1   0]
 [  0   1 140   3   2   0]
 [  0   0   9  81  10   1]
 [  0   0   1   7  61   4]
 [  0   0   1   3   9  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,8,0.94167167769092,0.9112318840579711,5.484571912228308,10111.718797683716,998.4913227948668,"[[ 55   3   1   0   0   0]
 [  0  77   3   0   0   0]
 [  1   3 132   6   2   1]
 [  0   0   6  82  13   0]
 [  0   0   0   2  67   4]
 [  0   0   0   0   4  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,2,9,0.9270541082164329,0.9310344827586207,5.592747853257255,9315.474128723145,1248.0367891929252,"[[ 56   3   0   0   0   0]
 [  1  76   2   0   1   0]
 [  0   3 140   2   0   0]
 [  0   0   9  89   2   0]
 [  0   0   0   4  67   2]
 [  0   0   0   5   4  85]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,0,0.9155466399197593,0.8974820143884892,5.4018187317453785,8987.162709236145,1246.9349615201559,"[[ 54   3   1   1   0   0]
 [  0  72   8   0   1   0]
 [  0   1 134  11   0   0]
 [  0   1   3  92   5   0]
 [  0   0   0   6  65   3]
 [  0   0   0   1  12  82]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,1,0.9346038114343029,0.9388489208633094,5.638934135927468,8692.931771278381,1246.6375766021479,"[[ 57   1   0   1   0   0]
 [  0  81   0   0   0   0]
 [  0   3 140   2   1   0]
 [  0   0   5  88   7   1]
 [  0   0   0   3  68   3]
 [  0   0   1   3   3  88]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,2,0.9067388688327317,0.8990990990990991,5.419959076749021,9736.433959007263,712.7257767367804,"[[ 57   0   0   2   0   0]
 [  1  73   6   0   0   0]
 [  1   1 140   3   1   0]
 [  1   1  15  75   9   0]
 [  0   0   2   5  65   2]
 [  0   0   0   1   5  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,3,0.9209787404733253,0.9225225225225225,5.539376403952224,8359.420919418335,997.7480791896537,"[[ 57   1   0   1   0   0]
 [  1  76   1   1   1   0]
 [  1   0 136   9   0   0]
 [  0   0   2  94   5   0]
 [  0   0   0   5  65   4]
 [  0   0   0   2   9  84]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,4,0.9233854793421581,0.8936936936936937,5.3988130917694725,8878.523802757263,997.7956839455576,"[[ 58   0   1   0   0   0]
 [  2  76   1   1   0   0]
 [  0   8 133   3   2   0]
 [  0   0  10  86   5   0]
 [  0   0   2   4  67   1]
 [  0   0   0   1  18  76]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,5,0.884098656506918,0.8880866425992779,5.345467160662847,10393.158102035522,831.6896240362481,"[[ 53   4   0   2   0   0]
 [  0  76   3   1   0   0]
 [  0   4 138   4   0   0]
 [  0   1  13  82   5   0]
 [  0   0   0   9  64   1]
 [  0   0   1   1  13  79]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,6,0.9203930218568277,0.8953068592057761,5.400602763192549,9308.078169822693,831.9211726727387,"[[ 56   3   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   3 139   2   2   0]
 [  1   0  15  80   5   0]
 [  0   0   0   6  68   0]
 [  0   0   0   4  13  77]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,7,0.8678829190056134,0.8679927667269439,5.267797930816987,8580.994129180908,1247.7597868889197,"[[ 58   1   0   0   0   0]
 [  1  74   5   0   0   0]
 [  0   1 139   2   4   0]
 [  0   1  26  63  11   0]
 [  0   0   1   3  62   7]
 [  0   0   0   2   8  84]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,8,0.9258368410503107,0.8967391304347826,5.38457539616917,8937.890028953552,831.8247198485877,"[[ 55   2   1   1   0   0]
 [  0  76   3   1   0   0]
 [  0   2 138   5   0   0]
 [  1   0   8  85   7   0]
 [  0   0   2   7  59   5]
 [  0   0   1   5   6  82]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,3,9,0.9122244488977956,0.8929219600725953,5.334200096585925,9336.562013626099,831.9583796363046,"[[ 51   6   2   0   0   0]
 [  3  74   3   0   0   0]
 [  0   0 138   5   2   0]
 [  0   1   7  89   2   1]
 [  0   0   0  12  60   1]
 [  0   0   0   1  13  80]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,0,0.883049147442327,0.8687050359712231,5.2138092185928295,9583.520984649658,1246.7862513280024,"[[ 56   3   0   0   0   0]
 [  1  75   5   0   0   0]
 [  2   4 138   2   0   0]
 [  2   1  18  70  10   0]
 [  0   0   2   8  57   7]
 [  0   0   0   2   6  87]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,1,0.9127382146439318,0.9064748201438849,5.468919900776952,8817.559337615967,997.5003785991212,"[[ 58   0   1   0   0   0]
 [  3  75   3   0   0   0]
 [  0   4 137   3   2   0]
 [  0   0  14  82   4   1]
 [  0   0   0   5  68   1]
 [  0   0   1   1   9  84]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,2,0.8937023666265543,0.8810810810810811,5.3295296383101505,8443.272948265076,831.5889828420575,"[[ 56   2   1   0   0   0]
 [  1  72   7   0   0   0]
 [  0   1 139   5   1   0]
 [  0   1  12  79   8   1]
 [  0   0   2   3  68   1]
 [  0   0   1   5  14  75]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,3,0.9023265142398716,0.8810810810810811,5.311574712202928,9200.939631462097,1247.4082755006257,"[[ 56   2   1   0   0   0]
 [  1  75   4   0   0   0]
 [  0   2 134   7   3   0]
 [  0   0  10  83   8   0]
 [  0   0   2   5  62   5]
 [  0   0   0   3  13  79]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,4,0.9253910950661853,0.918918918918919,5.507300851320084,7741.974925994873,1247.1107244778602,"[[ 54   3   1   1   0   0]
 [  1  78   1   0   0   0]
 [  0   1 140   3   2   0]
 [  0   1   7  88   5   0]
 [  0   0   1   9  62   2]
 [  0   0   1   2   4  88]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,5,0.9205935432123521,0.9205776173285198,5.516296252814181,9561.034154891968,1247.5096345659667,"[[ 54   4   0   1   0   0]
 [  1  74   3   2   0   0]
 [  0   3 136   7   0   0]
 [  1   0   2  92   6   0]
 [  0   0   0   3  68   3]
 [  0   0   0   1   7  86]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,6,0.933226388610387,0.924187725631769,5.563563405121915,7749.070191383362,1663.5115349946498,"[[ 59   0   0   0   0   0]
 [  0  74   5   0   1   0]
 [  0   4 141   1   0   0]
 [  0   0   6  89   6   0]
 [  0   0   0   4  68   2]
 [  0   0   1   0  12  81]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,7,0.9200080192461909,0.9294755877034359,5.591590473667974,9161.462044715881,1247.6853737337087,"[[ 56   0   2   1   0   0]
 [  0  75   5   0   0   0]
 [  0   0 144   1   1   0]
 [  0   1   7  86   7   0]
 [  0   0   0   5  68   0]
 [  0   0   0   3   6  85]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,8,0.9210262577670876,0.9003623188405797,5.405190789614983,7928.368639945984,1247.7866816199405,"[[ 56   3   0   0   0   0]
 [  2  73   3   2   0   0]
 [  0   2 138   5   0   0]
 [  0   0  13  82   6   0]
 [  0   0   1  10  57   5]
 [  0   0   0   1   2  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,10,4,9,0.934068136272545,0.911070780399274,5.479101788940959,9635.891389846802,998.1199368502829,"[[ 57   1   1   0   0   0]
 [  1  75   3   1   0   0]
 [  1   3 135   5   1   0]
 [  0   0   7  91   1   1]
 [  0   0   1   6  55  11]
 [  0   0   0   4   1  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
KNN,20,0,0,1.0,0.9676258992805755,5.814080516600393,68.16020011901855,115.99845457957308,"[[ 57   1   0   1   0   0]
 [  0  80   0   1   0   0]
 [  0   0 140   6   0   0]
 [  0   1   2  97   0   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,1,1.0,0.9586330935251799,5.765673806190843,58.76567363739014,216.84700883718773,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   1]
 [  0   0 143   3   0   0]
 [  0   0   3  95   1   2]
 [  0   0   0   1  69   4]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,2,1.0,0.9657657657657658,5.805841367503734,59.465813636779785,207.87038162246537,"[[ 58   0   1   0   0   0]
 [  1  75   3   1   0   0]
 [  0   0 142   4   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,3,1.0,0.954954954954955,5.748221859609806,63.16173076629639,199.5572325581415,"[[ 58   0   1   0   0   0]
 [  1  76   2   1   0   0]
 [  2   2 138   2   2   0]
 [  0   0   7  90   3   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,4,1.0,0.954954954954955,5.724449832266298,54.36842441558838,207.86624929804233,"[[ 58   0   1   0   0   0]
 [  3  76   1   0   0   0]
 [  0   3 138   4   1   0]
 [  0   2   0  96   2   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,5,1.0,0.9512635379061372,5.718903919956766,57.46724605560303,199.57630737606186,"[[ 59   0   0   0   0   0]
 [  1  73   6   0   0   0]
 [  0   0 140   6   0   0]
 [  0   1   0  97   2   1]
 [  0   0   1   1  67   5]
 [  0   0   0   2   1  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,6,1.0,0.9711191335740073,5.825211713037379,62.96408176422119,199.58963785460745,"[[ 58   0   1   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,7,1.0,0.9638336347197106,5.800504876939142,62.16440200805664,199.63156472068135,"[[ 59   0   0   0   0   0]
 [  0  75   4   1   0   0]
 [  0   2 141   3   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   2  70   1]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,8,1.0,0.9746376811594203,5.855295998079463,60.36484241485596,208.14441680967423,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 141   3   1   0]
 [  0   1   3  97   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,0,9,1.0,0.9528130671506352,5.718884529189842,58.76615047454834,199.72113822511125,"[[ 56   1   2   0   0   0]
 [  0  78   2   0   0   0]
 [  1   1 138   4   1   0]
 [  0   0   2  95   3   0]
 [  0   0   0   1  69   3]
 [  0   0   0   1   4  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,0,1.0,0.9586330935251799,5.761682764563559,56.06706142425537,216.8605034391995,"[[ 58   0   1   0   0   0]
 [  1  76   4   0   0   0]
 [  0   1 140   5   0   0]
 [  0   0   1  97   3   0]
 [  0   0   1   2  71   0]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,1,1.0,0.9640287769784173,5.791495915487977,70.25823593139648,184.75885584335597,"[[ 58   0   1   0   0   0]
 [  2  75   4   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,2,1.0,0.9531531531531532,5.743117512444594,58.565425872802734,199.43923919170203,"[[ 58   0   1   0   0   0]
 [  1  78   0   1   0   0]
 [  2   1 133  10   0   0]
 [  0   0   2  96   2   1]
 [  0   0   0   2  72   0]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,3,1.0,0.9495495495495495,5.7063142953768,65.96171855926514,184.75510409945122,"[[ 58   0   1   0   0   0]
 [  0  77   2   0   0   1]
 [  0   0 143   1   2   0]
 [  0   0   6  94   0   1]
 [  0   0   1   1  68   4]
 [  0   0   0   1   7  87]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,4,1.0,0.9621621621621622,5.77190332594345,53.867149353027344,216.90625576254723,"[[ 57   0   1   1   0   0]
 [  1  76   1   2   0   0]
 [  0   1 142   3   0   0]
 [  0   0   2  97   1   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,5,1.0,0.9638989169675091,5.782855451549443,63.2620096206665,199.5820202202482,"[[ 58   1   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   1   3  93   2   2]
 [  0   0   0   0  71   3]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,6,1.0,0.9638989169675091,5.800232448014345,54.46634292602539,207.90173985814528,"[[ 58   1   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   0  70   4]
 [  0   0   0   1   0  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,7,1.0,0.9656419529837251,5.803772855143088,62.36565113067627,216.99326188198668,"[[ 58   0   1   0   0   0]
 [  1  74   5   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   0  72   1]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,8,1.0,0.967391304347826,5.827535083915401,61.16647720336914,192.0076953551473,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 138   6   0   0]
 [  0   0   3  95   1   2]
 [  0   0   0   1  70   2]
 [  0   0   0   0   0  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,1,9,1.0,0.9673321234119783,5.808948960328566,58.96568298339844,208.1592202487112,"[[ 58   0   1   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 139   3   3   0]
 [  0   1   0  95   3   1]
 [  0   0   0   0  70   3]
 [  0   0   0   1   0  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,0,1.0,0.9568345323741008,5.7421428690921426,44.67189311981201,332.5001262440627,"[[ 58   0   0   1   0   0]
 [  1  76   3   1   0   0]
 [  0   0 142   3   1   0]
 [  0   0   2  95   4   0]
 [  0   0   0   1  70   3]
 [  0   0   0   1   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,1,1.0,0.9748201438848921,5.8648159901076315,40.975403785705566,131.2686725940283,"[[ 59   0   0   0   0   0]
 [  1  77   1   1   0   1]
 [  0   1 142   3   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,2,1.0,0.9711711711711711,5.84148016466501,59.267544746398926,207.8538533104887,"[[ 58   0   1   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 140   6   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   2  71   1]
 [  0   0   0   1   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,3,1.0,0.9621621621621622,5.771795351914312,58.06617736816406,207.86624929804233,"[[ 55   1   3   0   0   0]
 [  2  77   1   0   0   0]
 [  0   0 141   4   1   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,4,1.0,0.9621621621621622,5.785263291627184,55.36820888519287,207.86624929804233,"[[ 58   0   1   0   0   0]
 [  0  78   2   0   0   0]
 [  1   0 139   6   0   0]
 [  0   0   2  96   2   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,5,1.0,0.9620938628158845,5.782469352011108,57.666563987731934,207.91000583591398,"[[ 58   0   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   2 143   0   1   0]
 [  0   0   5  94   1   1]
 [  0   0   1   2  69   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,6,1.0,0.9512635379061372,5.736807865030851,52.3700475692749,216.9452585368618,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   1 134  10   1   0]
 [  0   0   2  96   2   1]
 [  0   0   0   0  73   1]
 [  0   0   0   1   4  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,7,1.0,0.9547920433996383,5.732666982991584,60.764312744140625,207.9516962321113,"[[ 58   1   0   0   0   0]
 [  1  75   4   0   0   0]
 [  0   2 142   2   0   0]
 [  0   1   2  92   3   3]
 [  0   0   0   0  70   3]
 [  0   0   0   2   1  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,8,1.0,0.967391304347826,5.818613672840322,56.5690279006958,207.99338662830857,"[[ 59   0   0   0   0   0]
 [  0  76   2   2   0   0]
 [  0   2 138   4   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,2,9,1.0,0.9437386569872959,5.663566484290366,58.26671123504639,184.9098575752238,"[[ 58   0   1   0   0   0]
 [  2  75   3   0   0   0]
 [  1   2 138   4   0   0]
 [  0   2   3  93   0   2]
 [  0   0   0   3  65   5]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,0,1.0,0.9640287769784173,5.7933564502862485,61.162781715393066,184.73436976926692,"[[ 56   1   2   0   0   0]
 [  1  76   3   0   0   1]
 [  0   2 141   3   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,1,1.0,0.960431654676259,5.778702269838219,60.76478958129883,207.8286908118712,"[[ 58   0   0   1   0   0]
 [  0  77   3   1   0   0]
 [  1   1 140   3   1   0]
 [  0   0   5  93   2   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,2,1.0,0.9531531531531532,5.734287879580038,57.96499252319336,199.55151998743327,"[[ 58   0   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 140   3   2   0]
 [  0   0   4  93   3   1]
 [  0   0   1   0  70   3]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,3,1.0,0.9711711711711711,5.83548261651051,53.76791954040527,199.56294545592712,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   3 140   3   0   0]
 [  0   0   1  97   2   1]
 [  0   0   0   2  69   3]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,4,1.0,0.9585585585585585,5.750130896429463,43.674516677856445,262.5455061001181,"[[ 57   1   1   0   0   0]
 [  2  75   3   0   0   0]
 [  1   0 140   5   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   2   3  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,5,1.0,0.9638989169675091,5.781605961646538,54.66866493225098,216.94750865622626,"[[ 58   0   1   0   0   0]
 [  0  76   2   2   0   0]
 [  0   2 142   1   1   0]
 [  0   0   1  99   1   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,6,1.0,0.9711191335740073,5.839297136984878,56.969356536865234,226.81624427508854,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 141   5   0   0]
 [  0   0   3  96   1   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,7,1.0,0.9620253164556962,5.772256846360319,64.56196308135986,207.959964524838,"[[ 59   0   0   0   0   0]
 [  2  77   1   0   0   0]
 [  0   0 142   3   1   0]
 [  0   1   2  93   3   2]
 [  0   0   0   0  71   2]
 [  0   0   0   0   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,8,1.0,0.9565217391304348,5.740551125666611,54.962897300720215,207.97891579743845,"[[ 57   0   2   0   0   0]
 [  3  75   2   0   0   0]
 [  1   0 139   5   0   0]
 [  0   0   1  98   0   2]
 [  0   0   0   2  68   3]
 [  0   0   0   2   1  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,3,9,1.0,0.969147005444646,5.823829632570511,59.86342430114746,208.03300922527703,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   0 142   2   1   0]
 [  0   1   3  95   1   0]
 [  0   0   0   1  70   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,0,1.0,0.9532374100719424,5.735165857547127,57.26644992828369,191.81150981776676,"[[ 58   0   1   0   0   0]
 [  1  77   3   0   0   0]
 [  0   3 137   5   1   0]
 [  0   0   3  94   3   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,1,1.0,0.9568345323741008,5.749816786780136,60.465049743652344,207.9506438757165,"[[ 57   0   2   0   0   0]
 [  3  76   2   0   0   0]
 [  1   0 140   4   1   0]
 [  0   0   6  95   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,2,1.0,0.9801801801801802,5.882503256091208,65.06178379058838,191.86230830737227,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   2  70   2]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,3,1.0,0.9603603603603603,5.781739484645874,54.067063331604004,216.92200507318103,"[[ 58   0   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 137   9   0   0]
 [  0   1   0  97   2   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,4,1.0,0.9621621621621622,5.778703988108106,55.765533447265625,226.76830378166432,"[[ 58   1   0   0   0   0]
 [  1  77   1   1   0   0]
 [  0   0 140   5   1   0]
 [  0   0   2  98   0   1]
 [  0   0   0   2  69   3]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,5,1.0,0.9494584837545126,5.704382293139968,58.66570472717285,216.95200903498528,"[[ 57   1   0   1   0   0]
 [  1  75   4   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   6  90   5   0]
 [  0   0   0   0  72   2]
 [  0   0   0   2   4  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,6,1.0,0.9620938628158845,5.770380218759607,56.36801719665527,207.91827247100383,"[[ 59   0   0   0   0   0]
 [  2  75   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  99   0   1]
 [  0   0   1   0  65   8]
 [  0   0   0   1   1  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,7,1.0,0.9602169981916817,5.765373048751853,42.97301769256592,356.4754613386637,"[[ 57   1   1   0   0   0]
 [  1  76   2   0   0   1]
 [  0   2 141   3   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,8,1.0,0.9601449275362319,5.774251688129165,44.67208385467529,207.99131924346835,"[[ 58   0   1   0   0   0]
 [  0  78   0   2   0   0]
 [  0   1 138   5   1   0]
 [  0   0   3  93   5   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,20,4,9,1.0,0.969147005444646,5.816770485787868,59.065961837768555,208.05368906754038,"[[ 59   0   0   0   0   0]
 [  1  76   2   1   0   0]
 [  1   0 141   3   0   0]
 [  0   3   0  94   0   3]
 [  0   0   0   1  72   0]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
SVM,20,0,0,0.995987963891675,0.9892086330935251,5.942786760235267,2855.916714668274,356.2610615022531,"[[ 59   0   0   0   0   0]
 [  0  78   3   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,1,0.9957873620862587,0.987410071942446,5.929305964800612,2886.849480867386,356.27927339579554,"[[ 59   0   0   0   0   0]
 [  0  78   3   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,2,0.9997994384275972,0.9873873873873874,5.930121877798866,2895.594322681427,356.75195739514965,"[[ 58   0   1   0   0   0]
 [  0  80   0   0   0   0]
 [  0   2 143   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   1   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,3,0.99558764540714,0.9819819819819819,5.8891616421980935,2723.7930178642273,356.3446716053876,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   2  71   1]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,4,1.0,0.9837837837837838,5.906279196307702,2245.2162206172943,453.5611985359943,"[[ 59   0   0   0   0   0]
 [  0  78   1   0   0   1]
 [  0   0 145   1   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,5,0.9963906156005614,0.9747292418772563,5.864398770796393,2538.4983897209167,383.840313546263,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   1 142   3   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,6,0.9997994786444756,0.9765342960288809,5.8757999398848915,2880.2533388137817,415.8613472952354,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,7,1.0,0.9891500904159132,5.934815840690549,2845.473057031631,415.89512464725686,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 146   0   0   0]
 [  0   2   0  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,8,0.9953898576869112,0.9945652173913043,5.969184774622372,2742.481780052185,356.5590787483511,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   1   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,0,9,0.995190380761523,0.985480943738657,5.917473967482276,2851.095050573349,356.6244710759305,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 143   0   0   0]
 [  0   1   1  98   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,0,0.9961885656970912,0.9856115107913669,5.9109731942501025,2908.087134361267,383.70750102568525,"[[ 59   0   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,1,1.0,0.9802158273381295,5.8816765142822165,2670.847660303116,226.72773982638105,"[[ 59   0   0   0   0   0]
 [  1  79   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   2   2  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,2,0.9991977537103891,0.972972972972973,5.852848495413667,2802.4975776672363,415.7448956752463,"[[ 59   0   0   0   0   0]
 [  0  76   3   0   0   1]
 [  0   1 140   5   0   0]
 [  0   1   1  98   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,3,0.9957882069795427,0.9855855855855856,5.915585703513536,2732.787358760834,383.72813707390094,"[[ 57   0   2   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,4,1.0,0.9837837837837838,5.907844492180554,2810.7178688049316,415.7448956752463,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   2   2  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,5,0.9997994786444756,0.9945848375451264,5.966525505663296,2751.076978445053,415.77868423026354,"[[ 58   0   1   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,6,1.0,0.9855595667870036,5.914389383759248,2726.3912737369537,415.8117455124038,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,7,0.9949879711307137,0.9855334538878843,5.9199418390472225,2638.9907836914062,383.9384182780578,"[[ 58   1   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,8,0.9997995590298657,0.9873188405797102,5.925177561059248,2876.855099201203,416.0198543560525,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   0 144   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   3  70   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,1,9,0.9953907815631262,0.9818511796733213,5.890432592687181,2865.536642074585,356.6183945629374,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 144   0   0   0]
 [  0   0   0  97   1   2]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,0,0.9997993981945837,0.9820143884892086,5.8878204026064145,2776.962089538574,415.65325006971005,"[[ 58   1   0   0   0   0]
 [  1  78   1   0   0   1]
 [  0   1 143   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,1,1.0,0.9910071942446043,5.950873898109051,2879.7538578510284,415.6367247441943,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,2,0.9961893301243482,0.9747747747747748,5.866597254789209,2671.0226833820343,383.798560120212,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   3  97   0   1]
 [  0   0   0   1  72   1]
 [  0   0   1   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,3,0.99558764540714,0.990990990990991,5.943593355886018,3000.4093408584595,356.35681592409185,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,4,0.9993983152827918,0.9891891891891892,5.937353221973152,2692.0609056949615,415.7035748952713,"[[ 59   0   0   0   0   0]
 [  0  78   0   2   0   0]
 [  0   0 146   0   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,5,1.0,0.983754512635379,5.912143159796028,2686.788719892502,415.8117455124038,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 143   3   0   0]
 [  0   1   1  98   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,6,0.9997994786444756,0.9909747292418772,5.94515028281777,2728.890055418015,415.8448120527996,"[[ 58   0   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,7,0.9957898957497995,0.9855334538878843,5.915091249641121,3008.829736709595,356.445094055695,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 144   2   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,8,0.9961916215674483,0.9836956521739131,5.911339820515051,2829.13236618042,356.5590787483511,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   1 144   0   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  73   0]
 [  0   0   0   1   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,2,9,1.0,0.985480943738657,5.908518346181831,2477.008593082428,416.0949693490014,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  1   0 142   2   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,0,0.9995987963891675,0.9838129496402878,5.912136499159348,2688.7128353118896,453.4210621321149,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   0  99   0   2]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,1,1.0,0.9820143884892086,5.895002353024183,2520.7840144634247,453.49973838190834,"[[ 59   0   0   0   0   0]
 [  1  79   1   0   0   0]
 [  0   3 142   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,2,0.9997994384275972,0.9855855855855856,5.920547777107365,2998.485642671585,415.73663086210115,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,3,0.9953870838347373,0.9891891891891892,5.936246697034431,2745.705062150955,383.798560120212,"[[ 58   0   0   1   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,4,0.9993983152827918,0.9891891891891892,5.941183412415484,2930.299562215805,415.72010222157525,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 145   0   0   0]
 [  0   1   2  98   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,5,0.9997994786444756,0.98014440433213,5.8931683103078205,2632.2199404239655,415.82001165449225,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   3 141   2   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,6,0.9997994786444756,0.9819494584837545,5.891539564242075,2716.0223841667175,453.62265069283615,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,7,0.9957898957497995,0.9855334538878843,5.916576210322392,2780.0361812114716,383.9102367261173,"[[ 58   1   0   0   0   0]
 [  0  76   3   0   0   1]
 [  0   0 146   0   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   1   0   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,8,0.9957907396271798,0.9873188405797102,5.9316256733480905,2563.733834028244,383.4454052333012,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,3,9,0.9995991983967936,0.985480943738657,5.907998502383787,2918.5563802719116,416.0701540316656,"[[ 59   0   0   0   0   0]
 [  1  78   0   1   0   0]
 [  0   0 144   1   0   0]
 [  0   0   0  98   1   1]
 [  0   0   0   1  72   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,0,0.9957873620862587,0.9838129496402878,5.904819722928712,3094.680577516556,383.7356697632554,"[[ 58   1   0   0   0   0]
 [  0  78   2   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,1,0.995987963891675,0.9928057553956835,5.956869367251752,2741.956967115402,356.346066271928,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   1]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,2,0.9997994384275972,0.9855855855855856,5.922072852593431,2865.711545944214,415.761426287399,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 144   2   0   0]
 [  0   1   1  98   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,3,0.99558764540714,0.9765765765765766,5.85622510708655,2665.6008780002594,383.75630319094245,"[[ 59   0   0   0   0   0]
 [  2  74   4   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0  99   1   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   4  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,4,0.9997994384275972,0.9747747747747748,5.8445284347958,2804.1967391967773,415.7035748952713,"[[ 59   0   0   0   0   0]
 [  2  78   0   0   0   0]
 [  0   2 143   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   2  67   5]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,5,0.995588530178464,0.9855595667870036,5.915658168967603,2760.121655464172,383.38301740119823,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 100   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,6,0.9995989572889513,0.9891696750902527,5.934885934303784,2613.305622339249,453.67184414386765,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,7,1.0,0.9909584086799277,5.94102236956894,2913.8588786125183,416.524415669606,"[[ 58   1   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  73   0]
 [  0   0   1   0   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,8,1.0,0.9873188405797102,5.929091570726624,3000.7842004299164,383.980157339795,"[[ 58   0   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 144   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,20,4,9,0.9997995991983968,0.9927404718693285,5.9605428386049155,2778.6362111568455,453.87584755050216,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 144   1   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
RF,20,0,0,0.9997993981945837,0.9640287769784173,5.794531866569419,902.0842552185059,415.6367247441943,"[[ 56   1   2   0   0   0]
 [  1  79   1   0   0   0]
 [  0   1 142   1   2   0]
 [  0   1   7  93   0   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,1,1.0,0.9640287769784173,5.790380046149775,974.142599105835,415.65325006971005,"[[ 59   0   0   0   0   0]
 [  1  77   3   0   0   0]
 [  0   2 139   4   1   0]
 [  0   1   0  98   2   0]
 [  0   0   0   1  71   2]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,2,0.9997994384275972,0.9495495495495495,5.710644400436805,874.7997999191284,415.7283663775507,"[[ 58   0   1   0   0   0]
 [  1  75   4   0   0   0]
 [  0   1 142   2   1   0]
 [  0   0   7  92   1   1]
 [  0   0   0   3  67   4]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,3,0.9997994384275972,0.9603603603603603,5.78556281605533,917.1746492385864,415.7283663775507,"[[ 58   0   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   3 139   4   0   0]
 [  0   1   5  93   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,4,0.9997994384275972,0.954954954954955,5.728482124747221,889.3914461135864,383.7633453662858,"[[ 56   3   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   2 139   5   0   0]
 [  0   1   2  97   1   0]
 [  0   0   1   1  70   2]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,5,1.0,0.9819494584837545,5.899730812774735,918.6744451522827,311.8727586022143,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   0   1   0]
 [  0   0   4  97   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,6,1.0,0.9602888086642599,5.764552193902579,873.2007265090942,383.8191835585472,"[[ 58   0   1   0   0   0]
 [  0  79   0   1   0   0]
 [  0   0 142   3   1   0]
 [  0   0   3  96   2   0]
 [  0   0   0   3  68   3]
 [  0   0   0   1   4  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,7,1.0,0.9638336347197106,5.779838341248824,923.2715845108032,356.4876097006966,"[[ 57   2   0   0   0   0]
 [  1  75   4   0   0   0]
 [  0   1 141   4   0   0]
 [  0   1   0  98   2   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,8,1.0,0.9510869565217391,5.715888188238992,873.5010147094727,383.95902042954106,"[[ 58   0   0   1   0   0]
 [  0  76   4   0   0   0]
 [  0   3 139   3   0   0]
 [  0   3   3  95   0   0]
 [  0   0   0   5  66   2]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,0,9,0.9997995991983968,0.969147005444646,5.822522979716074,903.9823770523071,384.0148427285113,"[[ 58   0   1   0   0   0]
 [  1  75   4   0   0   0]
 [  0   1 141   3   0   0]
 [  0   0   2  97   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,0,0.9993981945837512,0.9658273381294964,5.795567885942586,882.9944849014282,332.51598979970305,"[[ 58   0   1   0   0   0]
 [  1  76   4   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   3  69   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,1,0.9997993981945837,0.9730215827338129,5.855719773825594,873.7017154693604,332.5054139277595,"[[ 59   0   0   0   0   0]
 [  0  78   3   0   0   0]
 [  0   0 141   5   0   0]
 [  1   0   3  97   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  95]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,2,1.0,0.9585585585585585,5.7539809084715445,881.7967414855957,332.58269310758664,"[[ 58   0   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   3 140   2   1   0]
 [  0   2   1  97   1   0]
 [  0   0   0   2  68   4]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,3,1.0,0.9603603603603603,5.7544104624006716,885.7939004898071,311.7590897837267,"[[ 56   3   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   1 141   3   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   1  70   3]
 [  0   0   1   1   4  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,4,0.9997994384275972,0.9657657657657658,5.793443413429435,632.4386358261108,311.78232937297486,"[[ 58   1   0   0   0   0]
 [  0  77   2   1   0   0]
 [  1   0 143   2   0   0]
 [  0   1   2  96   2   0]
 [  0   0   1   2  70   1]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,5,1.0,0.9657039711191335,5.7883056104552475,883.3953857421875,293.48534532655685,"[[ 55   3   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  93   6   1]
 [  0   0   0   0  73   1]
 [  0   0   0   1   0  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,6,0.9997994786444756,0.9530685920577617,5.72639759776809,887.2924327850342,311.8727586022143,"[[ 56   1   1   1   0   0]
 [  0  77   3   0   0   0]
 [  0   3 141   2   0   0]
 [  0   3   4  94   0   0]
 [  0   0   1   1  67   5]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,7,0.9995990376904571,0.9566003616636528,5.75742310264383,879.896068572998,311.9166930164407,"[[ 57   1   1   0   0   0]
 [  1  79   0   0   0   0]
 [  0   2 135   7   2   0]
 [  0   1   4  94   2   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,8,1.0,0.9402173913043478,5.670859709962564,1028.613305091858,217.03451387325305,"[[ 58   0   1   0   0   0]
 [  0  74   4   2   0   0]
 [  0   2 134   9   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   4  67   2]
 [  0   0   0   1   5  88]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,1,9,0.9995991983967936,0.9637023593466425,5.789758608458438,934.8669052124023,312.04175985405755,"[[ 58   1   0   0   0   0]
 [  1  76   2   1   0   0]
 [  1   3 138   2   1   0]
 [  0   0   4  95   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,0,1.0,0.9532374100719424,5.716141542569618,1040.105128288269,277.11502085907006,"[[ 55   1   3   0   0   0]
 [  0  79   2   0   0   0]
 [  0   1 143   1   1   0]
 [  1   0   5  94   1   0]
 [  0   0   0   2  68   4]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,1,1.0,0.9622302158273381,5.771144136277438,873.6005544662476,226.75478742678425,"[[ 58   1   0   0   0   0]
 [  1  74   4   2   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  96   3   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,2,0.9997994384275972,0.9693693693693693,5.831047305104493,1194.516396522522,262.56858064834466,"[[ 58   0   1   0   0   0]
 [  0  76   2   2   0   0]
 [  0   2 141   3   0   0]
 [  0   2   3  96   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,3,1.0,0.9675675675675676,5.810841744154687,1097.871971130371,207.89517901969347,"[[ 58   0   1   0   0   0]
 [  1  77   2   0   0   0]
 [  0   3 139   2   2   0]
 [  0   0   1  98   2   0]
 [  0   0   0   0  72   2]
 [  0   0   0   1   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,4,0.9997994384275972,0.9621621621621622,5.76505628690955,1122.6580381393433,216.91975503163818,"[[ 57   1   0   1   0   0]
 [  2  76   2   0   0   0]
 [  0   0 143   3   0   0]
 [  0   2   2  96   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   5  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,5,1.0,0.9638989169675091,5.803056285643165,1278.0690908432007,249.49299896173036,"[[ 58   0   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 139   6   0   0]
 [  0   1   3  95   1   1]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,6,1.0,0.944043321299639,5.663074719774753,1079.881739616394,207.89140831017284,"[[ 57   2   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   2  95   3   1]
 [  0   0   0   4  67   3]
 [  0   0   0   0   6  88]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,7,1.0,0.9638336347197106,5.788884174878977,1261.4781856536865,226.8715662254753,"[[ 58   0   1   0   0   0]
 [  1  78   0   1   0   0]
 [  0   2 141   3   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   3  69   1]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,8,1.0,0.9637681159420289,5.794029807873121,1197.915244102478,249.59007925849716,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   5 138   2   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   3  69   1]
 [  0   0   0   2   1  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,2,9,0.9997995991983968,0.9655172413793104,5.79804492153549,1095.274257659912,217.0825195677916,"[[ 57   1   1   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 139   4   1   0]
 [  0   1   1  95   3   0]
 [  0   0   0   2  70   1]
 [  0   0   0   1   1  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,0,0.9995987963891675,0.9730215827338129,5.84030713351666,1144.8456048965454,226.70315669745023,"[[ 57   0   2   0   0   0]
 [  0  78   3   0   0   0]
 [  0   0 144   0   2   0]
 [  0   1   2  98   0   0]
 [  0   0   0   3  70   1]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,1,1.0,0.9676258992805755,5.822527278540662,1071.4866638183594,191.8343878890882,"[[ 59   0   0   0   0   0]
 [  1  79   1   0   0   0]
 [  0   0 139   7   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   0  95]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,2,0.9997994384275972,0.9657657657657658,5.798247935356381,1074.6852159500122,199.55342414132915,"[[ 58   1   0   0   0   0]
 [  3  74   3   0   0   0]
 [  0   4 139   2   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  74   0]
 [  0   0   1   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,3,0.9997994384275972,0.9495495495495495,5.705547085610655,1279.1682243347168,226.76830378166432,"[[ 54   2   3   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 137   6   2   0]
 [  0   1   2  95   3   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,4,1.0,0.9693693693693693,5.8205176067791164,1104.9674034118652,207.84972164317662,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   1  70   3]
 [  0   0   0   2   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,5,0.9997994786444756,0.9657039711191335,5.807813777904838,1114.0628099441528,207.9224060350687,"[[ 57   0   1   1   0   0]
 [  1  75   3   0   0   1]
 [  0   1 140   5   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,6,1.0,0.9458483754512635,5.689429955235605,1105.4684162139893,199.59916071532822,"[[ 57   2   0   0   0   0]
 [  2  76   2   0   0   0]
 [  0   6 139   0   1   0]
 [  0   1   9  89   2   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,7,0.9997995188452286,0.9511754068716094,5.699274006418359,1119.3602323532104,184.85371012860094,"[[ 55   1   3   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 141   3   0   0]
 [  0   0   1  96   4   0]
 [  0   0   0   1  65   7]
 [  0   0   0   1   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,8,1.0,0.9565217391304348,5.756440793246236,1270.2731609344482,192.0112190786809,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   2 137   6   0   0]
 [  0   5   1  94   1   0]
 [  0   0   0   2  69   2]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,3,9,0.9997995991983968,0.9546279491833031,5.744604045427485,1098.071265220642,199.72113822511125,"[[ 59   0   0   0   0   0]
 [  1  75   3   1   0   0]
 [  0   1 140   4   0   0]
 [  0   1   6  91   1   1]
 [  0   0   0   2  69   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,0,1.0,0.9748201438848921,5.851910147850389,1096.372365951538,191.85375052022633,"[[ 58   1   0   0   0   0]
 [  1  76   4   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  97   2   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,1,1.0,0.960431654676259,5.764663543940054,960.2494955062866,199.51530520113334,"[[ 58   1   0   0   0   0]
 [  2  77   1   1   0   0]
 [  0   0 142   3   1   0]
 [  0   0   4  95   2   0]
 [  0   0   0   2  71   1]
 [  0   0   1   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,2,0.9997994384275972,0.9675675675675676,5.804139115347118,894.1880702972412,191.87463064440712,"[[ 57   1   0   1   0   0]
 [  0  80   0   0   0   0]
 [  1   0 142   3   0   0]
 [  0   0   2  97   1   1]
 [  0   0   0   1  72   1]
 [  0   0   0   1   5  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,3,0.9997994384275972,0.963963963963964,5.808365352613864,919.1747426986694,191.8816726905273,"[[ 58   1   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 138   6   1   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   1   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,4,1.0,0.9567567567567568,5.741644660523522,879.5972347259521,191.98031563906636,"[[ 57   2   0   0   0   0]
 [  0  73   6   0   0   1]
 [  0   2 141   3   0   0]
 [  0   0   0  99   2   0]
 [  0   0   1   2  71   0]
 [  0   0   0   0   5  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,5,0.9997994786444756,0.9638989169675091,5.790552826697411,913.8771295547485,191.91311332203335,"[[ 56   2   1   0   0   0]
 [  0  75   4   0   0   1]
 [  0   1 143   2   0   0]
 [  0   1   4  95   1   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,6,1.0,0.9620938628158845,5.784365143586702,892.6896810531616,191.9183958674273,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   0 144   2   0   0]
 [  0   0   5  94   1   1]
 [  0   0   0   4  68   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,7,1.0,0.9602169981916817,5.769869142288082,910.180401802063,178.23924918214308,"[[ 57   0   2   0   0   0]
 [  1  77   2   0   0   0]
 [  0   2 142   2   0   0]
 [  0   2   5  93   1   0]
 [  0   0   0   1  70   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,8,1.0,0.9710144927536232,5.835034641285437,899.6844053268433,178.39657156834147,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   2 140   2   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   2  69   2]
 [  0   0   0   2   1  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,20,4,9,1.0,0.9455535390199638,5.6907753928886,880.2966356277466,192.03208513803614,"[[ 57   0   2   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 136   8   0   0]
 [  0   3   3  90   3   1]
 [  0   0   0   2  66   5]
 [  0   0   0   1   0  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
NN,20,0,0,0.9554663991975928,0.9442446043165468,5.664945698704163,9034.834957122803,623.5046650380161,"[[ 55   3   1   0   0   0]
 [  0  77   2   2   0   0]
 [  0   3 140   3   0   0]
 [  0   0   2  95   3   1]
 [  0   0   0   1  72   1]
 [  0   0   0   1   8  86]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,1,0.98716148445336,0.9910071942446043,5.951688986190185,9089.902973175049,554.2373873472594,"[[ 59   0   0   0   0   0]
 [  0  81   0   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1  98   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,2,0.9775371038908945,0.9495495495495495,5.709020705436835,9573.826718330383,554.3044884879951,"[[ 57   1   0   1   0   0]
 [  2  76   2   0   0   0]
 [  0   2 143   1   0   0]
 [  0   0  11  89   1   0]
 [  0   0   0   1  68   5]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,3,0.9897713598074609,0.972972972972973,5.835651840748766,8338.632869720459,498.8621393074502,"[[ 57   1   1   0   0   0]
 [  1  77   2   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  98   0   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,4,0.9863618130766145,0.9747747747747748,5.842401704158648,9047.427201271057,623.6483386927573,"[[ 58   1   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 145   1   0   0]
 [  0   1   0  98   2   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   4  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,5,0.9903749749348305,0.9873646209386282,5.9274252576101505,11169.214940071106,554.5185452579248,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,6,0.9901744535793062,0.9855595667870036,5.924807214142526,9178.452467918396,499.128881712041,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   0 146   0   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,7,0.9837610264635124,0.969258589511754,5.81369539144987,9138.075947761536,623.8612896789425,"[[ 59   0   0   0   0   0]
 [  0  77   0   1   0   2]
 [  0   1 144   1   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   0  64   9]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,8,0.9837642814191221,0.9619565217391305,5.784738239656145,9298.884105682373,623.9119429137161,"[[ 58   0   0   1   0   0]
 [  0  74   5   1   0   0]
 [  0   1 140   4   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   4  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,0,9,0.9841683366733467,0.9709618874773139,5.840276845630094,8733.806920051575,624.1114345424866,"[[ 58   0   1   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 141   4   0   0]
 [  0   0   2  98   0   0]
 [  0   0   0   2  71   0]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,0,0.9781344032096289,0.9748201438848921,5.862635916902176,8522.427749633789,623.4303010729662,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   2 144   0   0   0]
 [  0   0   6  93   2   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,1,0.9757271815446339,0.9550359712230215,5.75658846595515,9357.650184631348,623.5418536736454,"[[ 58   0   1   0   0   0]
 [  1  71   9   0   0   0]
 [  0   0 144   2   0   0]
 [  0   1   7  92   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,2,0.98676293622142,0.9765765765765766,5.853545942227864,10982.521343231201,623.6111448153983,"[[ 59   0   0   0   0   0]
 [  1  76   2   0   0   1]
 [  0   3 143   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,3,0.9901724829522663,0.9675675675675676,5.808658831570074,10175.582528114319,498.9692627864853,"[[ 58   1   0   0   0   0]
 [  1  75   3   0   0   1]
 [  0   0 144   2   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,4,0.9905736060970718,0.9801801801801802,5.8854440112776905,8805.765342712402,623.5925495403287,"[[ 56   2   1   0   0   0]
 [  0  75   5   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,5,0.9755363946260277,0.9675090252707581,5.80457678007991,8700.126028060913,499.0336167459597,"[[ 57   0   0   2   0   0]
 [  1  77   1   0   0   1]
 [  0   2 143   1   0   0]
 [  0   1   3  94   2   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,6,0.9925807098455985,0.98014440433213,5.882469244629763,10185.67681312561,498.9264871173397,"[[ 59   0   0   0   0   0]
 [  1  76   2   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,7,0.9851643945469126,0.9656419529837251,5.80980598825263,8841.745162010193,623.8240853201984,"[[ 58   1   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   3 136   7   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   1  71   1]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,8,0.9895770695530166,0.9764492753623188,5.871287804860319,9995.185589790344,623.9863621107145,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   4 139   2   0   0]
 [  0   0   2  98   0   1]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,1,9,0.9877755511022044,0.9764065335753176,5.864216011808506,8355.523467063904,624.2975975356154,"[[ 57   0   1   1   0   0]
 [  0  79   0   1   0   0]
 [  0   2 141   2   0   0]
 [  0   0   2  98   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   1   2  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,0,0.9885656970912738,0.9694244604316546,5.8364701048866845,9733.634805679321,623.4488904012006,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   0 140   6   0   0]
 [  0   0   2  97   2   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,1,0.9757271815446339,0.9676258992805755,5.79892369021061,10584.348511695862,623.5046650380161,"[[ 55   4   0   0   0   0]
 [  0  75   6   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,2,0.9929803449659045,0.9837837837837838,5.902375776141235,10111.61916255951,623.6111448153983,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0  99   2   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,3,0.9775371038908945,0.9567567567567568,5.7463099289501045,9036.832976341248,498.8621393074502,"[[ 57   1   0   1   0   0]
 [  0  79   1   0   0   0]
 [  0   2 142   2   0   0]
 [  0   1   5  92   2   1]
 [  0   0   0   0  66   8]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,4,0.9819494584837545,0.9747747747747748,5.838166360912937,10129.562497138977,554.2897967525018,"[[ 56   1   1   1   0   0]
 [  1  77   0   2   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   2  69   3]
 [  0   0   0   1   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,5,0.9791457790254662,0.9512635379061372,5.72367271987129,9730.33754825592,453.62265069283615,"[[ 59   0   0   0   0   0]
 [  1  75   4   0   0   0]
 [  0   6 138   2   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   8  86]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,6,0.9733306597152597,0.9602888086642599,5.776319015345341,8890.117740631104,499.06933684641035,"[[ 57   1   1   0   0   0]
 [  1  78   0   0   0   1]
 [  0   6 137   3   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,7,0.9877706495589414,0.9710669077757685,5.832130562183299,9719.439768791199,623.8612896789425,"[[ 58   0   1   0   0   0]
 [  1  76   3   0   0   0]
 [  0   2 143   1   0   0]
 [  0   1   3  97   0   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,8,0.9867708959711365,0.9728260869565217,5.847994015923187,9065.217161178589,499.25757292262455,"[[ 59   0   0   0   0   0]
 [  0  74   3   3   0   0]
 [  0   0 144   1   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,2,9,0.975751503006012,0.9509981851179673,5.7304306152268145,8995.85747718811,624.2045021587204,"[[ 57   1   0   1   0   0]
 [  2  73   3   2   0   0]
 [  0   0 134  11   0   0]
 [  0   0   2  97   1   0]
 [  0   0   0   1  70   2]
 [  0   0   0   1   0  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,0,0.9769307923771314,0.9586330935251799,5.772828147539712,10154.994368553162,554.310854657345,"[[ 58   1   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   4 141   1   0   0]
 [  0   1   7  93   0   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,1,0.9899699097291875,0.987410071942446,5.917164847681552,9615.90268611908,623.318788379013,"[[ 58   0   0   1   0   0]
 [  1  78   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,2,0.9751303650220617,0.963963963963964,5.7869239456713,9869.960021972656,623.6111448153983,"[[ 59   0   0   0   0   0]
 [  0  74   5   1   0   0]
 [  0   3 142   1   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   4  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,3,0.9723225030084236,0.9531531531531532,5.740176137943299,9233.72151851654,554.2897967525018,"[[ 57   2   0   0   0   0]
 [  1  74   4   1   0   0]
 [  0   3 143   0   0   0]
 [  0   0  11  90   0   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,4,0.9853590052146008,0.9585585585585585,5.754226377223126,8683.435678482056,499.0168879905262,"[[ 56   1   2   0   0   0]
 [  0  77   0   1   0   2]
 [  0   4 138   4   0   0]
 [  0   0   1  97   3   0]
 [  0   0   0   2  69   3]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,5,0.9837577702025265,0.9711191335740073,5.844198891571892,10802.723670005798,712.9659160477744,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   2  70   2]
 [  0   0   0   1   0  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,6,0.9891718468016844,0.9747292418772563,5.847881767702244,8800.76813697815,499.08124468294005,"[[ 57   1   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0  98   1   2]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,7,0.9685244587008821,0.9493670886075949,5.693157439496321,9373.740863800049,623.8240853201984,"[[ 55   4   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   5 138   3   0   0]
 [  0   0   2  96   3   0]
 [  0   0   0   1  67   5]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,8,0.9775506113449589,0.967391304347826,5.8073267360387355,8960.477089881897,623.9863621107145,"[[ 57   0   2   0   0   0]
 [  1  76   1   2   0   0]
 [  0   0 141   4   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   1   5  88]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,3,9,0.9813627254509018,0.9727767695099818,5.845986561650052,8979.4668674469,554.7638815085522,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   0 141   4   0   0]
 [  0   0   1  96   2   1]
 [  0   0   0   2  71   0]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,0,0.9841524573721163,0.9622302158273381,5.78428634080494,10109.320759773254,498.7026054932092,"[[ 59   0   0   0   0   0]
 [  1  76   3   1   0   0]
 [  0   1 139   6   0   0]
 [  0   0   1  96   4   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,1,0.9691073219658977,0.9622302158273381,5.76532526236211,9495.871329307556,623.4860723836264,"[[ 52   3   4   0   0   0]
 [  0  78   1   2   0   0]
 [  0   1 142   3   0   0]
 [  0   1   1  98   1   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,2,0.9829522663457682,0.9801801801801802,5.889203310915283,9045.628023147583,623.536770368368,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 145   0   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   3  70   1]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,3,0.9831528279181708,0.9567567567567568,5.733161627184548,9562.732720375061,623.5553623169127,"[[ 57   1   1   0   0   0]
 [  0  79   0   0   0   1]
 [  1   1 143   1   0   0]
 [  0   0   4  96   0   1]
 [  0   0   0   0  66   8]
 [  0   0   0   0   5  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,4,0.98896911351785,0.9837837837837838,5.910900933378913,9605.70855140686,623.6111448153983,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  97   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,5,0.9863645478243432,0.98014440433213,5.887982972166394,10589.645338058472,623.6618278834841,"[[ 58   0   0   1   0   0]
 [  1  79   0   0   0   0]
 [  0   2 144   0   0   0]
 [  0   1   5  95   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,6,0.9847603769801484,0.9584837545126353,5.742378072928935,9431.806945800781,554.503845121527,"[[ 54   2   1   2   0   0]
 [  1  76   3   0   0   0]
 [  0   3 140   3   0   0]
 [  0   0   1  98   2   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,7,0.9837610264635124,0.9656419529837251,5.808227523529453,8931.693267822266,623.8426869448775,"[[ 58   1   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   1 140   5   0   0]
 [  0   0   2  98   0   1]
 [  0   0   0   1  71   1]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,8,0.9861695730607336,0.967391304347826,5.814367352885498,8780.779767036438,499.1265779483473,"[[ 58   1   0   0   0   0]
 [  0  74   5   1   0   0]
 [  0   1 140   4   0   0]
 [  0   0   0  95   5   1]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,20,4,9,0.9881763527054108,0.9782214156079855,5.878934455095391,10384.665489196777,623.9811864940324,"[[ 57   1   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   4  95   1   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
KNN,30,0,0,1.0,0.9622302158273381,5.790873920166667,83.05151462554932,121.65997776976582,"[[ 58   1   0   0   0   0]
 [  0  78   3   0   0   0]
 [  0   2 140   4   0   0]
 [  0   0   4  96   1   0]
 [  0   0   2   0  71   1]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,1,1.0,0.9694244604316546,5.827654797424198,76.85511112213135,131.25878374724226,"[[ 59   0   0   0   0   0]
 [  0  80   0   1   0   0]
 [  0   1 141   4   0   0]
 [  0   0   3  96   1   1]
 [  0   0   0   2  70   2]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,2,1.0,0.9585585585585585,5.7695223629345564,67.25800037384033,127.9179852920952,"[[ 58   1   0   0   0   0]
 [  0  74   5   0   0   1]
 [  0   1 139   6   0   0]
 [  0   0   2  96   1   2]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,3,1.0,0.9675675675675676,5.804442182528782,77.2559642791748,127.90781438090458,"[[ 59   0   0   0   0   0]
 [  1  75   3   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   2  96   3   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,4,1.0,0.9747747747747748,5.859435050889384,81.65276050567627,121.67801095880402,"[[ 59   0   0   0   0   0]
 [  0  75   4   0   1   0]
 [  0   0 142   4   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,5,1.0,0.9494584837545126,5.710037677882873,79.95400428771973,127.94911913740202,"[[ 57   0   2   0   0   0]
 [  0  77   3   0   0   0]
 [  0   2 139   3   2   0]
 [  0   1   4  93   2   1]
 [  0   0   0   0  70   4]
 [  0   0   0   0   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,6,1.0,0.9584837545126353,5.743618034214134,69.85881328582764,134.86134137610802,"[[ 58   1   0   0   0   0]
 [  4  74   2   0   0   0]
 [  0   1 141   4   0   0]
 [  0   1   2  97   0   1]
 [  0   0   0   3  69   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,7,1.0,0.9656419529837251,5.789843666204309,69.35856342315674,124.7663051798733,"[[ 59   0   0   0   0   0]
 [  0  76   2   2   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0  98   3   0]
 [  0   0   0   4  67   2]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,8,1.0,0.9528985507246377,5.721415091588855,69.0589427947998,131.36245742458348,"[[ 58   0   0   1   0   0]
 [  1  79   0   0   0   0]
 [  0   0 140   5   0   0]
 [  0   0   4  93   3   1]
 [  0   0   0   2  68   3]
 [  0   0   0   1   5  88]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,0,9,1.0,0.9727767695099818,5.8413220467352875,70.65751552581787,134.9433391539211,"[[ 58   0   1   0   0   0]
 [  0  76   4   0   0   0]
 [  0   1 144   0   0   0]
 [  0   0   2  95   2   1]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,0,1.0,0.9622302158273381,5.781653589476439,69.05949115753174,124.69944558111655,"[[ 59   0   0   0   0   0]
 [  0  78   1   2   0   0]
 [  0   0 142   4   0   0]
 [  0   0   3  94   3   1]
 [  0   0   0   1  70   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,1,1.0,0.9568345323741008,5.737278463149392,70.15933990478516,127.89076531282778,"[[ 58   0   0   1   0   0]
 [  1  78   2   0   0   0]
 [  0   2 140   4   0   0]
 [  0   1   1  98   1   0]
 [  0   0   0   1  67   6]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,2,1.0,0.9675675675675676,5.807496523015884,80.65376281738281,127.90937903119635,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   2 142   2   0   0]
 [  0   0   2  97   2   0]
 [  0   0   1   1  70   2]
 [  0   0   0   1   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,3,1.0,0.9603603603603603,5.781109577409718,72.45724201202393,127.86636509161424,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   5 136   5   0   0]
 [  0   0   2  95   2   2]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,4,1.0,0.9693693693693693,5.820984075813942,72.45888710021973,121.67942690605372,"[[ 58   0   1   0   0   0]
 [  1  77   2   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,5,1.0,0.9584837545126353,5.764596616401062,70.65932750701904,134.85873288997868,"[[ 59   0   0   0   0   0]
 [  1  76   2   1   0   0]
 [  0   0 139   7   0   0]
 [  0   0   2  95   3   1]
 [  0   0   0   2  70   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,6,1.0,0.9494584837545126,5.707227551125562,74.55487251281738,134.86047186951959,"[[ 58   0   1   0   0   0]
 [  1  72   6   0   0   1]
 [  0   1 143   2   0   0]
 [  0   1   5  93   2   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,7,1.0,0.9620253164556962,5.778467120313622,71.65825366973877,131.2833812426619,"[[ 59   0   0   0   0   0]
 [  3  73   4   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   2  96   1   2]
 [  0   0   0   1  69   3]
 [  0   0   0   0   0  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,8,1.0,0.9583333333333334,5.76033795817105,68.76003742218018,127.9965174296148,"[[ 59   0   0   0   0   0]
 [  1  75   2   1   1   0]
 [  0   1 137   5   2   0]
 [  0   0   1  97   2   1]
 [  0   0   1   1  69   2]
 [  0   0   0   1   1  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,1,9,1.0,0.9528130671506352,5.713992480620586,81.25250339508057,134.8807248740697,"[[ 57   1   1   0   0   0]
 [  0  75   5   0   0   0]
 [  0   2 140   3   0   0]
 [  0   0   1  98   1   0]
 [  0   0   0   1  65   7]
 [  0   0   0   0   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,0,1.0,0.9550359712230215,5.730517522461089,70.5561876296997,131.25878374724226,"[[ 57   0   0   2   0   0]
 [  1  75   5   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   2  96   2   1]
 [  0   0   1   1  69   3]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,1,1.0,0.9748201438848921,5.846620636510225,69.75598335266113,131.2563117683399,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1  96   3   1]
 [  0   0   1   2  67   4]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,2,1.0,0.9657657657657658,5.809509608717531,68.4605598449707,127.91876773687783,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 142   4   0   0]
 [  0   1   4  94   2   0]
 [  0   0   0   0  72   2]
 [  0   0   0   1   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,3,1.0,0.9585585585585585,5.751155003681509,71.85871601104736,127.91250844662156,"[[ 57   1   1   0   0   0]
 [  1  77   2   0   0   0]
 [  0   2 143   0   1   0]
 [  0   1   5  93   2   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,4,1.0,0.972972972972973,5.859387441521299,76.05724334716797,131.28593867519618,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   1 138   7   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,5,1.0,0.9422382671480144,5.657446598206698,72.25863933563232,131.31226958949125,"[[ 57   1   0   1   0   0]
 [  0  72   6   1   1   0]
 [  0   2 139   5   0   0]
 [  0   0   2  95   4   0]
 [  0   0   0   1  67   6]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,6,1.0,0.9657039711191335,5.7952508785750645,70.25830745697021,127.94520593735999,"[[ 58   0   1   0   0   0]
 [  1  74   4   1   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  97   2   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,7,1.0,0.9566003616636528,5.74526381742768,69.75936889648438,124.77523454548883,"[[ 59   0   0   0   0   0]
 [  3  74   2   0   0   1]
 [  0   1 142   2   1   0]
 [  0   0   6  93   1   1]
 [  0   0   0   0  70   3]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,8,1.0,0.9637681159420289,5.78828474625761,81.55331611633301,83.20231672227048,"[[ 58   0   1   0   0   0]
 [  2  76   1   1   0   0]
 [  0   2 137   6   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,2,9,1.0,0.9655172413793104,5.804458028193503,68.76037120819092,128.02295626739806,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   1 141   3   0   0]
 [  0   0   2  96   0   2]
 [  0   0   0   0  71   2]
 [  0   0   0   0   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,0,1.0,0.9532374100719424,5.716188406655752,79.35624122619629,127.8931121476807,"[[ 56   2   1   0   0   0]
 [  0  76   5   0   0   0]
 [  0   2 140   3   1   0]
 [  0   0   0  98   2   1]
 [  0   0   0   3  68   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,1,1.0,0.9694244604316546,5.827729638151593,70.65889835357666,134.80551791359613,"[[ 59   0   0   0   0   0]
 [  1  79   0   1   0   0]
 [  0   0 141   5   0   0]
 [  0   0   4  95   2   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,2,1.0,0.9477477477477477,5.680188004858926,70.15926837921143,113.3816929807339,"[[ 58   0   1   0   0   0]
 [  2  76   1   1   0   0]
 [  0   2 143   1   0   0]
 [  0   1   5  91   4   0]
 [  0   0   0   1  68   5]
 [  0   0   0   0   5  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,3,1.0,0.9855855855855856,5.920985126764668,48.76906871795654,216.90850552404987,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   0 143   3   0   0]
 [  0   1   1  97   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,4,1.0,0.9621621621621622,5.792649566905093,70.25775909423828,138.57795867350583,"[[ 58   0   1   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 139   6   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,5,1.0,0.9566787003610109,5.756820177410635,74.65648651123047,134.86047186951959,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   4  96   1   0]
 [  0   0   1   0  68   5]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,6,1.0,0.9693140794223827,5.822770165894025,76.55601501464844,127.94520593735999,"[[ 59   0   0   0   0   0]
 [  2  77   0   0   0   1]
 [  0   1 141   4   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   4  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,7,1.0,0.9566003616636528,5.736844894754636,70.9587574005127,124.77151382115909,"[[ 59   0   0   0   0   0]
 [  1  76   2   0   1   0]
 [  0   1 145   0   0   0]
 [  0   0   4  92   2   3]
 [  0   0   1   3  65   4]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,8,1.0,0.9492753623188406,5.703322491115993,67.86088943481445,134.9075982401676,"[[ 58   1   0   0   0   0]
 [  0  75   4   1   0   0]
 [  0   2 140   3   0   0]
 [  0   1   3  91   5   1]
 [  0   0   0   2  69   2]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,3,9,1.0,0.9655172413793104,5.8023736300469695,70.65873146057129,131.39043749222446,"[[ 58   0   0   1   0   0]
 [  0  76   4   0   0   0]
 [  0   2 139   4   0   0]
 [  0   1   0  97   0   2]
 [  0   0   0   0  71   2]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,0,1.0,0.9658273381294964,5.815173345745438,70.45824527740479,134.80812538723382,"[[ 59   0   0   0   0   0]
 [  0  77   3   1   0   0]
 [  0   2 139   5   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,1,1.0,0.9586330935251799,5.753745155798075,71.05751037597656,131.3189639457933,"[[ 59   0   0   0   0   0]
 [  1  78   1   1   0   0]
 [  0   3 139   3   1   0]
 [  0   0   1  97   1   2]
 [  0   0   0   3  68   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,2,1.0,0.9531531531531532,5.731774091625206,70.45998573303223,127.91642043124561,"[[ 58   1   0   0   0   0]
 [  1  74   4   0   0   1]
 [  0   0 140   6   0   0]
 [  0   0   3  94   2   2]
 [  0   0   0   0  73   1]
 [  0   0   0   0   5  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,3,1.0,0.9585585585585585,5.75735098762756,77.45532989501953,131.28429032762912,"[[ 57   0   2   0   0   0]
 [  3  72   4   1   0   0]
 [  0   1 141   4   0   0]
 [  0   0   3  96   1   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,4,1.0,0.9603603603603603,5.764740273866477,72.65768051147461,127.91955019123259,"[[ 59   0   0   0   0   0]
 [  2  77   1   0   0   0]
 [  0   2 138   5   1   0]
 [  0   0   1  95   5   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,5,1.0,0.9584837545126353,5.751601131817585,46.97237014770508,191.92015678051737,"[[ 58   0   1   0   0   0]
 [  1  78   1   0   0   0]
 [  0   2 140   4   0   0]
 [  0   2   1  93   4   1]
 [  0   0   0   1  69   4]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,6,1.0,0.9675090252707581,5.820153567394231,68.96007061004639,134.86047186951959,"[[ 59   0   0   0   0   0]
 [  1  74   5   0   0   0]
 [  0   0 140   6   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,7,1.0,0.9584086799276673,5.762726717623959,70.95935344696045,127.97399285211182,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   1 141   4   0   0]
 [  0   1   3  95   1   1]
 [  0   0   0   0  69   4]
 [  0   0   0   0   4  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,8,1.0,0.947463768115942,5.699019219843328,68.05996894836426,92.44170935891587,"[[ 58   0   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   2 139   4   0   0]
 [  0   0   6  93   2   0]
 [  0   0   0   1  67   5]
 [  0   0   0   1   4  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,30,4,9,1.0,0.9818511796733213,5.882373222564694,73.25899600982666,131.332724405597,"[[ 58   1   0   0   0   0]
 [  0  79   0   0   1   0]
 [  0   0 145   0   0   0]
 [  0   0   1  99   0   0]
 [  0   0   2   0  69   2]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
SVM,30,0,0,1.0,0.987410071942446,5.931817825267124,2137.8774404525752,293.4294015769797,"[[ 59   0   0   0   0   0]
 [  0  78   3   0   0   0]
 [  0   1 144   1   0   0]
 [  0   1   0  99   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,1,0.9981945837512538,0.987410071942446,5.921635706503795,2411.821103096008,293.45823013332324,"[[ 58   1   0   0   0   0]
 [  0  81   0   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,2,1.0,0.990990990990991,5.944511726450173,2308.205473423004,311.80557242719834,"[[ 59   0   0   0   0   0]
 [  0  79   0   0   0   1]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,3,0.9989971921379863,0.9783783783783784,5.881078015129779,2042.6073551177976,178.1708178338888,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   0 142   3   1   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,4,1.0,0.9873873873873874,5.92774645101574,2160.0898027420044,332.6144311258217,"[[ 59   0   0   0   0   0]
 [  1  77   1   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,5,0.9985963505113294,0.9891696750902527,5.940103118424685,2067.8675413131714,293.5182920557498,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,6,0.9985963505113294,0.9891696750902527,5.933483927856692,2401.601493358612,237.62020797031988,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,7,0.9979951884522855,0.9837251356238698,5.90385105708075,2249.3140280246735,277.2634164392106,"[[ 59   0   0   0   0   0]
 [  2  75   1   2   0   0]
 [  0   0 146   0   0   0]
 [  0   0   3  97   0   1]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,8,0.9983964722389257,0.9891304347826086,5.940264099008591,2257.459145784378,293.6401259404505,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 143   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,0,9,0.9983967935871744,0.9836660617059891,5.900599296934492,2312.627649307251,277.39296972653153,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 144   0   0   0]
 [  0   1   0  97   0   2]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,0,0.9977933801404213,0.987410071942446,5.925083524561284,2213.5838210582733,262.5225116316015,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,1,0.9981945837512538,0.9856115107913669,5.918209177575018,2334.9146842956543,277.05259764188736,"[[ 59   0   0   0   0   0]
 [  0  80   0   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   3  97   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,2,0.9981949458483754,0.9873873873873874,5.929423127725523,2239.519768953324,277.15224425940335,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,3,0.9983955074207782,0.9873873873873874,5.930182445042809,2285.8676493167877,276.88437213307026,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,4,0.9981949458483754,0.9945945945945946,5.965987453867994,2310.953444242477,277.1779578634234,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,5,1.0,0.9729241877256317,5.832814043543031,1922.9504287242892,332.65468672537327,"[[ 58   0   0   0   1   0]
 [  1  78   1   0   0   0]
 [  0   0 143   2   1   0]
 [  0   1   1  98   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   4  90]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,6,0.9987968718668538,0.9855595667870036,5.918037567096768,2398.5535085201263,249.50192696312413,"[[ 57   1   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,7,1.0,0.9873417721518988,5.918281179810781,2147.7467954158783,332.75314285312186,"[[ 58   1   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 145   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,8,1.0,0.9855072463768116,5.913550669026896,2009.3259751796722,333.1695934307097,"[[ 59   0   0   0   0   0]
 [  2  76   2   0   0   0]
 [  0   1 142   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,1,9,0.9987975951903808,0.9872958257713249,5.928573307631687,2256.2349677085876,277.385616991194,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   0 144   1   0   0]
 [  0   0   1  98   1   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,0,0.9983951855566701,0.9856115107913669,5.918360266283337,2265.729409456253,184.7376342041452,"[[ 59   0   0   0   0   0]
 [  1  77   1   1   0   1]
 [  0   0 144   2   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,1,0.9985957873620862,0.987410071942446,5.927301573869915,2311.2284123897557,277.1076754912028,"[[ 58   1   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,2,1.0,0.990990990990991,5.94141040905354,2202.9652178287506,311.82881894717207,"[[ 58   1   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 100   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,3,1.0,0.9801801801801802,5.88807085277962,2009.5508694648743,311.80557242719834,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,4,0.9983955074207782,0.9801801801801802,5.891018273508475,2218.5564637184143,216.89500765502936,"[[ 59   0   0   0   0   0]
 [  0  73   6   0   0   1]
 [  0   0 145   0   1   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,5,0.9985963505113294,0.983754512635379,5.907167013342012,2028.1400263309476,237.61750859957468,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,6,1.0,0.9891696750902527,5.935044054505602,2291.4896070957184,332.6493964154702,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,7,0.998195669607057,0.9963833634719711,5.97708792722683,2362.524062395096,277.28179017954693,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,8,0.99859691320906,0.9855072463768116,5.9154354957103665,2194.7700202465057,277.3226778190554,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   4  90]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,2,9,0.9981963927855712,0.985480943738657,5.91898690217613,2099.1494834423065,293.6866197820556,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 142   2   0   0]
 [  0   1   0  99   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,0,1.0,0.9802158273381295,5.88298194428302,2279.2467892169952,293.4005786841613,"[[ 59   0   0   0   0   0]
 [  1  77   3   0   0   0]
 [  1   1 143   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,1,0.9981945837512538,0.9928057553956835,5.95920879833282,2570.805072784424,277.1333859825255,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,2,1.0,0.9927927927927928,5.959209865529511,2251.43786072731,311.8009235391184,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,3,1.0,0.9855855855855856,5.918581937454341,2201.3409674167638,311.80557242719834,"[[ 58   0   0   0   1   0]
 [  0  78   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  98   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,4,1.0,0.9891891891891892,5.9449844308354,2064.6446645259857,311.80557242719834,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,5,1.0,0.9873646209386282,5.927860692466292,2298.2111036777496,311.87740870000437,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 145   0   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   2   0  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,6,0.9981953078002808,0.9855595667870036,5.913338836476906,2366.422075033188,277.21885209119927,"[[ 59   0   0   0   0   0]
 [  0  77   1   0   0   2]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,7,0.9985966319165999,0.9837251356238698,5.908722892877575,2143.3242976665497,276.99543686316775,"[[ 59   0   0   0   0   0]
 [  0  74   4   2   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,8,1.0,0.9909420289855072,5.940354636196946,2145.5231606960297,277.33370427340265,"[[ 58   1   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 144   0   1   0]
 [  0   0   0 100   0   1]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,3,9,1.0,0.9891107078039928,5.9363461990124655,2079.8603773117065,332.8653873213395,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   1 144   0   0   0]
 [  0   2   1  97   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,0,0.9987963891675025,0.9820143884892086,5.89532476103319,2305.681490898133,262.7204302179817,"[[ 58   1   0   0   0   0]
 [  1  76   4   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,1,1.0,0.9856115107913669,5.923538512699534,2481.056594848633,332.5424324231446,"[[ 59   0   0   0   0   0]
 [  1  77   3   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,2,0.9981949458483754,0.9891891891891892,5.940533994858716,2151.9696474075313,277.15591733930853,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 144   1   1   0]
 [  0   0   0  99   1   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,3,0.9985960689931809,0.9891891891891892,5.939993745071204,2065.2939200401306,293.4635534053089,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,4,1.0,0.9873873873873874,5.9357911209246295,2224.103170633316,311.8009235391184,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   2 143   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,5,1.0,0.9909747292418772,5.949468433547251,2259.7831726074223,311.5290357400377,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,6,1.0,0.983754512635379,5.910272984672151,2380.4388523101807,311.86345882262003,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   1 144   1   0   0]
 [  0   0   1  98   0   2]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,7,1.0,0.9819168173598554,5.89283810396128,2174.181824922561,332.721391094077,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   1 145   0   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,8,1.0,0.9855072463768116,5.900751859644965,2193.345922231674,332.7933880626636,"[[ 59   0   0   0   0   0]
 [  2  77   1   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,30,4,9,0.9983967935871744,0.9872958257713249,5.921204741612673,2378.3402264118195,277.37826464563767,"[[ 58   1   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   2 143   0   0   0]
 [  0   2   0  98   0   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
RF,30,0,0,1.0,0.9730215827338129,5.844799332066621,1069.689965248108,155.86919413268205,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   1 143   2   0   0]
 [  0   2   3  96   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,1,0.9997993981945837,0.9730215827338129,5.842920825803455,1051.29873752594,184.73436976926692,"[[ 58   1   0   0   0   0]
 [  0  78   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   1   1  97   1   1]
 [  0   0   0   1  72   1]
 [  0   0   0   1   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,2,0.9997994384275972,0.9747747747747748,5.861824576734663,1162.6347541809082,178.16929988458205,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 141   4   0   0]
 [  0   2   2  95   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,3,0.9997994384275972,0.9603603603603603,5.771389018894256,1066.1900043487549,166.30457052328006,"[[ 56   0   3   0   0   0]
 [  0  78   2   0   0   0]
 [  0   3 140   2   1   0]
 [  0   0   3  97   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   1   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,4,0.9995988768551946,0.9747747747747748,5.859258934490087,1131.7532539367676,172.02128585993773,"[[ 58   0   0   1   0   0]
 [  1  77   2   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,5,1.0,0.9512635379061372,5.709941074524474,1317.5467014312744,166.3207306386012,"[[ 58   1   0   0   0   0]
 [  3  72   5   0   0   0]
 [  0   3 139   4   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,6,1.0,0.9657039711191335,5.81777586469168,1168.6309099197388,172.061447985706,"[[ 58   0   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 141   5   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   3  71   0]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,7,0.9997995188452286,0.969258589511754,5.827488295776704,1140.5480861663818,172.08745651812666,"[[ 58   0   1   0   0   0]
 [  0  78   1   1   0   0]
 [  0   2 141   3   0   0]
 [  0   1   3  96   1   0]
 [  0   0   0   2  71   0]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,8,1.0,0.9547101449275363,5.733858308698518,1050.5993366241455,172.137531920156,"[[ 56   0   3   0   0   0]
 [  1  75   3   1   0   0]
 [  0   1 140   3   1   0]
 [  0   0   3  95   2   1]
 [  0   0   0   1  70   2]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,0,9,1.0,0.9673321234119783,5.799785891713627,1217.3037767410278,172.16353776715826,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 141   3   1   0]
 [  1   0   1  97   1   0]
 [  0   0   0   1  66   6]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,0,1.0,0.9694244604316546,5.8172753083645246,1049.5006799697876,166.26328317776202,"[[ 56   3   0   0   0   0]
 [  0  75   6   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,1,1.0,0.9640287769784173,5.794712797455053,1119.559359550476,166.25931694194975,"[[ 59   0   0   0   0   0]
 [  0  77   3   1   0   0]
 [  1   1 139   3   2   0]
 [  0   0   0  98   0   3]
 [  0   0   0   2  69   3]
 [  0   0   0   1   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,2,0.9997994384275972,0.9765765765765766,5.868929048402332,1090.378475189209,160.93082473374176,"[[ 58   0   1   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 142   3   0   0]
 [  0   1   2  97   1   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,3,1.0,0.963963963963964,5.805475945362668,1055.0973176956177,155.90162398778972,"[[ 58   0   1   0   0   0]
 [  0  75   5   0   0   0]
 [  0   0 141   5   0   0]
 [  1   0   4  94   2   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,4,0.9997994384275972,0.954954954954955,5.725883981904074,1148.7436771392822,155.90162398778972,"[[ 59   0   0   0   0   0]
 [  1  74   4   1   0   0]
 [  0   0 142   3   1   0]
 [  0   2   1  97   1   0]
 [  0   0   0   2  67   5]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,5,1.0,0.9747292418772563,5.862066966112554,1094.2747116088867,160.96186261889093,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   1 141   4   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,6,1.0,0.9711191335740073,5.834280715018949,1142.8467512130737,155.9340543264199,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,7,1.0,0.969258589511754,5.819202925563436,1056.1964511871338,160.90127553412907,"[[ 58   0   1   0   0   0]
 [  1  78   1   0   0   0]
 [  0   2 144   0   0   0]
 [  0   0   4  94   3   0]
 [  0   0   0   0  72   1]
 [  0   0   0   1   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,8,1.0,0.9655797101449275,5.7907846154835605,1095.2733516693115,155.99426469968924,"[[ 58   1   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   0 141   4   0   0]
 [  0   1   1  97   2   0]
 [  0   0   0   3  68   2]
 [  0   0   0   0   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,1,9,1.0,0.9673321234119783,5.808924300123128,1055.19700050354,151.30288630269425,"[[ 57   0   1   1   0   0]
 [  0  78   2   0   0   0]
 [  0   3 140   2   0   0]
 [  0   0   2  95   3   0]
 [  0   0   0   1  70   2]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,0,1.0,0.9622302158273381,5.773273795453686,1114.562726020813,151.1501875180079,"[[ 57   0   2   0   0   0]
 [  1  76   3   1   0   0]
 [  0   1 143   2   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   5  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,1,0.9995987963891675,0.9532374100719424,5.722070480052807,1228.497314453125,151.1469095542354,"[[ 56   1   2   0   0   0]
 [  2  75   3   1   0   0]
 [  0   2 139   5   0   0]
 [  0   0   2  95   3   1]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,2,1.0,0.963963963963964,5.773203098205367,784.4515323638916,146.73074719091085,"[[ 56   1   2   0   0   0]
 [  2  77   0   1   0   0]
 [  1   0 140   3   2   0]
 [  0   1   1  97   2   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,3,1.0,0.9765765765765766,5.860870713591498,1246.7864513397217,151.1761370549968,"[[ 59   0   0   0   0   0]
 [  1  77   1   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,4,1.0,0.9783783783783784,5.8832895130910545,1073.587679862976,138.57612213355313,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   2  72   0]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,5,0.9997994786444756,0.9747292418772563,5.867911807072593,1121.657633781433,142.56111207787504,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 141   4   1   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   2   0  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,6,0.9997994786444756,0.9765342960288809,5.85067908631756,1491.9469833374023,142.49313010431248,"[[ 57   2   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 144   0   0   0]
 [  1   0   1  99   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,7,1.0,0.9656419529837251,5.8039330339765405,1074.4863748550415,142.59067046115737,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 139   4   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   1   2  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,8,0.9997995590298657,0.9583333333333334,5.7570409229714405,1202.4119138717651,142.69219728600999,"[[ 56   1   1   1   0   0]
 [  0  77   3   0   0   0]
 [  0   1 139   5   0   0]
 [  0   2   2  95   2   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,2,9,1.0,0.9618874773139746,5.77474798199375,1049.0999698638916,142.65464989538674,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   2 142   1   0   0]
 [  0   1   2  96   1   0]
 [  0   0   0   4  65   4]
 [  0   0   0   1   1  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,0,1.0,0.9676258992805755,5.808673349456948,1119.2592859268188,138.48684545148097,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   1]
 [  0   2 143   1   0   0]
 [  0   2   3  94   2   0]
 [  0   0   0   1  70   3]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,1,1.0,0.9640287769784173,5.789059789621125,1193.4176921844482,134.81073296174347,"[[ 58   0   1   0   0   0]
 [  0  78   3   0   0   0]
 [  0   0 144   1   1   0]
 [  0   0   4  96   1   0]
 [  0   0   0   4  68   2]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,2,1.0,0.9585585585585585,5.750493980330106,1061.3938570022583,134.83082153545027,"[[ 57   0   1   1   0   0]
 [  0  78   2   0   0   0]
 [  0   2 143   0   1   0]
 [  0   0   4  96   0   1]
 [  0   0   0   2  67   5]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,3,1.0,0.9693693693693693,5.820350791070278,1251.2844324111938,134.8986605049101,"[[ 58   0   1   0   0   0]
 [  0  77   1   2   0   0]
 [  0   2 143   1   0   0]
 [  0   0   2  95   3   1]
 [  0   0   0   0  72   2]
 [  0   0   0   1   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,4,1.0,0.9603603603603603,5.7781797535961825,1064.4908905029297,134.83516814057126,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   3 138   5   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,5,1.0,0.9675090252707581,5.807059762824581,1167.1322107315063,134.86047186951959,"[[ 58   1   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   3 141   2   0   0]
 [  0   2   2  95   2   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,6,1.0,0.9638989169675091,5.7845140745373795,1043.2035446166992,134.8005029801805,"[[ 57   2   0   0   0   0]
 [  2  74   4   0   0   0]
 [  0   1 141   4   0   0]
 [  0   1   2  97   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,7,1.0,0.9511754068716094,5.715531509879397,1071.1869955062866,134.87968765027577,"[[ 58   1   0   0   0   0]
 [  0  76   4   0   0   0]
 [  1   1 138   4   2   0]
 [  0   1   3  94   3   0]
 [  0   0   0   2  68   3]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,8,1.0,0.9782608695652174,5.881943074879544,1062.1923446655273,127.99182002240605,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   0 142   3   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,3,9,1.0,0.9764065335753176,5.866807321669878,1123.7571716308594,138.75809301168832,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 139   5   0   0]
 [  0   0   0  99   1   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,0,1.0,0.9532374100719424,5.743568038847877,1255.5817365646362,131.2563117683399,"[[ 59   0   0   0   0   0]
 [  0  78   2   1   0   0]
 [  0   2 139   5   0   0]
 [  0   1   7  91   2   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,1,0.9997993981945837,0.9694244604316546,5.828570874933321,1076.2850046157837,127.8931121476807,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   1 141   3   1   0]
 [  0   0   2  96   3   0]
 [  0   0   0   0  72   2]
 [  0   0   0   2   1  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,2,0.9995988768551946,0.9693693693693693,5.816034227590882,1095.6745386123657,199.5610411203216,"[[ 57   1   1   0   0   0]
 [  1  74   4   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   2  98   0   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,3,0.9997994384275972,0.972972972972973,5.855164455547818,807.1364879608154,127.92033265515965,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,4,1.0,0.9693693693693693,5.805757011140769,1128.7527322769165,124.71999751593464,"[[ 58   1   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   0 144   2   0   0]
 [  0   2   0  99   0   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   7  88]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,5,1.0,0.9711191335740073,5.833234976140906,1059.694242477417,124.74426760343744,"[[ 58   1   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 141   3   1   0]
 [  1   0   2  97   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,6,0.9997994786444756,0.9530685920577617,5.734778339369777,1286.1641645431519,124.7450115547465,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   4 139   3   0   0]
 [  0   1   5  93   2   0]
 [  0   0   0   1  69   4]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,7,1.0,0.9656419529837251,5.791509087517813,1304.9530744552612,124.77672289735521,"[[ 54   1   3   1   0   0]
 [  1  75   4   0   0   0]
 [  0   0 141   4   1   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  70   2]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,8,1.0,0.9764492753623188,5.869235493506138,1070.8874702453613,124.79727243462987,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 140   4   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   2  70   1]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,30,4,9,0.9997995991983968,0.9673321234119783,5.8036827965137245,1115.2624607086182,128.01982395825385,"[[ 59   0   0   0   0   0]
 [  2  76   1   1   0   0]
 [  0   1 141   3   0   0]
 [  0   1   1  95   3   0]
 [  0   0   0   1  72   0]
 [  0   0   0   1   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
NN,30,0,0,0.99679037111334,0.9730215827338129,5.843000440899017,8701.425552368164,415.62846257418056,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   1]
 [  0   1 142   3   0   0]
 [  0   0   1  97   1   2]
 [  0   0   0   0  70   4]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,1,0.9885656970912738,0.9748201438848921,5.858738350299967,8111.162543296814,453.4407286352092,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,2,0.9775371038908945,0.9747747747747748,5.86947886695234,9412.918257713318,383.77743049237176,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   5  96   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,3,0.9915764139590855,0.972972972972973,5.844927142994609,7789.746570587158,415.7283663775507,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   0 145   1   0   0]
 [  0   1   4  95   1   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,4,0.98676293622142,0.9693693693693693,5.810179299375659,8064.189147949218,356.3507436612711,"[[ 59   0   0   0   0   0]
 [  2  73   3   2   0   0]
 [  0   3 143   0   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,5,0.9899739322237818,0.9873646209386282,5.929990771154455,7515.702986717224,453.6128132828203,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   4 141   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,6,0.9883697613795869,0.9765342960288809,5.872191813469636,8817.959237098694,453.5439633577853,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   2 142   2   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,7,0.9947874899759422,0.9837251356238698,5.899995094621563,8782.978582382202,453.71361172164967,"[[ 58   0   0   0   1   0]
 [  0  78   0   1   0   1]
 [  0   0 144   2   0   0]
 [  0   0   0  99   1   1]
 [  0   0   0   1  71   1]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,8,0.9859691320905993,0.9818840579710145,5.89977817941389,7403.66792678833,416.09430610965944,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   0 143   2   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,0,9,0.9897795591182365,0.9872958257713249,5.928631744139771,8342.131352424622,453.8955337792766,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   2  98   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,0,0.9919759277833501,0.9748201438848921,5.859600296762934,8363.01875114441,498.97633672785105,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   1]
 [  0   1 145   0   0   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   1   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,1,0.9751253761283851,0.9640287769784173,5.7855082668719096,9865.459871292114,356.24892127422913,"[[ 58   1   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   0 141   5   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  66   8]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,2,0.983754512635379,0.972972972972973,5.838017529103679,7780.751466751099,453.5316896640227,"[[ 58   1   0   0   0   0]
 [  0  74   6   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   2  72   0]
 [  0   0   0   1   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,3,0.9919775371038909,0.9837837837837838,5.907024924246849,9665.773582458496,453.5316896640227,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   4 141   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,4,0.9897713598074609,0.9693693693693693,5.822549167218075,8117.559313774109,415.73663086210115,"[[ 58   1   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   2 144   0   0   0]
 [  0   0   4  96   0   1]
 [  0   0   0   2  71   1]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,5,0.9857629837577702,0.9783393501805054,5.879981238875454,8398.998308181763,383.85440149728396,"[[ 59   0   0   0   0   0]
 [  0  75   4   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,6,0.9773410868257469,0.9638989169675091,5.79575609144587,9285.291385650635,415.853079509648,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   0 143   3   0   0]
 [  0   0   4  95   1   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   4  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,7,0.9771451483560545,0.9602169981916817,5.758769215165434,8551.21238231659,453.71361172164967,"[[ 58   1   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   1 141   3   1   0]
 [  0   1   1  95   4   0]
 [  0   0   0   0  66   7]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,8,0.9885748647023451,0.9855072463768116,5.9163602283300065,8219.401264190674,332.7616349883006,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 142   2   0   0]
 [  0   1   0  99   0   1]
 [  0   0   0   1  71   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,1,9,0.9889779559118237,0.9745916515426497,5.854695006341149,7965.3462171554565,416.0949693490014,"[[ 58   0   0   0   1   0]
 [  0  75   3   1   0   1]
 [  0   1 141   3   0   0]
 [  0   0   1  97   2   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,0,0.9849548645937813,0.9802158273381295,5.883011198427958,8408.092665672302,498.79778228703395,"[[ 59   0   0   0   0   0]
 [  1  77   3   0   0   0]
 [  0   0 145   0   1   0]
 [  0   1   2  98   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,1,0.9893681043129389,0.9748201438848921,5.860979389115248,7660.7203006744385,383.67229591879703,"[[ 59   0   0   0   0   0]
 [  0  75   5   1   0   0]
 [  1   0 144   1   0   0]
 [  0   1   2  96   0   2]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,2,0.9931809065383073,0.9819819819819819,5.901451457221738,7972.342228889465,415.6870488830325,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,3,0.992579221821099,0.9855855855855856,5.918423917010245,7512.805104255676,383.72813707390094,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,4,0.9865623746490172,0.963963963963964,5.780522222252807,8609.678053855896,453.462850559392,"[[ 54   4   1   0   0   0]
 [  0  75   3   1   0   1]
 [  0   0 141   5   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,5,0.9919791457790255,0.9783393501805054,5.879465803276233,7443.345022201538,498.98599789849715,"[[ 59   0   0   0   0   0]
 [  0  75   3   2   0   0]
 [  0   1 144   1   0   0]
 [  0   0   2  98   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,6,0.9857629837577702,0.9783393501805054,5.873290234428775,8199.911999702454,499.15270363695026,"[[ 58   0   0   0   1   0]
 [  0  73   6   0   0   1]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,7,0.9853648757016841,0.9783001808318263,5.873216542652327,8359.321427345276,415.9116605752364,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   4 141   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  69   4]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,8,0.9913810382842253,0.9764492753623188,5.86063376111177,8026.311135292053,453.7848904668247,"[[ 57   2   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   2  97   1   1]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,2,9,0.9839679358717435,0.9745916515426497,5.864627692545196,7851.311659812927,416.05361213109916,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   6 135   4   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,0,0.9885656970912738,0.9802158273381295,5.8853932317464865,9568.331003189087,498.73829253412543,"[[ 59   0   0   0   0   0]
 [  0  81   0   0   0   0]
 [  0   3 142   1   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,1,0.9813440320962888,0.9748201438848921,5.863553352853579,7829.823398590088,498.90489961362573,"[[ 59   0   0   0   0   0]
 [  0  74   6   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,2,0.9887685519454472,0.9747747747747748,5.859191461408274,8881.02285861969,415.72010222157525,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   3 142   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,3,0.9849578820697954,0.9711711711711711,5.834392067075523,7590.360355377197,498.92164667209113,"[[ 58   1   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   5 141   0   0   0]
 [  0   2   2  95   1   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,4,0.9863618130766145,0.9765765765765766,5.853479633932346,7961.648392677307,498.85023953789585,"[[ 59   0   0   0   0   0]
 [  2  74   1   2   0   1]
 [  0   1 143   1   1   0]
 [  0   0   0 100   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,5,0.986765590535392,0.9747292418772563,5.846078583775736,8020.415091514587,499.00980618620133,"[[ 57   1   0   0   1   0]
 [  1  78   1   0   0   0]
 [  0   3 140   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   4  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,6,0.9915781030679768,0.9855595667870036,5.9098945741085425,7420.357918739319,498.95028972633105,"[[ 58   1   0   0   0   0]
 [  1  78   0   1   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,7,0.9865677626303128,0.9746835443037974,5.861496473011811,9509.563827514648,453.58573302613655,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   2 141   3   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,8,0.9887753056724795,0.9836956521739131,5.911866716545711,9386.334347724915,453.7848904668247,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   3 141   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,3,9,0.995190380761523,0.9764065335753176,5.874754439603957,7940.4603481292725,384.08531451202066,"[[ 59   0   0   0   0   0]
 [  0  74   4   0   0   2]
 [  0   0 143   2   0   0]
 [  0   0   3  96   0   1]
 [  0   0   0   1  72   0]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,0,0.9939819458375125,0.987410071942446,5.928839212128553,8586.690902709961,415.60367803488106,"[[ 59   0   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,1,0.9917753259779338,0.9802158273381295,5.874459222428097,8251.48286819458,453.46039684439154,"[[ 59   0   0   0   0   0]
 [  4  75   2   0   0   0]
 [  0   0 145   0   1   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,2,0.9879663056558363,0.9855855855855856,5.914333706072681,7700.1972913742065,415.6705241847022,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,3,0.9789410348977136,0.9585585585585585,5.7575864061128765,8568.301105499268,453.51201921579235,"[[ 59   0   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   2 140   4   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   5  65   4]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,4,0.99117529081428,0.9837837837837838,5.917437942460207,7835.619926452637,453.5611985359943,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,5,0.9947864447563666,0.9747292418772563,5.862566935559835,8356.72197341919,415.8448120527996,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   2 141   3   0   0]
 [  0   1   4  96   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,6,0.9915781030679768,0.9855595667870036,5.922905120299649,7811.134505271912,453.67184414386765,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 144   0   0   0]
 [  0   0   2  97   1   1]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,7,0.9777465918203689,0.9566003616636528,5.7432156378167525,9036.233949661255,453.6840948539947,"[[ 57   2   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   4  92   3   2]
 [  0   0   0   1  71   1]
 [  0   0   0   1   4  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,8,0.991180597314091,0.9782608695652174,5.871970260793151,7979.43811416626,453.90300978495463,"[[ 58   1   0   0   0   0]
 [  0  77   2   0   0   1]
 [  0   1 143   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   1  69   3]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,30,4,9,0.9841683366733467,0.9727767695099818,5.834820985739321,8248.984432220459,384.0218887431294,"[[ 57   1   0   0   1   0]
 [  0  75   4   0   0   1]
 [  0   0 144   1   0   0]
 [  0   1   2  97   0   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
KNN,40,0,0,1.0,0.9676258992805755,5.806709813232335,107.33821392059326,95.92027415300412,"[[ 57   2   0   0   0   0]
 [  0  80   1   0   0   0]
 [  0   1 143   2   0   0]
 [  0   1   2  95   3   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   6  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,1,1.0,0.9640287769784173,5.785181844154045,86.35008335113525,90.71844358081682,"[[ 59   0   0   0   0   0]
 [  0  77   2   2   0   0]
 [  0   1 141   2   2   0]
 [  0   0   1  99   1   0]
 [  0   0   0   2  68   4]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,2,1.0,0.963963963963964,5.790940463582243,87.74945735931396,90.70633793940513,"[[ 57   0   2   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,3,1.0,0.9657657657657658,5.802331443437563,75.25608539581299,94.09922401528658,"[[ 58   0   0   1   0   0]
 [  1  74   4   1   0   0]
 [  0   1 140   5   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,4,1.0,0.963963963963964,5.789805706846887,87.04850673675537,94.12887197128889,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 142   3   0   0]
 [  0   0   3  94   4   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,5,1.0,0.9783393501805054,5.871824610739929,92.24703311920166,94.14817436841494,"[[ 59   0   0   0   0   0]
 [  1  74   5   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0  98   2   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,6,1.0,0.9638989169675091,5.8038698359282455,89.94834423065186,86.03249323461682,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 140   5   1   0]
 [  0   0   3  95   2   1]
 [  0   0   0   0  73   1]
 [  0   0   0   1   3  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,7,1.0,0.9746835443037974,5.847264662608207,82.55250453948975,95.97888011853286,"[[ 59   0   0   0   0   0]
 [  1  76   1   1   0   1]
 [  0   0 143   2   1   0]
 [  0   1   1  96   3   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   0  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,8,1.0,0.9492753623188406,5.696414229107383,86.0506534576416,92.44170935891587,"[[ 58   0   1   0   0   0]
 [  0  76   3   1   0   0]
 [  0   2 138   4   1   0]
 [  0   0   1  96   4   0]
 [  0   0   0   2  64   7]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,0,9,1.0,0.9727767695099818,5.854170911817888,88.7486457824707,96.0151616170018,"[[ 59   0   0   0   0   0]
 [  0  74   6   0   0   0]
 [  0   1 142   2   0   0]
 [  0   0   3  97   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,0,1.0,0.9514388489208633,5.71891543105736,82.65154361724854,94.11126412598189,"[[ 59   0   0   0   0   0]
 [  0  76   4   1   0   0]
 [  0   2 141   2   1   0]
 [  0   0   4  92   5   0]
 [  0   0   0   0  68   6]
 [  0   0   0   1   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,1,1.0,0.960431654676259,5.7646918434073315,78.15344333648682,90.65747503444761,"[[ 57   1   1   0   0   0]
 [  0  78   3   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   2  96   3   0]
 [  0   0   0   0  70   4]
 [  0   0   0   1   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,2,1.0,0.9747747747747748,5.849808850624883,81.75265789031982,90.70555109417434,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0  98   3   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,3,1.0,0.9585585585585585,5.766866536495909,89.14854526519775,94.13056670449924,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   2 140   3   1   0]
 [  0   1   3  91   6   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,4,1.0,0.9531531531531532,5.714662840931757,92.44749546051025,92.38653017561474,"[[ 58   0   0   1   0   0]
 [  1  73   6   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   0  99   2   0]
 [  0   0   0   2  66   6]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,5,1.0,0.9765342960288809,5.879315078253907,93.94562244415283,94.14732684711967,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 139   5   2   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,6,1.0,0.9819494584837545,5.890444822057311,83.05177688598633,99.76245324790415,"[[ 58   0   1   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 100   1   0]
 [  0   0   1   1  70   2]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,7,1.0,0.9819168173598554,5.897994140964361,77.8541088104248,95.98020108635632,"[[ 59   0   0   0   0   0]
 [  0  75   4   0   1   0]
 [  0   0 145   1   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,8,1.0,0.9583333333333334,5.75878515610392,77.75547504425049,94.1910192952117,"[[ 59   0   0   0   0   0]
 [  1  73   4   2   0   0]
 [  0   2 139   3   1   0]
 [  0   1   2  96   1   1]
 [  0   0   0   0  71   2]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,1,9,1.0,0.9709618874773139,5.832271454930645,83.45165252685547,96.0160425708656,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 141   4   0   0]
 [  0   0   2  96   2   0]
 [  0   0   0   0  69   4]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,0,1.0,0.9640287769784173,5.7966526094326385,90.84675312042236,94.11168773002983,"[[ 58   0   1   0   0   0]
 [  0  76   4   1   0   0]
 [  0   0 141   4   1   0]
 [  0   0   1  99   0   1]
 [  0   0   0   2  70   2]
 [  0   0   0   1   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,1,1.0,0.9640287769784173,5.792766663529135,80.05425930023193,90.7105720640506,"[[ 59   0   0   0   0   0]
 [  0  76   5   0   0   0]
 [  0   0 142   3   1   0]
 [  0   0   1  97   2   1]
 [  0   0   0   2  70   2]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,2,1.0,0.972972972972973,5.838407932343632,82.25219249725342,95.93907580327371,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 142   2   1   0]
 [  0   0   1  98   2   0]
 [  0   0   0   2  68   4]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,3,1.0,0.9693693693693693,5.818442105344076,84.55100059509277,92.38612204120155,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0  98   3   0]
 [  0   0   0   0  69   5]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,4,1.0,0.954954954954955,5.739212283262968,87.44971752166748,95.93863567741045,"[[ 57   1   1   0   0   0]
 [  2  73   5   0   0   0]
 [  0   1 141   4   0   0]
 [  0   0   4  95   1   1]
 [  0   0   0   1  71   2]
 [  0   0   0   1   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,5,1.0,0.9747292418772563,5.847646430567684,84.6510648727417,95.95875771334634,"[[ 58   0   0   1   0   0]
 [  1  78   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   1   3  95   1   1]
 [  0   0   0   2  71   1]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,6,1.0,0.9657039711191335,5.807364930997985,79.35066223144531,95.95831749517168,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   2 141   3   0   0]
 [  0   0   3  95   3   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,7,1.0,0.9638336347197106,5.785667272472265,79.75375652313232,97.85950732309367,"[[ 59   0   0   0   0   0]
 [  0  75   2   3   0   0]
 [  0   0 144   2   0   0]
 [  0   0   2  96   3   0]
 [  0   0   0   2  70   1]
 [  0   0   0   0   5  89]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,8,1.0,0.9619565217391305,5.779675355853466,59.16430950164795,127.98868860914271,"[[ 59   0   0   0   0   0]
 [  0  75   3   1   1   0]
 [  0   0 140   4   1   0]
 [  0   1   1  95   4   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,2,9,1.0,0.9673321234119783,5.803810626979262,54.367756843566895,161.05745211136872,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   1 141   2   1   0]
 [  0   0   2  97   1   0]
 [  0   0   0   0  66   7]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,0,1.0,0.960431654676259,5.773926984937784,71.45617008209229,94.11041692932594,"[[ 59   0   0   0   0   0]
 [  0  78   2   1   0   0]
 [  0   2 143   1   0   0]
 [  0   0   5  92   4   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   5  90]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,1,1.0,0.9586330935251799,5.742045202933706,88.64908218383789,81.77102367120861,"[[ 59   0   0   0   0   0]
 [  1  75   4   1   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0  97   4   0]
 [  0   0   0   1  67   6]
 [  0   0   0   0   4  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,2,1.0,0.9603603603603603,5.76597499872598,97.74291515350342,92.38530578319312,"[[ 58   0   0   1   0   0]
 [  2  72   5   1   0   0]
 [  0   1 139   5   1   0]
 [  0   0   0  99   2   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   0  95]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,3,1.0,0.9675675675675676,5.807704121876522,98.94378185272217,99.77623603191606,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 141   2   2   0]
 [  0   0   0  98   3   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,4,1.0,0.9783783783783784,5.87345628013501,83.64894390106201,97.81981179382342,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   3  69   2]
 [  0   0   0   1   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,5,1.0,0.9693140794223827,5.826063101194901,81.55326843261719,89.10213734276572,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   1 142   2   1   0]
 [  0   0   2  98   0   1]
 [  0   0   0   2  70   2]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,6,1.0,0.9638989169675091,5.78241912324517,76.85573101043701,99.76863918142445,"[[ 57   2   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   0  98   1   2]
 [  0   0   0   0  70   4]
 [  0   0   0   0   3  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,7,1.0,0.976491862567812,5.867845850044305,77.65593528747559,73.39351476624569,"[[ 57   0   2   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,8,1.0,0.9601449275362319,5.775106801778329,81.54971599578857,94.18508394631642,"[[ 57   0   2   0   0   0]
 [  0  77   2   1   0   0]
 [  0   1 139   4   1   0]
 [  0   2   3  95   1   0]
 [  0   0   0   1  71   1]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,3,9,1.0,0.9618874773139746,5.778981595075168,78.65285873413086,89.15801675687462,"[[ 58   0   1   0   0   0]
 [  0  76   3   0   1   0]
 [  0   0 144   1   0   0]
 [  0   0   5  91   3   1]
 [  0   0   0   1  69   3]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,0,1.0,0.9676258992805755,5.802658065168935,84.85250473022461,94.08458475649493,"[[ 58   0   1   0   0   0]
 [  0  77   3   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   2  67   5]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,1,1.0,0.9838129496402878,5.897219882310898,80.55393695831299,94.11126412598189,"[[ 58   0   1   0   0   0]
 [  1  78   1   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,2,1.0,0.9765765765765766,5.8571959913793465,57.16524124145508,95.93907580327371,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   1 144   1   0   0]
 [  0   1   1  95   4   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   1  94]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,3,1.0,0.9495495495495495,5.710621067659269,83.55228900909424,94.12929564887044,"[[ 59   0   0   0   0   0]
 [  0  75   4   0   1   0]
 [  0   1 139   4   2   0]
 [  0   0   3  93   4   1]
 [  0   0   0   2  69   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,4,1.0,0.9675675675675676,5.807453758782988,85.44995784759521,97.8207269085104,"[[ 57   2   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 140   5   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   3  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,5,1.0,0.9620938628158845,5.77997046675611,82.55233764648438,94.14775060585995,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   2 140   2   2   0]
 [  0   0   1  99   1   0]
 [  0   0   0   4  68   2]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,6,1.0,0.9584837545126353,5.760449063720845,85.95054149627686,90.72531716186505,"[[ 56   2   0   1   0   0]
 [  0  77   3   0   0   0]
 [  0   2 140   4   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   1  70   3]
 [  0   0   0   1   2  91]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,7,1.0,0.9674502712477396,5.804980750873079,86.64999008178711,97.86133832087313,"[[ 59   0   0   0   0   0]
 [  0  77   2   0   1   0]
 [  0   0 144   2   0   0]
 [  0   1   2  94   3   1]
 [  0   0   0   2  68   3]
 [  0   0   0   0   1  93]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,8,1.0,0.9619565217391305,5.787482671201766,80.85019588470459,97.88049982734739,"[[ 59   0   0   0   0   0]
 [  0  71   9   0   0   0]
 [  0   1 142   1   1   0]
 [  0   1   2  95   3   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
KNN,40,4,9,1.0,0.956442831215971,5.752298222837838,72.05727100372314,90.77635065457126,"[[ 59   0   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   1 140   4   0   0]
 [  0   0   3  94   2   1]
 [  0   0   0   1  71   1]
 [  0   0   0   0   7  87]]","KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='distance')"
SVM,40,0,0,1.0,0.9856115107913669,5.919080946433849,1796.4976131916048,226.53613269174338,"[[ 59   0   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,1,1.0,0.987410071942446,5.931413609446295,1940.7147765159607,262.5192155148898,"[[ 59   0   0   0   0   0]
 [  0  78   2   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,2,1.0,0.9837837837837838,5.9061316501015835,1645.0839579105377,262.5817679256011,"[[ 59   0   0   0   0   0]
 [  1  78   0   1   0   0]
 [  0   2 142   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,3,1.0,0.9873873873873874,5.918744213818832,1783.9550077915192,249.45189649852355,"[[ 58   0   0   0   1   0]
 [  1  77   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,4,1.0,0.9891891891891892,5.940635531875739,1835.7751667499545,237.5482727861744,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   0 146   0   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,5,1.0,0.9891696750902527,5.938642111724899,1872.7795124053955,262.6443250489501,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,6,1.0,0.98014440433213,5.880812517617893,1902.2122919559479,237.62020797031988,"[[ 58   0   1   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   1   5  88]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,7,0.9995990376904571,0.9891500904159132,5.938627781098805,1808.3657562732699,237.84618582101615,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  1   0 142   2   1   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,8,1.0,0.9927536231884058,5.951628203231366,1851.5908420085907,249.59603343336616,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 145   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,0,9,1.0,0.9891107078039928,5.939982670213147,1801.8693804740903,262.79242317463894,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   0  99   0   1]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,0,1.0,0.9964028776978417,5.983249694832497,1965.7009065151217,249.40186603392297,"[[ 59   0   0   0   0   0]
 [  0  81   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,1,1.0,0.9820143884892086,5.895587092851387,1775.684279203415,262.5291041133417,"[[ 59   0   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   1 144   1   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   1   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,2,1.0,0.990990990990991,5.948357824975385,2014.22318816185,262.37093031853584,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,3,0.9991977537103891,0.9837837837837838,5.906107397806357,1620.0233519077299,237.7346021008204,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   1 142   1   2   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,4,1.0,0.9891891891891892,5.941314726182225,1799.0958452224731,249.43404471504155,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,5,1.0,0.98014440433213,5.874913899887356,1739.205002784729,207.8955408061386,"[[ 56   1   1   0   1   0]
 [  0  77   3   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,6,0.9991979145779025,0.9909747292418772,5.9436632179875115,1852.8404593467712,208.07132388118023,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,7,1.0,0.9927667269439421,5.958070603741154,1825.430989265442,262.68049910098864,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,8,1.0,0.9818840579710145,5.896317371367612,1932.419592142105,217.04576968249813,"[[ 59   0   0   0   0   0]
 [  1  74   5   0   0   0]
 [  0   0 143   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,1,9,1.0,0.9872958257713249,5.924095535640498,1850.566953420639,262.78252465783356,"[[ 59   0   0   0   0   0]
 [  0  77   1   2   0   0]
 [  1   0 144   0   0   0]
 [  0   1   1  98   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,0,1.0,0.987410071942446,5.930340632014786,1825.6307005882263,249.40484098282224,"[[ 59   0   0   0   0   0]
 [  0  80   1   0   0   0]
 [  1   1 143   1   0   0]
 [  0   2   1  98   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,1,1.0,0.9910071942446043,5.954405952570271,1833.201265335083,226.89504659795696,"[[ 59   0   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,2,0.9991977537103891,0.9837837837837838,5.901107754050589,1757.9444468021395,237.56716244650707,"[[ 59   0   0   0   0   0]
 [  2  76   2   0   0   0]
 [  0   0 143   2   1   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,3,1.0,0.9837837837837838,5.912560259169832,1684.3116402626038,249.42511978142545,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,4,1.0,0.9945945945945946,5.96400501184198,2069.0167367458344,249.445945620117,"[[ 58   0   0   0   1   0]
 [  0  79   1   0   0   0]
 [  0   0 146   0   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,5,0.9991979145779025,0.983754512635379,5.902116049270885,1811.564040184021,237.79039205814465,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,6,1.0,0.9855595667870036,5.910011861983877,1792.4251794815063,262.62453917206733,"[[ 59   0   0   0   0   0]
 [  1  77   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  91]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,7,1.0,0.9909584086799277,5.947653014067536,1850.7169902324677,262.69699084502975,"[[ 58   0   1   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   1   0  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,8,1.0,0.9855072463768116,5.916518728261176,1714.7942066192627,237.69660193792203,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,2,9,1.0,0.9909255898366606,5.954113828856321,2083.158940076828,249.6728653785465,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   2 142   1   0   0]
 [  0   0   1  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,0,1.0,0.9856115107913669,5.920267512754843,1781.7059099674225,249.39591634903394,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   0 145   1   0   0]
 [  0   1   0  99   0   1]
 [  0   0   0   1  73   0]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,1,1.0,0.9838129496402878,5.913828641374413,1957.1798801422117,262.5126235297678,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,2,1.0,0.9891891891891892,5.933623568968554,1742.178225517273,262.3248547170724,"[[ 58   1   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,3,1.0,0.9927927927927928,5.958909268057229,1827.779597043991,249.44297028738472,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,4,1.0,0.9891891891891892,5.933887568025748,1718.2920277118683,262.5784709821037,"[[ 58   1   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,5,1.0,0.9855595667870036,5.91710663823381,1931.0954093933103,262.63113413312294,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   2 144   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   1   1  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,6,1.0,0.9963898916967509,5.980737728068688,1857.0628404617312,249.49597489120004,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,7,1.0,0.976491862567812,5.852817181827333,1794.873517751694,262.67720100065605,"[[ 58   0   0   0   1   0]
 [  2  76   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,8,1.0,0.9909420289855072,5.947389921098646,1804.642993211746,262.4925694937031,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 145   0   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,3,9,0.9991983967935871,0.9891107078039928,5.931983506663601,1775.859296321869,217.07126220300708,"[[ 59   0   0   0   0   0]
 [  2  78   0   0   0   0]
 [  0   0 142   2   1   0]
 [  0   0   0 100   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,0,1.0,0.9892086330935251,5.937817459185596,2088.605761528015,237.50602538796178,"[[ 58   0   0   0   1   0]
 [  0  78   3   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,1,1.0,0.9892086330935251,5.9376942688235355,1764.9403512477875,262.51591948094625,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   0 145   1   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   0  95]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,2,1.0,0.9837837837837838,5.901574725828579,1788.4271442890167,237.57525893490035,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  1   0 144   1   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,3,1.0,0.9945945945945946,5.965134357068829,1884.0974628925321,207.89104570931002,"[[ 59   0   0   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,4,1.0,0.9819819819819819,5.885224351608187,1794.1238462924957,262.5751741213972,"[[ 58   1   0   0   0   0]
 [  1  77   1   1   0   0]
 [  0   1 144   1   0   0]
 [  0   1   0 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   3  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,5,1.0,0.9891696750902527,5.933833305119036,1902.6121020317078,277.21885209119927,"[[ 59   0   0   0   0   0]
 [  0  78   0   2   0   0]
 [  0   1 144   0   1   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,6,0.9995989572889513,0.9909747292418772,5.943263488458217,1828.6291360855103,226.63438627699986,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,7,0.9993985565356857,0.9855334538878843,5.90567982935874,1784.904044866562,226.85926579681941,"[[ 59   0   0   0   0   0]
 [  2  78   0   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=5,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,8,1.0,0.9836956521739131,5.913163477808943,1776.458960771561,277.3226778190554,"[[ 58   1   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
SVM,40,4,9,1.0,0.9836660617059891,5.910693579104548,1773.1359362602234,249.64010733611963,"[[ 59   0   0   0   0   0]
 [  0  73   7   0   0   0]
 [  0   1 144   0   0   0]
 [  0   0   0 100   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","SVC(C=1.0, cache_size=200, class_weight=None, coef0=10,
  decision_function_shape='ovr', degree=5, gamma='auto', kernel='poly',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)"
RF,40,0,0,0.9997993981945837,0.9622302158273381,5.775596993503749,1267.075538635254,131.1961889667986,"[[ 58   0   1   0   0   0]
 [  1  76   4   0   0   0]
 [  0   0 143   2   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   4  68   2]
 [  0   0   0   1   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,1,0.9997993981945837,0.9784172661870504,5.874993389355957,1319.3447828292847,127.89232985982642,"[[ 59   0   0   0   0   0]
 [  0  81   0   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   2  96   3   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,2,1.0,0.9819819819819819,5.8946281045056335,1226.3999700546265,131.28511449623872,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,3,0.9997994384275972,0.9765765765765766,5.8661053618395185,1329.939579963684,131.28511449623872,"[[ 59   0   0   0   0   0]
 [  2  76   2   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   3  97   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   1   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,4,0.9997994384275972,0.9711711711711711,5.82416123749754,1220.2012538909912,121.67942690605372,"[[ 57   2   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 146   0   0   0]
 [  0   1   3  95   1   1]
 [  0   0   0   2  71   1]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,5,0.9997994786444756,0.9602888086642599,5.766655074008835,1518.9308643341064,116.04306219910615,"[[ 58   0   0   1   0   0]
 [  1  77   2   0   0   0]
 [  0   1 142   1   2   0]
 [  0   2   5  94   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,6,1.0,0.9512635379061372,5.730239252441976,1393.9038515090942,131.31391830905412,"[[ 59   0   0   0   0   0]
 [  2  70   8   0   0   0]
 [  0   0 138   7   1   0]
 [  0   0   2  97   2   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   4  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,7,1.0,0.9783001808318263,5.884649072782675,1254.782748222351,131.33777599423158,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   2 141   3   0   0]
 [  0   0   3  97   0   1]
 [  0   0   0   1  70   2]
 [  0   0   0   0   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,8,1.0,0.9710144927536232,5.8313922022096945,1302.8556823730469,124.79801671980486,"[[ 57   1   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 140   4   0   0]
 [  0   1   1  97   2   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   0  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,0,9,0.9997995991983968,0.9637023593466425,5.799204008406378,1352.1263599395752,131.3871382351766,"[[ 59   0   0   0   0   0]
 [  0  75   4   1   0   0]
 [  0   1 140   4   0   0]
 [  0   0   3  96   0   1]
 [  0   0   0   2  69   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,0,1.0,0.9694244604316546,5.828637585445313,1224.3999242782593,124.69721448920222,"[[ 58   0   1   0   0   0]
 [  0  78   2   1   0   0]
 [  0   0 140   4   2   0]
 [  0   1   2  98   0   0]
 [  0   0   0   0  70   4]
 [  0   0   0   0   0  95]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,1,1.0,0.9640287769784173,5.804255298146587,1332.5379610061646,124.69498347712278,"[[ 58   0   1   0   0   0]
 [  0  79   2   0   0   0]
 [  0   0 142   4   0   0]
 [  0   1   6  94   0   0]
 [  0   0   0   0  70   4]
 [  0   0   0   1   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,2,1.0,0.972972972972973,5.85381677467734,1250.385046005249,121.6801348920365,"[[ 58   1   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   4  96   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,3,1.0,0.9567567567567568,5.7474362563951775,1263.4776830673218,124.72074132693741,"[[ 58   1   0   0   0   0]
 [  0  76   3   1   0   0]
 [  0   0 143   3   0   0]
 [  0   3   4  93   1   0]
 [  0   0   0   2  70   2]
 [  0   0   0   1   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,4,1.0,0.9747747747747748,5.854235569793402,1449.471378326416,118.83217837499338,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 142   2   0   0]
 [  0   1   1  98   1   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,5,0.9997994786444756,0.9675090252707581,5.812172804744976,1237.2920989990234,121.70099869373459,"[[ 57   1   1   0   0   0]
 [  1  78   1   0   0   0]
 [  0   0 143   1   2   0]
 [  0   0   5  95   1   0]
 [  0   0   0   0  74   0]
 [  0   0   0   1   4  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,6,1.0,0.9783393501805054,5.882818929850253,1268.9743518829346,121.70383112324306,"[[ 58   0   0   1   0   0]
 [  0  80   0   0   0   0]
 [  0   4 140   2   0   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,7,1.0,0.9620253164556962,5.7730299594723755,1357.2218179702759,124.7737462291285,"[[ 58   1   0   0   0   0]
 [  2  75   3   0   0   0]
 [  0   4 139   3   0   0]
 [  0   0   1  99   0   1]
 [  0   0   0   2  68   3]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,8,0.9995991180597315,0.9728260869565217,5.844991371685466,1242.6889181137085,124.79578389091272,"[[ 58   0   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 141   4   0   0]
 [  0   0   0  97   3   1]
 [  0   0   0   0  72   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,1,9,1.0,0.9637023593466425,5.789526162509734,1345.430874824524,124.82898714990775,"[[ 59   0   0   0   0   0]
 [  2  75   3   0   0   0]
 [  0   0 140   4   1   0]
 [  0   2   3  94   1   0]
 [  0   0   0   0  71   2]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,0,1.0,0.960431654676259,5.770713924078404,1423.9851474761963,121.65502268886438,"[[ 57   0   2   0   0   0]
 [  0  75   6   0   0   0]
 [  0   2 143   1   0   0]
 [  0   1   2  97   0   1]
 [  0   0   0   1  68   5]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,1,1.0,0.9766187050359713,5.868340471440857,1264.5772218704224,118.75571064784342,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   0 144   2   0   0]
 [  0   2   1  98   0   0]
 [  0   0   0   1  72   1]
 [  0   0   0   1   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,2,0.9997994384275972,0.9513513513513514,5.725180494944906,1343.1311130523682,118.78358122608337,"[[ 57   1   1   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   8  89   4   0]
 [  0   0   0   1  72   1]
 [  0   0   0   0   6  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,3,1.0,0.9585585585585585,5.767444558608077,1268.6745405197144,106.14125780881302,"[[ 59   0   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   5 136   3   2   0]
 [  0   4   0  97   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,4,1.0,0.9675675675675676,5.823784352812324,1629.3683290481567,118.77481097683221,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 138   8   0   0]
 [  0   0   1  98   2   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,5,1.0,0.9657039711191335,5.80203687160959,1391.3042068481445,116.09072166142971,"[[ 58   1   0   0   0   0]
 [  1  76   2   1   0   0]
 [  1   0 140   5   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   2  71   1]
 [  0   0   0   1   1  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,6,1.0,0.9729241877256317,5.830887135395329,1263.9772415161133,118.76490621505593,"[[ 58   1   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   0 144   1   1   0]
 [  0   0   1 100   0   0]
 [  0   0   0   2  68   4]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,7,0.9997995188452286,0.969258589511754,5.811769575371374,1263.8767719268799,118.83392795109214,"[[ 57   1   1   0   0   0]
 [  1  79   0   0   0   0]
 [  0   0 144   1   1   0]
 [  0   0   3  97   1   0]
 [  0   0   0   1  71   1]
 [  0   0   0   2   4  88]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,8,1.0,0.9728260869565217,5.825856399571546,1380.01070022583,118.85505149156236,"[[ 57   0   1   1   0   0]
 [  0  78   1   0   1   0]
 [  0   0 145   0   0   0]
 [  0   0   1  97   3   0]
 [  0   0   0   2  68   3]
 [  0   0   0   1   1  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,2,9,1.0,0.9782214156079855,5.873040173268107,1224.501395225525,118.88022538000058,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 143   1   0   0]
 [  0   0   2  97   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,0,1.0,0.9586330935251799,5.7595269805712075,1303.1553268432617,113.35895297010799,"[[ 57   0   1   1   0   0]
 [  0  79   2   0   0   0]
 [  0   0 141   4   1   0]
 [  0   0   4  96   1   0]
 [  0   0   0   0  69   5]
 [  0   0   0   0   4  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,1,1.0,0.960431654676259,5.780402546375348,1238.0943775177002,115.99394993516714,"[[ 59   0   0   0   0   0]
 [  0  74   7   0   0   0]
 [  0   1 142   3   0   0]
 [  0   0   3  96   1   1]
 [  0   0   0   2  69   3]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,2,1.0,0.9657657657657658,5.798761134112382,1249.8853206634521,116.0191494372542,"[[ 57   1   1   0   0   0]
 [  0  76   3   1   0   0]
 [  2   1 139   4   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,3,1.0,0.9783783783783784,5.875203017843473,1387.4066829681396,113.38353715524273,"[[ 59   0   0   0   0   0]
 [  0  79   0   0   1   0]
 [  0   1 143   1   1   0]
 [  0   1   3  96   1   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   0  95]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,4,1.0,0.9567567567567568,5.749080080603542,1259.7793817520142,113.3816929807339,"[[ 58   1   0   0   0   0]
 [  0  74   5   1   0   0]
 [  0   1 141   3   1   0]
 [  0   0   3  98   0   0]
 [  0   0   0   2  66   6]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,5,0.9997994786444756,0.9765342960288809,5.86508282750356,1288.6642932891846,110.84023913315512,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   2  71   1]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,6,0.9995989572889513,0.9729241877256317,5.851271111564896,1436.1786603927612,113.40689239719987,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 142   3   0   0]
 [  0   2   2  97   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   3   2  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,7,1.0,0.9855334538878843,5.9200229802517805,1270.374083518982,116.0676191484781,"[[ 58   0   1   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   1  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,8,0.9997995590298657,0.9655797101449275,5.8078478440218335,1325.6417036056519,116.0889563863741,"[[ 59   0   0   0   0   0]
 [  2  76   1   1   0   0]
 [  0   1 137   7   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   5  89]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,3,9,1.0,0.9582577132486388,5.746674501055006,1270.4735040664673,116.11029291403892,"[[ 58   1   0   0   0   0]
 [  1  76   3   0   0   0]
 [  0   2 142   1   0   0]
 [  0   2   3  92   3   0]
 [  0   0   0   2  69   2]
 [  0   0   0   0   3  91]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,0,1.0,0.9676258992805755,5.80518155524141,1252.7831077575684,113.36018216653584,"[[ 56   2   1   0   0   0]
 [  0  77   4   0   0   0]
 [  0   1 143   1   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   3  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,1,1.0,0.9568345323741008,5.763273693653225,1327.7410745620728,110.842188786407,"[[ 58   0   1   0   0   0]
 [  0  78   3   0   0   0]
 [  0   2 137   7   0   0]
 [  0   0   1  97   2   1]
 [  0   0   0   0  72   2]
 [  0   0   0   3   2  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,2,1.0,0.9855855855855856,5.913766510397109,1271.072268486023,108.44975338138052,"[[ 59   0   0   0   0   0]
 [  1  78   1   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   2  93]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,3,0.9997994384275972,0.9603603603603603,5.774939933254325,1531.4258575439453,108.45369032109151,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 140   4   0   0]
 [  0   1   1  96   1   2]
 [  0   0   0   3  68   3]
 [  0   0   1   1   1  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,4,1.0,0.963963963963964,5.790301897626455,1326.8409967422485,108.4514406062569,"[[ 57   2   0   0   0   0]
 [  0  77   3   0   0   0]
 [  1   0 140   4   1   0]
 [  0   1   3  97   0   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   1  94]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,5,0.9997994786444756,0.9657039711191335,5.80024554591531,1243.7898397445679,99.79148619836859,"[[ 58   0   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   2 142   2   0   0]
 [  1   0   3  96   1   0]
 [  0   0   0   1  71   2]
 [  0   0   0   1   3  90]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,6,1.0,0.9548736462093863,5.7350773025097,1247.3860502243042,108.47319179771422,"[[ 58   1   0   0   0   0]
 [  0  71   7   2   0   0]
 [  0   0 143   3   0   0]
 [  0   0   2  97   2   0]
 [  0   0   0   2  68   4]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,7,1.0,0.9746835443037974,5.857807918864662,1427.6833772659302,110.9088942159675,"[[ 59   0   0   0   0   0]
 [  1  78   0   0   0   1]
 [  0   1 143   1   1   0]
 [  0   2   5  94   0   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,8,1.0,0.9764492753623188,5.861317962385399,1261.180830001831,110.93112935915435,"[[ 58   0   1   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 143   1   1   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   2  92]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
RF,40,4,9,1.0,0.9618874773139746,5.772794520806299,1298.557424545288,113.47388345256044,"[[ 57   0   1   1   0   0]
 [  0  77   3   0   0   0]
 [  0   0 143   2   0   0]
 [  0   0   3  96   1   0]
 [  0   0   0   2  69   2]
 [  0   0   0   0   6  88]]","RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators=30, n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
NN,40,0,0,0.992778335005015,0.9784172661870504,5.875864063285284,7664.717698097229,356.2610615022531,"[[ 59   0   0   0   0   0]
 [  0  77   4   0   0   0]
 [  0   0 145   1   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   2  70   2]
 [  0   0   0   1   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,1,0.9951855566700101,0.9892086330935251,5.936378841142535,7827.624797821045,356.2671319265558,"[[ 59   0   0   0   0   0]
 [  1  78   2   0   0   0]
 [  0   1 145   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,2,0.9927797833935018,0.9837837837837838,5.9064154770642885,7687.504839897156,415.72010222157525,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   2 142   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,3,0.9921780986762936,0.9837837837837838,5.904330248125217,7313.4180545806885,356.3446716053876,"[[ 58   1   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,4,0.9883674288006418,0.9783783783783784,5.880688905131225,8130.851483345032,356.2900324128665,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   2 142   2   0   0]
 [  0   0   2  97   0   2]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,5,0.9905754962903549,0.98014440433213,5.882455461766318,7927.167844772339,453.62265069283615,"[[ 59   0   0   0   0   0]
 [  0  78   1   0   0   1]
 [  0   0 144   1   1   0]
 [  0   0   1  98   2   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,6,0.9903749749348305,0.9747292418772563,5.859705433624459,7556.279730796814,356.40399472652683,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   3 139   4   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,7,0.9929831595829992,0.9710669077757685,5.828247064861874,7248.056387901306,415.88685717633723,"[[ 58   1   0   0   0   0]
 [  0  78   0   1   0   1]
 [  0   0 144   2   0   0]
 [  0   0   4  95   2   0]
 [  0   0   0   1  69   3]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,8,0.9925836841050311,0.9710144927536232,5.828300024332482,7121.928262710571,332.814560145753,"[[ 59   0   0   0   0   0]
 [  0  77   2   1   0   0]
 [  0   0 143   2   0   0]
 [  0   1   2  97   1   0]
 [  0   0   0   0  67   6]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,0,9,0.9931863727454909,0.9909255898366606,5.948184011463877,7611.44700050354,356.63054779600566,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 144   0   0   0]
 [  0   0   1  99   0   0]
 [  0   0   0   1  72   0]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,0,0.98716148445336,0.9658273381294964,5.8053916991709515,7905.77974319458,332.5054139277595,"[[ 59   0   0   0   0   0]
 [  0  76   5   0   0   0]
 [  0   0 143   2   1   0]
 [  0   0   3  97   1   0]
 [  0   0   0   2  69   3]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,1,0.9789368104312939,0.9676258992805755,5.814288787839921,7578.267216682434,332.5265663444334,"[[ 59   0   0   0   0   0]
 [  0  79   2   0   0   0]
 [  0   2 140   4   0   0]
 [  0   0   1  97   3   0]
 [  0   0   0   1  71   2]
 [  0   0   0   0   3  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,2,0.98455675892499,0.9711711711711711,5.842514871975953,7061.56268119812,293.45943536995554,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   4 141   1   0   0]
 [  0   0   5  95   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,3,0.9893702366626554,0.9747747747747748,5.856511764307202,7432.850074768066,356.27789264550177,"[[ 59   0   0   0   0   0]
 [  1  73   5   1   0   0]
 [  0   1 145   0   0   0]
 [  0   0   3  96   2   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,4,0.9897713598074609,0.9801801801801802,5.890119438884313,7725.18355846405,383.7492612740465,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 142   4   0   0]
 [  0   1   0  99   0   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,5,0.9871666332464407,0.9657039711191335,5.787952433721243,8089.075636863708,356.4222139267467,"[[ 57   2   0   0   0   0]
 [  0  74   4   2   0   0]
 [  0   3 142   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   1  70   3]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,6,0.9851614196911971,0.98014440433213,5.882065297782219,7946.156740188599,383.7558075512863,"[[ 58   1   0   0   0   0]
 [  0  78   1   0   1   0]
 [  0   0 143   3   0   0]
 [  0   1   1  99   0   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,7,0.9917802726543705,0.9873417721518988,5.92861562505229,7211.876821517944,415.9033924468834,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   2   0   0]
 [  0   0   0 100   1   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,8,0.9883744237322108,0.9692028985507246,5.82217692467241,8513.832640647888,416.0446686467111,"[[ 58   0   0   0   1   0]
 [  0  78   2   0   0   0]
 [  0   1 142   2   0   0]
 [  0   0   3  96   0   2]
 [  0   0   0   0  72   1]
 [  0   0   0   0   5  89]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,1,9,0.9809619238476954,0.9727767695099818,5.841134756268456,7790.545773506165,277.3415087634896,"[[ 59   0   0   0   0   0]
 [  1  75   2   0   0   2]
 [  0   1 140   3   1   0]
 [  0   0   1  99   0   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,0,0.9909729187562688,0.9802158273381295,5.872378514071294,7425.054359436035,415.6780405219984,"[[ 58   1   0   0   0   0]
 [  0  79   1   1   0   0]
 [  0   0 146   0   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  69   4]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,1,0.9879638916750251,0.9820143884892086,5.897572018782776,7527.396106719971,383.6863771863086,"[[ 59   0   0   0   0   0]
 [  0  81   0   0   0   0]
 [  1   3 141   1   0   0]
 [  0   0   1  98   1   1]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,2,0.9903730445246691,0.9783783783783784,5.868338628196208,7791.744637489319,311.79627478966233,"[[ 57   1   1   0   0   0]
 [  0  78   1   1   0   0]
 [  0   0 145   1   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   4  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,3,0.9887685519454472,0.972972972972973,5.854448514497241,7918.573045730591,383.7633453662858,"[[ 59   0   0   0   0   0]
 [  0  75   5   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   4  97   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,4,0.9863618130766145,0.9765765765765766,5.87128551115455,8036.005663871766,383.7633453662858,"[[ 59   0   0   0   0   0]
 [  0  77   1   2   0   0]
 [  0   2 140   3   1   0]
 [  0   0   1  99   0   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,5,0.9899739322237818,0.9765342960288809,5.864619532788699,7710.191488265991,415.7869490579057,"[[ 59   0   0   0   0   0]
 [  1  77   1   0   0   1]
 [  0   0 143   3   0   0]
 [  0   0   2  98   0   1]
 [  0   0   0   0  71   3]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,6,0.9899739322237818,0.9693140794223827,5.8290200292484435,7249.85499382019,332.64410627383137,"[[ 59   0   0   0   0   0]
 [  0  74   6   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  71   3]
 [  0   0   0   0   2  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,7,0.9899759422614274,0.976491862567812,5.870761264504765,7426.154255867004,383.88205931099435,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   2 144   0   0   0]
 [  0   1   3  96   0   1]
 [  0   0   0   0  72   1]
 [  0   0   0   1   1  92]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,8,0.9801563439567047,0.9782608695652174,5.879520896628126,7791.845178604126,332.7933880626636,"[[ 58   0   1   0   0   0]
 [  0  76   3   0   0   1]
 [  0   0 145   0   0   0]
 [  0   1   4  96   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,2,9,0.9915831663326653,0.9818511796733213,5.902020405370232,8123.456072807311,416.1032417792548,"[[ 59   0   0   0   0   0]
 [  0  80   0   0   0   0]
 [  0   5 138   1   1   0]
 [  0   0   1  99   0   0]
 [  0   0   0   1  71   1]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,0,0.9899699097291875,0.987410071942446,5.929215088338222,7435.749244689941,383.7356697632554,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   1]
 [  0   1 143   1   1   0]
 [  0   0   1 100   0   0]
 [  0   0   0   0  74   0]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,1,0.9917753259779338,0.9856115107913669,5.916652816987342,7905.38055896759,453.4407286352092,"[[ 59   0   0   0   0   0]
 [  0  77   3   1   0   0]
 [  0   2 144   0   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,2,0.9907741676694746,0.9693693693693693,5.830071350490634,7709.791731834412,415.7283663775507,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   1 143   2   0   0]
 [  0   2   5  93   1   0]
 [  0   0   0   0  70   4]
 [  0   0   0   1   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,3,0.99117529081428,0.9819819819819819,5.904163815158926,7579.666018486023,356.2900324128665,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   1  73   0]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,4,0.9887685519454472,0.9801801801801802,5.875482852147304,7565.374636650085,383.7703878000908,"[[ 57   2   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 145   0   0   0]
 [  0   1   1  98   0   1]
 [  0   0   0   1  71   2]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,5,0.9927812312011229,0.9747292418772563,5.847697880908407,7438.247108459473,311.86345882262003,"[[ 59   0   0   0   0   0]
 [  0  77   1   1   0   1]
 [  0   1 143   1   1   0]
 [  0   0   1 100   0   0]
 [  0   0   0   1  68   5]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,6,0.9875676759574895,0.9747292418772563,5.855916060574605,7245.757293701172,383.8191835585472,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 142   4   0   0]
 [  0   0   1 100   0   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,7,0.9929831595829992,0.9873417721518988,5.927912366717874,7789.846515655518,332.76372811955093,"[[ 58   1   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   2 144   0   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,8,0.9903788334335538,0.9746376811594203,5.868395695768239,7747.270774841309,356.58338282815095,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   2 138   4   1   0]
 [  0   0   2  98   0   1]
 [  0   0   0   0  72   1]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,3,9,0.9923847695390782,0.9745916515426497,5.865325861906715,8941.388297080994,262.78582408058,"[[ 59   0   0   0   0   0]
 [  0  77   3   0   0   0]
 [  0   0 140   5   0   0]
 [  0   0   2  97   1   0]
 [  0   0   0   0  73   0]
 [  0   0   0   0   3  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,0,0.9913741223671013,0.9838129496402878,5.906156046178648,7471.128606796265,356.3096306897553,"[[ 58   0   1   0   0   0]
 [  0  80   1   0   0   0]
 [  0   0 144   2   0   0]
 [  0   0   1  99   1   0]
 [  0   0   0   0  73   1]
 [  0   0   0   0   2  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,1,0.9865596790371113,0.9730215827338129,5.827396644696812,6895.857667922974,383.67229591879703,"[[ 57   2   0   0   0   0]
 [  0  78   2   1   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 101   0   0]
 [  0   0   0   2  70   2]
 [  0   0   0   0   4  91]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,2,0.9921780986762936,0.9855855855855856,5.9139936564679365,7638.533067703247,311.8195199232429,"[[ 58   1   0   0   0   0]
 [  0  78   1   0   0   1]
 [  0   0 146   0   0   0]
 [  0   0   2  97   1   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,3,0.9961893301243482,0.9747747747747748,5.845761337238043,7171.699404716492,356.38718034262445,"[[ 57   1   0   0   0   1]
 [  0  76   1   1   1   1]
 [  0   1 144   0   1   0]
 [  0   0   3  98   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   1  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,4,0.9899719213798637,0.9855855855855856,5.92027387347138,7779.15198802948,356.3507436612711,"[[ 59   0   0   0   0   0]
 [  0  79   0   1   0   0]
 [  0   0 144   2   0   0]
 [  0   1   2  98   0   0]
 [  0   0   0   0  72   2]
 [  0   0   0   0   0  95]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,5,0.9897734108682574,0.9747292418772563,5.844222934716429,8975.168895721436,415.82827812524135,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   1 144   1   0   0]
 [  0   0   0 100   0   1]
 [  0   0   0   2  69   3]
 [  0   0   0   0   4  90]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,6,0.991177060356928,0.9765342960288809,5.8747596318343005,7366.787815093994,415.77868423026354,"[[ 59   0   0   0   0   0]
 [  0  78   1   1   0   0]
 [  0   1 139   6   0   0]
 [  0   0   0  99   1   1]
 [  0   0   0   0  73   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,7,0.9903769045709703,0.972875226039783,5.841627505591207,7627.838945388794,415.91992903233546,"[[ 57   2   0   0   0   0]
 [  0  76   4   0   0   0]
 [  0   0 143   3   0   0]
 [  0   0   2  99   0   0]
 [  0   0   0   0  70   3]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,8,0.9859691320905993,0.9746376811594203,5.858599253958645,7375.782918930054,415.9950430252314,"[[ 59   0   0   0   0   0]
 [  0  79   1   0   0   0]
 [  0   4 139   2   0   0]
 [  0   0   2  98   1   0]
 [  0   0   0   0  69   4]
 [  0   0   0   0   0  94]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
NN,40,4,9,0.994188376753507,0.9836660617059891,5.9145354662601015,8137.747621536255,416.0453416740544,"[[ 59   0   0   0   0   0]
 [  0  78   2   0   0   0]
 [  0   0 141   4   0   0]
 [  0   0   1  99   0   0]
 [  0   0   0   0  72   1]
 [  0   0   0   0   1  93]]","MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100, 50, 30), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       nesterovs_momentum=True, power_t=0.5, random_state=None,
       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,
       verbose=False, warm_start=False)"
